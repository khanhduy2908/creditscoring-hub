{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "**Mục tiêu:** Xây dựng mô hình đánh giá điểm tín dụng của khách hàng (credit scoring) dựa trên thông tin giao dịch và các thông tin cá nhân của khách hàng."
      ],
      "metadata": {
        "id": "8mc6D3L2dvmB"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "## **BẢNG ĐÁNH GIÁ MỨC ĐỘ HOÀN THÀNH-NHÓM 2**\n",
        "-----------------------------------\n",
        "|Họ và Tên|MSSV|Mức độ hoàn thành|\n",
        "|----------|------|-----------------|\n",
        "|Cao An Bình|050610220831|x%|\n",
        "|Phạm Hoàng Cẩm Chi|050610220083|x%|\n",
        "|Trương Ngọc Uyên Chi|050610220845|x%|\n",
        "|Ngô Hoàng Khánh Duy|050610220869|100%|\n",
        "|Cao Kỳ Duyên|050610220873|x%|\n"
      ],
      "metadata": {
        "id": "IXKaobSFdfBW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#**1. Tải file dữ liệu, nạp dữ liệu từ file trên vào dataframe**"
      ],
      "metadata": {
        "id": "xqBxQejpeLlT"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "KadZiO7jfaeR"
      },
      "outputs": [],
      "source": [
        "# Import necessary libraries\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.colors as mcolors\n",
        "import warnings\n",
        "import gc\n",
        "import joblib\n",
        "import re\n",
        "import optuna\n",
        "import lightgbm as lgb\n",
        "\n",
        "# Suppress warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "\n",
        "# Scikit-learn modules\n",
        "from sklearn.model_selection import train_test_split, cross_val_score, cross_validate, GridSearchCV\n",
        "from sklearn.preprocessing import StandardScaler, RobustScaler\n",
        "from sklearn.metrics import (classification_report, confusion_matrix, ConfusionMatrixDisplay,\n",
        "                             accuracy_score, precision_score, recall_score, f1_score, roc_auc_score,\n",
        "                             PrecisionRecallDisplay, RocCurveDisplay, roc_curve, auc, make_scorer, precision_recall_curve, average_precision_score)\n",
        "from sklearn.pipeline import Pipeline\n",
        "from sklearn.ensemble import RandomForestClassifier, StackingClassifier\n",
        "from sklearn.feature_selection import RFE\n",
        "\n",
        "# Additional libraries\n",
        "from feature_engine.selection import DropConstantFeatures, DropCorrelatedFeatures, DropDuplicateFeatures\n",
        "from imblearn.over_sampling import BorderlineSMOTE\n",
        "from collections import Counter\n",
        "from imblearn.pipeline import Pipeline as imbpipeline\n",
        "from imblearn.pipeline import make_pipeline\n",
        "from yellowbrick.classifier import ClassPredictionError\n",
        "from xgboost import XGBClassifier\n",
        "from lightgbm import LGBMClassifier\n",
        "from catboost import CatBoostClassifier\n",
        "from datetime import datetime\n",
        "from matplotlib import colors as mcolors"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 273
        },
        "id": "FPPzCnrYhLIu",
        "outputId": "cb7614fb-4f5a-4dd9-c694-d47152d1c272"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>LIMIT_BAL</th>\n",
              "      <th>SEX</th>\n",
              "      <th>EDUCATION</th>\n",
              "      <th>MARRIAGE</th>\n",
              "      <th>AGE</th>\n",
              "      <th>PAY_0</th>\n",
              "      <th>PAY_2</th>\n",
              "      <th>PAY_3</th>\n",
              "      <th>PAY_4</th>\n",
              "      <th>...</th>\n",
              "      <th>BILL_AMT4</th>\n",
              "      <th>BILL_AMT5</th>\n",
              "      <th>BILL_AMT6</th>\n",
              "      <th>PAY_AMT1</th>\n",
              "      <th>PAY_AMT2</th>\n",
              "      <th>PAY_AMT3</th>\n",
              "      <th>PAY_AMT4</th>\n",
              "      <th>PAY_AMT5</th>\n",
              "      <th>PAY_AMT6</th>\n",
              "      <th>default.payment.next.month</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>20000.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>24</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>-1</td>\n",
              "      <td>-1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>689.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>120000.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>26</td>\n",
              "      <td>-1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>3272.0</td>\n",
              "      <td>3455.0</td>\n",
              "      <td>3261.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2000.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>90000.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>14331.0</td>\n",
              "      <td>14948.0</td>\n",
              "      <td>15549.0</td>\n",
              "      <td>1518.0</td>\n",
              "      <td>1500.0</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>50000.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>37</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>28314.0</td>\n",
              "      <td>28959.0</td>\n",
              "      <td>29547.0</td>\n",
              "      <td>2000.0</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>1200.0</td>\n",
              "      <td>1100.0</td>\n",
              "      <td>1069.0</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>50000.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>57</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>20940.0</td>\n",
              "      <td>19146.0</td>\n",
              "      <td>19131.0</td>\n",
              "      <td>2000.0</td>\n",
              "      <td>36681.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>9000.0</td>\n",
              "      <td>689.0</td>\n",
              "      <td>679.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 25 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "   ID  LIMIT_BAL  SEX  EDUCATION  MARRIAGE  AGE  PAY_0  PAY_2  PAY_3  PAY_4  \\\n",
              "0   1    20000.0    2          2         1   24      2      2     -1     -1   \n",
              "1   2   120000.0    2          2         2   26     -1      2      0      0   \n",
              "2   3    90000.0    2          2         2   34      0      0      0      0   \n",
              "3   4    50000.0    2          2         1   37      0      0      0      0   \n",
              "4   5    50000.0    1          2         1   57     -1      0     -1      0   \n",
              "\n",
              "   ...  BILL_AMT4  BILL_AMT5  BILL_AMT6  PAY_AMT1  PAY_AMT2  PAY_AMT3  \\\n",
              "0  ...        0.0        0.0        0.0       0.0     689.0       0.0   \n",
              "1  ...     3272.0     3455.0     3261.0       0.0    1000.0    1000.0   \n",
              "2  ...    14331.0    14948.0    15549.0    1518.0    1500.0    1000.0   \n",
              "3  ...    28314.0    28959.0    29547.0    2000.0    2019.0    1200.0   \n",
              "4  ...    20940.0    19146.0    19131.0    2000.0   36681.0   10000.0   \n",
              "\n",
              "   PAY_AMT4  PAY_AMT5  PAY_AMT6  default.payment.next.month  \n",
              "0       0.0       0.0       0.0                           1  \n",
              "1    1000.0       0.0    2000.0                           1  \n",
              "2    1000.0    1000.0    5000.0                           0  \n",
              "3    1100.0    1069.0    1000.0                           0  \n",
              "4    9000.0     689.0     679.0                           0  \n",
              "\n",
              "[5 rows x 25 columns]"
            ]
          },
          "execution_count": 32,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "np.random.seed(0)\n",
        "\n",
        "df = pd.read_csv('credit_card.csv')\n",
        "df.head()\n",
        "\n",
        "df.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#**2. Thực hiện thống kê mô tả dữ liệu**"
      ],
      "metadata": {
        "id": "zOZJuyyRes-O"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 349
        },
        "id": "fNpCKE4BivqM",
        "outputId": "236fedb5-3a90-4c8f-d69a-ae3cec9209d0"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>LIMIT_BAL</th>\n",
              "      <th>SEX</th>\n",
              "      <th>EDUCATION</th>\n",
              "      <th>MARRIAGE</th>\n",
              "      <th>AGE</th>\n",
              "      <th>PAY_0</th>\n",
              "      <th>PAY_2</th>\n",
              "      <th>PAY_3</th>\n",
              "      <th>PAY_4</th>\n",
              "      <th>PAY_5</th>\n",
              "      <th>...</th>\n",
              "      <th>BILL_AMT4</th>\n",
              "      <th>BILL_AMT5</th>\n",
              "      <th>BILL_AMT6</th>\n",
              "      <th>PAY_AMT1</th>\n",
              "      <th>PAY_AMT2</th>\n",
              "      <th>PAY_AMT3</th>\n",
              "      <th>PAY_AMT4</th>\n",
              "      <th>PAY_AMT5</th>\n",
              "      <th>PAY_AMT6</th>\n",
              "      <th>default.payment.next.month</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>3.000000e+04</td>\n",
              "      <td>30000.00000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "      <td>30000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>167484.322667</td>\n",
              "      <td>1.603733</td>\n",
              "      <td>1.853133</td>\n",
              "      <td>1.551867</td>\n",
              "      <td>35.485500</td>\n",
              "      <td>-0.016700</td>\n",
              "      <td>-0.133767</td>\n",
              "      <td>-0.166200</td>\n",
              "      <td>-0.220667</td>\n",
              "      <td>-0.266200</td>\n",
              "      <td>...</td>\n",
              "      <td>43262.948967</td>\n",
              "      <td>40311.400967</td>\n",
              "      <td>38871.760400</td>\n",
              "      <td>5663.580500</td>\n",
              "      <td>5.921163e+03</td>\n",
              "      <td>5225.68150</td>\n",
              "      <td>4826.076867</td>\n",
              "      <td>4799.387633</td>\n",
              "      <td>5215.502567</td>\n",
              "      <td>0.221200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>129747.661567</td>\n",
              "      <td>0.489129</td>\n",
              "      <td>0.790349</td>\n",
              "      <td>0.521970</td>\n",
              "      <td>9.217904</td>\n",
              "      <td>1.123802</td>\n",
              "      <td>1.197186</td>\n",
              "      <td>1.196868</td>\n",
              "      <td>1.169139</td>\n",
              "      <td>1.133187</td>\n",
              "      <td>...</td>\n",
              "      <td>64332.856134</td>\n",
              "      <td>60797.155770</td>\n",
              "      <td>59554.107537</td>\n",
              "      <td>16563.280354</td>\n",
              "      <td>2.304087e+04</td>\n",
              "      <td>17606.96147</td>\n",
              "      <td>15666.159744</td>\n",
              "      <td>15278.305679</td>\n",
              "      <td>17777.465775</td>\n",
              "      <td>0.415062</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>10000.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>-2.000000</td>\n",
              "      <td>-2.000000</td>\n",
              "      <td>-2.000000</td>\n",
              "      <td>-2.000000</td>\n",
              "      <td>-2.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>-170000.000000</td>\n",
              "      <td>-81334.000000</td>\n",
              "      <td>-339603.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>50000.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>28.000000</td>\n",
              "      <td>-1.000000</td>\n",
              "      <td>-1.000000</td>\n",
              "      <td>-1.000000</td>\n",
              "      <td>-1.000000</td>\n",
              "      <td>-1.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>2326.750000</td>\n",
              "      <td>1763.000000</td>\n",
              "      <td>1256.000000</td>\n",
              "      <td>1000.000000</td>\n",
              "      <td>8.330000e+02</td>\n",
              "      <td>390.00000</td>\n",
              "      <td>296.000000</td>\n",
              "      <td>252.500000</td>\n",
              "      <td>117.750000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>140000.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>34.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>19052.000000</td>\n",
              "      <td>18104.500000</td>\n",
              "      <td>17071.000000</td>\n",
              "      <td>2100.000000</td>\n",
              "      <td>2.009000e+03</td>\n",
              "      <td>1800.00000</td>\n",
              "      <td>1500.000000</td>\n",
              "      <td>1500.000000</td>\n",
              "      <td>1500.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>240000.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>41.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>54506.000000</td>\n",
              "      <td>50190.500000</td>\n",
              "      <td>49198.250000</td>\n",
              "      <td>5006.000000</td>\n",
              "      <td>5.000000e+03</td>\n",
              "      <td>4505.00000</td>\n",
              "      <td>4013.250000</td>\n",
              "      <td>4031.500000</td>\n",
              "      <td>4000.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1000000.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>79.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>891586.000000</td>\n",
              "      <td>927171.000000</td>\n",
              "      <td>961664.000000</td>\n",
              "      <td>873552.000000</td>\n",
              "      <td>1.684259e+06</td>\n",
              "      <td>896040.00000</td>\n",
              "      <td>621000.000000</td>\n",
              "      <td>426529.000000</td>\n",
              "      <td>528666.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8 rows × 24 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "            LIMIT_BAL           SEX     EDUCATION      MARRIAGE           AGE  \\\n",
              "count    30000.000000  30000.000000  30000.000000  30000.000000  30000.000000   \n",
              "mean    167484.322667      1.603733      1.853133      1.551867     35.485500   \n",
              "std     129747.661567      0.489129      0.790349      0.521970      9.217904   \n",
              "min      10000.000000      1.000000      0.000000      0.000000     21.000000   \n",
              "25%      50000.000000      1.000000      1.000000      1.000000     28.000000   \n",
              "50%     140000.000000      2.000000      2.000000      2.000000     34.000000   \n",
              "75%     240000.000000      2.000000      2.000000      2.000000     41.000000   \n",
              "max    1000000.000000      2.000000      6.000000      3.000000     79.000000   \n",
              "\n",
              "              PAY_0         PAY_2         PAY_3         PAY_4         PAY_5  \\\n",
              "count  30000.000000  30000.000000  30000.000000  30000.000000  30000.000000   \n",
              "mean      -0.016700     -0.133767     -0.166200     -0.220667     -0.266200   \n",
              "std        1.123802      1.197186      1.196868      1.169139      1.133187   \n",
              "min       -2.000000     -2.000000     -2.000000     -2.000000     -2.000000   \n",
              "25%       -1.000000     -1.000000     -1.000000     -1.000000     -1.000000   \n",
              "50%        0.000000      0.000000      0.000000      0.000000      0.000000   \n",
              "75%        0.000000      0.000000      0.000000      0.000000      0.000000   \n",
              "max        8.000000      8.000000      8.000000      8.000000      8.000000   \n",
              "\n",
              "       ...      BILL_AMT4      BILL_AMT5      BILL_AMT6       PAY_AMT1  \\\n",
              "count  ...   30000.000000   30000.000000   30000.000000   30000.000000   \n",
              "mean   ...   43262.948967   40311.400967   38871.760400    5663.580500   \n",
              "std    ...   64332.856134   60797.155770   59554.107537   16563.280354   \n",
              "min    ... -170000.000000  -81334.000000 -339603.000000       0.000000   \n",
              "25%    ...    2326.750000    1763.000000    1256.000000    1000.000000   \n",
              "50%    ...   19052.000000   18104.500000   17071.000000    2100.000000   \n",
              "75%    ...   54506.000000   50190.500000   49198.250000    5006.000000   \n",
              "max    ...  891586.000000  927171.000000  961664.000000  873552.000000   \n",
              "\n",
              "           PAY_AMT2      PAY_AMT3       PAY_AMT4       PAY_AMT5  \\\n",
              "count  3.000000e+04   30000.00000   30000.000000   30000.000000   \n",
              "mean   5.921163e+03    5225.68150    4826.076867    4799.387633   \n",
              "std    2.304087e+04   17606.96147   15666.159744   15278.305679   \n",
              "min    0.000000e+00       0.00000       0.000000       0.000000   \n",
              "25%    8.330000e+02     390.00000     296.000000     252.500000   \n",
              "50%    2.009000e+03    1800.00000    1500.000000    1500.000000   \n",
              "75%    5.000000e+03    4505.00000    4013.250000    4031.500000   \n",
              "max    1.684259e+06  896040.00000  621000.000000  426529.000000   \n",
              "\n",
              "            PAY_AMT6  default.payment.next.month  \n",
              "count   30000.000000                30000.000000  \n",
              "mean     5215.502567                    0.221200  \n",
              "std     17777.465775                    0.415062  \n",
              "min         0.000000                    0.000000  \n",
              "25%       117.750000                    0.000000  \n",
              "50%      1500.000000                    0.000000  \n",
              "75%      4000.000000                    0.000000  \n",
              "max    528666.000000                    1.000000  \n",
              "\n",
              "[8 rows x 24 columns]"
            ]
          },
          "execution_count": 36,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df.describe()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UOSvgFnoi0Kn"
      },
      "source": [
        "#**3. Làm sạch và phân tích tương quan giữa các đặc trưng trong dữ liệu**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "kBY1_URHol6r"
      },
      "outputs": [],
      "source": [
        "df = df.drop(columns=['ID'], axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3KK64xB5ioDN",
        "outputId": "2f52b570-ffaa-400e-f5ae-c14f973054d3"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 30000 entries, 0 to 29999\n",
            "Data columns (total 24 columns):\n",
            " #   Column                      Non-Null Count  Dtype  \n",
            "---  ------                      --------------  -----  \n",
            " 0   LIMIT_BAL                   30000 non-null  float64\n",
            " 1   SEX                         30000 non-null  int64  \n",
            " 2   EDUCATION                   30000 non-null  int64  \n",
            " 3   MARRIAGE                    30000 non-null  int64  \n",
            " 4   AGE                         30000 non-null  int64  \n",
            " 5   PAY_0                       30000 non-null  int64  \n",
            " 6   PAY_2                       30000 non-null  int64  \n",
            " 7   PAY_3                       30000 non-null  int64  \n",
            " 8   PAY_4                       30000 non-null  int64  \n",
            " 9   PAY_5                       30000 non-null  int64  \n",
            " 10  PAY_6                       30000 non-null  int64  \n",
            " 11  BILL_AMT1                   30000 non-null  float64\n",
            " 12  BILL_AMT2                   30000 non-null  float64\n",
            " 13  BILL_AMT3                   30000 non-null  float64\n",
            " 14  BILL_AMT4                   30000 non-null  float64\n",
            " 15  BILL_AMT5                   30000 non-null  float64\n",
            " 16  BILL_AMT6                   30000 non-null  float64\n",
            " 17  PAY_AMT1                    30000 non-null  float64\n",
            " 18  PAY_AMT2                    30000 non-null  float64\n",
            " 19  PAY_AMT3                    30000 non-null  float64\n",
            " 20  PAY_AMT4                    30000 non-null  float64\n",
            " 21  PAY_AMT5                    30000 non-null  float64\n",
            " 22  PAY_AMT6                    30000 non-null  float64\n",
            " 23  default.payment.next.month  30000 non-null  int64  \n",
            "dtypes: float64(13), int64(11)\n",
            "memory usage: 5.5 MB\n"
          ]
        }
      ],
      "source": [
        "df.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jtiZXPeTixFm",
        "outputId": "8c057a8f-6b1c-4280-a4ef-d25f1bd534c3"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\n",
            "Data dimension:\n",
            "Number of Records:  30000 \n",
            "Number of Features:  24\n",
            "\n",
            "Datatype of Features:\n",
            "float64    13\n",
            "int64      11\n",
            "Name: count, dtype: int64\n",
            "\n",
            "Missing values:\n",
            "Missing values not identified\n",
            "\n",
            "Duplicated records:\n",
            "Number of duplicated records: 35\n"
          ]
        }
      ],
      "source": [
        "# Print data dimension\n",
        "print(\"\\nData dimension:\")\n",
        "print(\"Number of Records: \", df.shape[0], \"\\nNumber of Features: \", df.shape[1])\n",
        "\n",
        "# Datatype of columns\n",
        "print(\"\\nDatatype of Features:\")\n",
        "print(df.dtypes.value_counts())\n",
        "\n",
        "# Missing values\n",
        "print(\"\\nMissing values:\")\n",
        "na_value_check = df.isna().sum()\n",
        "if len(na_value_check[na_value_check > 0]) == 0:\n",
        "    print(\"Missing values not identified\")\n",
        "else:\n",
        "    print(na_value_check[na_value_check > 0])\n",
        "\n",
        "# Duplicated records check\n",
        "print(\"\\nDuplicated records:\")\n",
        "duplicate_rows = df.duplicated()\n",
        "if len(df[duplicate_rows]) == 0:\n",
        "    print(\"Duplicated records not identified\")\n",
        "else:\n",
        "    print(\"Number of duplicated records:\", len(df[duplicate_rows]))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 797
        },
        "id": "eqDaw7fFl1uO",
        "outputId": "3f4ed0a8-197b-460e-9d56-88f8d5ab8cfa"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "default.payment.next.month\n",
            "0    23364\n",
            "1     6636\n",
            "Name: count, dtype: int64\n",
            "------------------------------\n",
            "Financially stable:  77.88 % of the dataset\n",
            "Financially unstable:  22.12 % of the dataset\n"
          ]
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "print(df['default.payment.next.month'].value_counts())\n",
        "print('-'*30)\n",
        "stable_pct = round(df['default.payment.next.month'].value_counts()[0] / len(df) * 100, 2)\n",
        "unstable_pct = round(df['default.payment.next.month'].value_counts()[1] / len(df) * 100, 2)\n",
        "print('Financially stable: ', stable_pct, '% of the dataset')\n",
        "print('Financially unstable: ', unstable_pct, '% of the dataset')\n",
        "\n",
        "size = [stable_pct, unstable_pct]\n",
        "labels = ['Safety', 'Default']\n",
        "colors = ['#90EE90', '#FFA07A']\n",
        "\n",
        "figure, axes = plt.subplots(figsize=(10, 8))\n",
        "axes.pie(size, labels=labels, colors=colors, shadow=True, autopct='%1.2f%%')\n",
        "plt.legend()\n",
        "plt.title(\"Safety and Default Ratio of Customers\", size=15)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "rdGH7IZ4nShG",
        "outputId": "82ce0df5-8709-4f29-ce81-0d54e1e434b3"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 3500x3000 with 25 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "df.hist(figsize = (35,30), bins = 50)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GPvo_vk_nmUh",
        "outputId": "377211fd-8761-40b2-bc41-3e55b5f6e21f"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['SEX', 'EDUCATION', 'MARRIAGE', 'AGE', 'PAY_0', 'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5', 'PAY_6', 'default.payment.next.month']\n",
            "['LIMIT_BAL', 'BILL_AMT1', 'BILL_AMT2', 'BILL_AMT3', 'BILL_AMT4', 'BILL_AMT5', 'BILL_AMT6', 'PAY_AMT1', 'PAY_AMT2', 'PAY_AMT3', 'PAY_AMT4', 'PAY_AMT5', 'PAY_AMT6']\n"
          ]
        }
      ],
      "source": [
        "num_cols = df.select_dtypes(include=['float64']).columns.tolist()\n",
        "cat_cols = df.select_dtypes(include=['int64']).columns.tolist()\n",
        "\n",
        "print(cat_cols)\n",
        "print(num_cols)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "sVJKulHbpCOO",
        "outputId": "88ae50d9-f5b2-4f95-ddb7-afecc4e29cac"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1400x1200 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1400x1200 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1400x1200 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "plt.figure(figsize=(14, 12))\n",
        "plt.title(\"Overall Correlation Matrix\", size=18)\n",
        "sns.heatmap(df.corr(),\n",
        "            annot=True,\n",
        "            fmt=\".2f\",\n",
        "            cmap=\"coolwarm\",\n",
        "            linewidths=1.5,\n",
        "            annot_kws={\"size\": 10})\n",
        "plt.show()\n",
        "\n",
        "plt.figure(figsize=(14, 12))\n",
        "plt.title(\"Numerical Features Correlation Matrix\", size=15)\n",
        "sns.heatmap(df[num_cols].corr(), annot=True, fmt=\".2f\", cmap=\"coolwarm\", linewidths=0.5)\n",
        "plt.show()\n",
        "\n",
        "df_cat_corr = df[cat_cols].astype(float)\n",
        "plt.figure(figsize=(14, 12))\n",
        "plt.title(\"Categorical Features Correlation Matrix\", size=15)\n",
        "sns.heatmap(df_cat_corr.corr(), annot=True, fmt=\".2f\", cmap=\"coolwarm\", linewidths=0.5)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "jAPLZqTmqxA2",
        "outputId": "8e3c174d-7e48-4ef5-cbf1-e0316e6dd5bc"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1500x2600 with 13 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "plt.figure(figsize=(15, len(num_cols) * 2))\n",
        "for i, col in enumerate(num_cols):\n",
        "    plt.subplot(len(num_cols), 1, i + 1)\n",
        "    sns.boxplot(x=df[col])\n",
        "    plt.title(f\"Boxplot for {col}\", fontsize=10)\n",
        "    plt.tight_layout()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zhV2tIBdkcHI",
        "outputId": "11889c32-d3d9-4619-9537-c7871619d211"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Observations: 30000\n",
            "Variables: 24\n",
            "cat_cols: 4\n",
            "num_cols: 20\n",
            "cat_but_car: 0\n",
            "num_but_cat: 4\n"
          ]
        }
      ],
      "source": [
        "def grab_col_names(dataframe, cat_th=10, car_th=20):\n",
        "    \"\"\"\n",
        "    grab_col_names for given dataframe\n",
        "\n",
        "    :param dataframe:\n",
        "    :param cat_th:\n",
        "    :param car_th:\n",
        "    :return:\n",
        "    \"\"\"\n",
        "\n",
        "    cat_cols = [col for col in dataframe.columns if dataframe[col].dtypes == \"O\"]\n",
        "\n",
        "    num_but_cat = [col for col in dataframe.columns if dataframe[col].nunique() < cat_th and\n",
        "                   dataframe[col].dtypes != \"O\"]\n",
        "\n",
        "    cat_but_car = [col for col in dataframe.columns if dataframe[col].nunique() > car_th and\n",
        "                   dataframe[col].dtypes == \"O\"]\n",
        "\n",
        "    cat_cols = cat_cols + num_but_cat\n",
        "    cat_cols = [col for col in cat_cols if col not in cat_but_car]\n",
        "\n",
        "    num_cols = [col for col in dataframe.columns if dataframe[col].dtypes != \"O\"]\n",
        "    num_cols = [col for col in num_cols if col not in num_but_cat]\n",
        "\n",
        "    print(f\"Observations: {dataframe.shape[0]}\")\n",
        "    print(f\"Variables: {dataframe.shape[1]}\")\n",
        "    print(f'cat_cols: {len(cat_cols)}')\n",
        "    print(f'num_cols: {len(num_cols)}')\n",
        "    print(f'cat_but_car: {len(cat_but_car)}')\n",
        "    print(f'num_but_cat: {len(num_but_cat)}')\n",
        "    return cat_cols, cat_but_car, num_cols\n",
        "\n",
        "cat_cols, cat_but_car, num_cols = grab_col_names(df)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AoaxpuxPs7wf"
      },
      "source": [
        "#**4. Đánh giá mức độ quan trọng về mặt thông tin của các đặc trưng và lựa chọn các đặc trưng đưa vào huấn luyện mô hình học máy**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "0namrQyNkn8K"
      },
      "outputs": [],
      "source": [
        "X = df.drop('default.payment.next.month',axis=1)\n",
        "y = df['default.payment.next.month']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 161
        },
        "id": "pTgdKUuUs8Qw",
        "outputId": "c458d92a-b963-480c-abf3-46bcfbe188f0"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Target variable distribution in Train samples:\n"
          ]
        },
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>default.payment.next.month</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>23364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6636</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                            count\n",
              "default.payment.next.month       \n",
              "0                           23364\n",
              "1                            6636"
            ]
          },
          "execution_count": 44,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "print(\"Target variable distribution in Train samples:\")\n",
        "pd.DataFrame(y.value_counts())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 76
        },
        "id": "fCwQ65QKuBM5",
        "outputId": "e6ab4039-b708-4fde-a660-3bf56c9eb35f"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<style>#sk-container-id-5 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-5 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-5 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-5 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-5 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-5 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-5 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-5 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-5 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-5 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-5 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-5 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>BorderlineSMOTE()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" checked><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;BorderlineSMOTE<span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>BorderlineSMOTE()</pre></div> </div></div></div></div>"
            ],
            "text/plain": [
              "BorderlineSMOTE()"
            ]
          },
          "execution_count": 45,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "smote = BorderlineSMOTE()\n",
        "smote.fit(X, y)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 76
        },
        "id": "zTywtziTwSsq",
        "outputId": "3e3c8d15-9e5e-4648-b91d-2870922fabb9"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<style>#sk-container-id-6 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-6 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-6 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-6 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-6 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-6 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-6 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-6 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-6 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-6 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-6 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-6 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-6 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>StandardScaler()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" checked><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;StandardScaler<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.StandardScaler.html\">?<span>Documentation for StandardScaler</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>StandardScaler()</pre></div> </div></div></div></div>"
            ],
            "text/plain": [
              "StandardScaler()"
            ]
          },
          "execution_count": 46,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "scaler = StandardScaler()\n",
        "scaler.fit(X)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "OPZ6PUkruMsw"
      },
      "outputs": [],
      "source": [
        "pipe = imbpipeline(\n",
        "    [\n",
        "        ('resample', smote),\n",
        "        ('scaler', scaler),\n",
        "        ('rf', RandomForestClassifier(n_estimators=100))\n",
        "    ]\n",
        ")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 162
        },
        "id": "4pRwA3ghvzy_",
        "outputId": "bbb34b96-20fb-48e6-aace-15aa353307b7"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<style>#sk-container-id-7 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-7 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-7 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-7 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-7 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-7 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-7 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-7 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-7 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-7 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-7 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-7 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-7 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;resample&#x27;, BorderlineSMOTE()), (&#x27;scaler&#x27;, StandardScaler()),\n",
              "                (&#x27;rf&#x27;, RandomForestClassifier())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" ><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;Pipeline<span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>Pipeline(steps=[(&#x27;resample&#x27;, BorderlineSMOTE()), (&#x27;scaler&#x27;, StandardScaler()),\n",
              "                (&#x27;rf&#x27;, RandomForestClassifier())])</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-16\" type=\"checkbox\" ><label for=\"sk-estimator-id-16\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">BorderlineSMOTE</label><div class=\"sk-toggleable__content fitted\"><pre>BorderlineSMOTE()</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-17\" type=\"checkbox\" ><label for=\"sk-estimator-id-17\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;StandardScaler<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.StandardScaler.html\">?<span>Documentation for StandardScaler</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>StandardScaler()</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-18\" type=\"checkbox\" ><label for=\"sk-estimator-id-18\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;RandomForestClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier()</pre></div> </div></div></div></div></div></div>"
            ],
            "text/plain": [
              "Pipeline(steps=[('resample', BorderlineSMOTE()), ('scaler', StandardScaler()),\n",
              "                ('rf', RandomForestClassifier())])"
            ]
          },
          "execution_count": 48,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "pipe.fit(X, y)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "c3KZlYzsz2S0",
        "outputId": "0f61b9b5-d732-4a02-b572-c6ed2f0e6d9f"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<style>#sk-container-id-8 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-8 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-8 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-8 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-8 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-8 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-8 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-8 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-8 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-8 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-8 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-8 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-8 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-8 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-8\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;borderlinesmote&#x27;, BorderlineSMOTE()),\n",
              "                (&#x27;standardscaler&#x27;, StandardScaler()),\n",
              "                (&#x27;gridsearchcv&#x27;,\n",
              "                 GridSearchCV(cv=5, estimator=RandomForestClassifier(),\n",
              "                              n_jobs=-1,\n",
              "                              param_grid={&#x27;max_depth&#x27;: [None, 10, 20, 30],\n",
              "                                          &#x27;n_estimators&#x27;: [100, 200, 300]},\n",
              "                              scoring=&#x27;f1&#x27;))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-19\" type=\"checkbox\" ><label for=\"sk-estimator-id-19\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;Pipeline<span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>Pipeline(steps=[(&#x27;borderlinesmote&#x27;, BorderlineSMOTE()),\n",
              "                (&#x27;standardscaler&#x27;, StandardScaler()),\n",
              "                (&#x27;gridsearchcv&#x27;,\n",
              "                 GridSearchCV(cv=5, estimator=RandomForestClassifier(),\n",
              "                              n_jobs=-1,\n",
              "                              param_grid={&#x27;max_depth&#x27;: [None, 10, 20, 30],\n",
              "                                          &#x27;n_estimators&#x27;: [100, 200, 300]},\n",
              "                              scoring=&#x27;f1&#x27;))])</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-20\" type=\"checkbox\" ><label for=\"sk-estimator-id-20\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">BorderlineSMOTE</label><div class=\"sk-toggleable__content fitted\"><pre>BorderlineSMOTE()</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-21\" type=\"checkbox\" ><label for=\"sk-estimator-id-21\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;StandardScaler<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.StandardScaler.html\">?<span>Documentation for StandardScaler</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>StandardScaler()</pre></div> </div></div><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-22\" type=\"checkbox\" ><label for=\"sk-estimator-id-22\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;gridsearchcv: GridSearchCV<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.model_selection.GridSearchCV.html\">?<span>Documentation for gridsearchcv: GridSearchCV</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>GridSearchCV(cv=5, estimator=RandomForestClassifier(), n_jobs=-1,\n",
              "             param_grid={&#x27;max_depth&#x27;: [None, 10, 20, 30],\n",
              "                         &#x27;n_estimators&#x27;: [100, 200, 300]},\n",
              "             scoring=&#x27;f1&#x27;)</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-23\" type=\"checkbox\" ><label for=\"sk-estimator-id-23\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">best_estimator_: RandomForestClassifier</label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier(n_estimators=300)</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-24\" type=\"checkbox\" ><label for=\"sk-estimator-id-24\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;RandomForestClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier(n_estimators=300)</pre></div> </div></div></div></div></div></div></div></div></div></div></div>"
            ],
            "text/plain": [
              "Pipeline(steps=[('borderlinesmote', BorderlineSMOTE()),\n",
              "                ('standardscaler', StandardScaler()),\n",
              "                ('gridsearchcv',\n",
              "                 GridSearchCV(cv=5, estimator=RandomForestClassifier(),\n",
              "                              n_jobs=-1,\n",
              "                              param_grid={'max_depth': [None, 10, 20, 30],\n",
              "                                          'n_estimators': [100, 200, 300]},\n",
              "                              scoring='f1'))])"
            ]
          },
          "execution_count": 49,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "pipe = make_pipeline(\n",
        "    smote,\n",
        "    scaler,\n",
        "    GridSearchCV(\n",
        "        estimator=RandomForestClassifier(),\n",
        "        param_grid={\n",
        "            'n_estimators': [100, 200, 300],\n",
        "            'max_depth': [None, 10, 20, 30],\n",
        "        },\n",
        "        cv=5,\n",
        "        scoring='f1',\n",
        "        n_jobs=-1\n",
        "    )\n",
        ")\n",
        "\n",
        "pipe.fit(X, y)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gJfzANSQ7arr",
        "outputId": "b89873f7-5a2e-427c-9c44-165a40176c61"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([0.06139264, 0.02959907, 0.02619898, 0.03272513, 0.0524953 ,\n",
              "       0.07812261, 0.05103097, 0.0361066 , 0.02484195, 0.02087533,\n",
              "       0.01946968, 0.05845442, 0.04872885, 0.04568567, 0.04397025,\n",
              "       0.0428586 , 0.04266781, 0.05389969, 0.05345828, 0.04736212,\n",
              "       0.04353409, 0.04131899, 0.04520296])"
            ]
          },
          "execution_count": 50,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "pipe.named_steps['gridsearchcv'].best_estimator_.feature_importances_"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VEpzjfCm88c7",
        "outputId": "3e05845d-7d1e-4984-ee1b-c9634435fcce"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Index(['LIMIT_BAL', 'SEX', 'EDUCATION', 'MARRIAGE', 'AGE', 'PAY_0', 'PAY_2',\n",
              "       'PAY_3', 'PAY_4', 'PAY_5', 'PAY_6', 'BILL_AMT1', 'BILL_AMT2',\n",
              "       'BILL_AMT3', 'BILL_AMT4', 'BILL_AMT5', 'BILL_AMT6', 'PAY_AMT1',\n",
              "       'PAY_AMT2', 'PAY_AMT3', 'PAY_AMT4', 'PAY_AMT5', 'PAY_AMT6'],\n",
              "      dtype='object')"
            ]
          },
          "execution_count": 51,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "X.columns"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 801
        },
        "id": "JRTBugCb8dbk",
        "outputId": "48e1049b-5d79-437a-fa26-a45acfa28468"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "importances = pipe.named_steps['gridsearchcv'].best_estimator_.feature_importances_\n",
        "forest_importances = pd.Series(importances, index=X.columns)\n",
        "\n",
        "forest_importances = forest_importances.sort_values(ascending=False)\n",
        "\n",
        "ax = forest_importances.plot(kind='barh', figsize=(10, 8))\n",
        "ax.invert_yaxis()\n",
        "ax.grid(False)\n",
        "\n",
        "ax.set_title('Feature Importances')\n",
        "ax.set_xlabel('Importance Score')\n",
        "ax.set_ylabel('Features')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uLVez21LRqwq",
        "outputId": "5d4a95da-208d-4581-f881-907343c0b716"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Index(['PAY_0', 'LIMIT_BAL', 'BILL_AMT1', 'PAY_AMT1', 'PAY_AMT2', 'AGE',\n",
              "       'PAY_2', 'BILL_AMT2', 'PAY_AMT3', 'BILL_AMT3', 'PAY_AMT6', 'BILL_AMT4',\n",
              "       'PAY_AMT4', 'BILL_AMT5', 'BILL_AMT6', 'PAY_AMT5', 'PAY_3', 'MARRIAGE'],\n",
              "      dtype='object')"
            ]
          },
          "execution_count": 53,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "selected_features = forest_importances[forest_importances > 0.03].index.tolist()\n",
        "X_selected = X[selected_features]\n",
        "X_selected.columns"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "r7o1IsoE_7hp"
      },
      "source": [
        "#**5+6. Huấn luyện mô hình đánh giá tín dụng và đánh giá mô hình**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 161
        },
        "id": "JPYaeWJfEsVv",
        "outputId": "9534b502-f236-4ad7-ab43-d8a80408d1e6"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Target variable distribution in Train samples:\n"
          ]
        },
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>default.payment.next.month</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>23364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6636</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                            count\n",
              "default.payment.next.month       \n",
              "0                           23364\n",
              "1                            6636"
            ]
          },
          "execution_count": 54,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "print(\"Target variable distribution in Train samples:\")\n",
        "pd.DataFrame(y.value_counts())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ERFP105lvvpl"
      },
      "outputs": [],
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X_selected, y, test_size=0.20, random_state=42,stratify=y)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "SGL7DbRM3H6o"
      },
      "outputs": [],
      "source": [
        "smote = BorderlineSMOTE()\n",
        "X_train, y_train = smote.fit_resample(X_train, y_train)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "8Zul7v5E3H6o"
      },
      "outputs": [],
      "source": [
        "scaler = StandardScaler()\n",
        "X_train = scaler.fit_transform(X_train)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "r4db1m4-UhE_",
        "outputId": "735f6382-cb29-4121-ace2-92c850c7830c"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 14:41:47,829] A new study created in memory with name: no-name-9a17e00f-4d2e-4c24-9e1e-62cfdcdd7537\n",
            "[I 2025-01-01 14:42:18,373] Trial 0 finished with value: 0.7732174192785823 and parameters: {'n_estimators': 350, 'max_depth': 17, 'min_samples_split': 9, 'min_samples_leaf': 3}. Best is trial 0 with value: 0.7732174192785823.\n",
            "[I 2025-01-01 14:42:31,117] Trial 1 finished with value: 0.7949839946108651 and parameters: {'n_estimators': 150, 'max_depth': 20, 'min_samples_split': 11, 'min_samples_leaf': 7}. Best is trial 1 with value: 0.7949839946108651.\n",
            "[I 2025-01-01 14:42:49,391] Trial 2 finished with value: 0.7951608220615591 and parameters: {'n_estimators': 250, 'max_depth': 13, 'min_samples_split': 18, 'min_samples_leaf': 10}. Best is trial 2 with value: 0.7951608220615591.\n",
            "[I 2025-01-01 14:42:57,978] Trial 3 finished with value: 0.7939854301645003 and parameters: {'n_estimators': 250, 'max_depth': 5, 'min_samples_split': 9, 'min_samples_leaf': 9}. Best is trial 2 with value: 0.7951608220615591.\n",
            "[I 2025-01-01 14:43:04,035] Trial 4 finished with value: 0.7950108509361501 and parameters: {'n_estimators': 150, 'max_depth': 6, 'min_samples_split': 2, 'min_samples_leaf': 7}. Best is trial 2 with value: 0.7951608220615591.\n",
            "[I 2025-01-01 14:43:48,726] Trial 5 finished with value: 0.7401217786554495 and parameters: {'n_estimators': 500, 'max_depth': 18, 'min_samples_split': 8, 'min_samples_leaf': 2}. Best is trial 2 with value: 0.7951608220615591.\n",
            "[I 2025-01-01 14:43:56,395] Trial 6 finished with value: 0.7947980154572375 and parameters: {'n_estimators': 150, 'max_depth': 8, 'min_samples_split': 5, 'min_samples_leaf': 8}. Best is trial 2 with value: 0.7951608220615591.\n",
            "[I 2025-01-01 14:44:13,628] Trial 7 finished with value: 0.7784454886076103 and parameters: {'n_estimators': 200, 'max_depth': 18, 'min_samples_split': 18, 'min_samples_leaf': 3}. Best is trial 2 with value: 0.7951608220615591.\n",
            "[I 2025-01-01 14:44:36,089] Trial 8 finished with value: 0.7946329398071168 and parameters: {'n_estimators': 300, 'max_depth': 14, 'min_samples_split': 20, 'min_samples_leaf': 7}. Best is trial 2 with value: 0.7951608220615591.\n",
            "[I 2025-01-01 14:44:43,777] Trial 9 finished with value: 0.7942666834551686 and parameters: {'n_estimators': 150, 'max_depth': 8, 'min_samples_split': 3, 'min_samples_leaf': 2}. Best is trial 2 with value: 0.7951608220615591.\n",
            "[I 2025-01-01 14:45:11,194] Trial 10 finished with value: 0.7948464186491546 and parameters: {'n_estimators': 400, 'max_depth': 12, 'min_samples_split': 15, 'min_samples_leaf': 10}. Best is trial 2 with value: 0.7951608220615591.\n",
            "[I 2025-01-01 14:45:18,185] Trial 11 finished with value: 0.7975724265653937 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 15, 'min_samples_leaf': 5}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:45:25,826] Trial 12 finished with value: 0.7814921441599278 and parameters: {'n_estimators': 100, 'max_depth': 14, 'min_samples_split': 15, 'min_samples_leaf': 5}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:45:42,201] Trial 13 finished with value: 0.7934338110148574 and parameters: {'n_estimators': 250, 'max_depth': 11, 'min_samples_split': 15, 'min_samples_leaf': 5}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:46:10,071] Trial 14 finished with value: 0.7941737613241648 and parameters: {'n_estimators': 450, 'max_depth': 10, 'min_samples_split': 17, 'min_samples_leaf': 4}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:46:17,618] Trial 15 finished with value: 0.7944954287751584 and parameters: {'n_estimators': 100, 'max_depth': 14, 'min_samples_split': 13, 'min_samples_leaf': 10}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:46:41,688] Trial 16 finished with value: 0.7948318885890223 and parameters: {'n_estimators': 300, 'max_depth': 16, 'min_samples_split': 20, 'min_samples_leaf': 6}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:46:55,750] Trial 17 finished with value: 0.7487259329544049 and parameters: {'n_estimators': 250, 'max_depth': 9, 'min_samples_split': 18, 'min_samples_leaf': 1}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:47:21,823] Trial 18 finished with value: 0.7948464186491546 and parameters: {'n_estimators': 350, 'max_depth': 13, 'min_samples_split': 12, 'min_samples_leaf': 6}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:47:37,723] Trial 19 finished with value: 0.7956103974966539 and parameters: {'n_estimators': 200, 'max_depth': 16, 'min_samples_split': 17, 'min_samples_leaf': 9}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:47:53,626] Trial 20 finished with value: 0.7954584686331395 and parameters: {'n_estimators': 200, 'max_depth': 16, 'min_samples_split': 14, 'min_samples_leaf': 8}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:48:09,601] Trial 21 finished with value: 0.7954584686331395 and parameters: {'n_estimators': 200, 'max_depth': 16, 'min_samples_split': 14, 'min_samples_leaf': 8}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:48:17,327] Trial 22 finished with value: 0.7947088646359919 and parameters: {'n_estimators': 100, 'max_depth': 15, 'min_samples_split': 16, 'min_samples_leaf': 9}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:48:33,750] Trial 23 finished with value: 0.7959462043981175 and parameters: {'n_estimators': 200, 'max_depth': 20, 'min_samples_split': 13, 'min_samples_leaf': 8}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:48:50,061] Trial 24 finished with value: 0.7949977954852141 and parameters: {'n_estimators': 200, 'max_depth': 20, 'min_samples_split': 11, 'min_samples_leaf': 9}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:48:58,735] Trial 25 finished with value: 0.7850108440131232 and parameters: {'n_estimators': 100, 'max_depth': 19, 'min_samples_split': 13, 'min_samples_leaf': 4}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:49:11,116] Trial 26 finished with value: 0.7838155961230404 and parameters: {'n_estimators': 150, 'max_depth': 18, 'min_samples_split': 17, 'min_samples_leaf': 6}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:49:24,188] Trial 27 finished with value: 0.7949080277286011 and parameters: {'n_estimators': 200, 'max_depth': 11, 'min_samples_split': 11, 'min_samples_leaf': 8}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:49:53,454] Trial 28 finished with value: 0.7949694445706079 and parameters: {'n_estimators': 350, 'max_depth': 20, 'min_samples_split': 7, 'min_samples_leaf': 7}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:50:18,995] Trial 29 finished with value: 0.7930616805748735 and parameters: {'n_estimators': 300, 'max_depth': 17, 'min_samples_split': 10, 'min_samples_leaf': 4}. Best is trial 11 with value: 0.7975724265653937.\n",
            "[I 2025-01-01 14:50:25,905] Trial 30 finished with value: 0.7976931925597354 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 19, 'min_samples_leaf': 9}. Best is trial 30 with value: 0.7976931925597354.\n",
            "[I 2025-01-01 14:50:32,865] Trial 31 finished with value: 0.7976931925597354 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 19, 'min_samples_leaf': 9}. Best is trial 30 with value: 0.7976931925597354.\n",
            "[I 2025-01-01 14:50:39,767] Trial 32 finished with value: 0.7978881651359911 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 20, 'min_samples_leaf': 9}. Best is trial 32 with value: 0.7978881651359911.\n",
            "[I 2025-01-01 14:50:46,609] Trial 33 finished with value: 0.7944475423837232 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 19, 'min_samples_leaf': 10}. Best is trial 32 with value: 0.7978881651359911.\n",
            "[I 2025-01-01 14:50:53,181] Trial 34 finished with value: 0.7949977954852141 and parameters: {'n_estimators': 100, 'max_depth': 11, 'min_samples_split': 19, 'min_samples_leaf': 9}. Best is trial 32 with value: 0.7978881651359911.\n",
            "[I 2025-01-01 14:51:02,307] Trial 35 finished with value: 0.7953822456540326 and parameters: {'n_estimators': 150, 'max_depth': 10, 'min_samples_split': 20, 'min_samples_leaf': 5}. Best is trial 32 with value: 0.7978881651359911.\n",
            "[I 2025-01-01 14:51:09,605] Trial 36 finished with value: 0.7982881936229472 and parameters: {'n_estimators': 100, 'max_depth': 13, 'min_samples_split': 19, 'min_samples_leaf': 7}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:51:20,538] Trial 37 finished with value: 0.7952355535542103 and parameters: {'n_estimators': 150, 'max_depth': 13, 'min_samples_split': 19, 'min_samples_leaf': 10}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:51:29,792] Trial 38 finished with value: 0.7949356104848952 and parameters: {'n_estimators': 150, 'max_depth': 10, 'min_samples_split': 18, 'min_samples_leaf': 7}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:51:37,299] Trial 39 finished with value: 0.7975716287744461 and parameters: {'n_estimators': 100, 'max_depth': 14, 'min_samples_split': 20, 'min_samples_leaf': 9}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:51:44,222] Trial 40 finished with value: 0.7953485263740333 and parameters: {'n_estimators': 150, 'max_depth': 7, 'min_samples_split': 19, 'min_samples_leaf': 8}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:51:51,184] Trial 41 finished with value: 0.7953350494146137 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 18, 'min_samples_leaf': 7}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:51:58,418] Trial 42 finished with value: 0.7951608220615591 and parameters: {'n_estimators': 100, 'max_depth': 13, 'min_samples_split': 16, 'min_samples_leaf': 9}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:52:05,426] Trial 43 finished with value: 0.7953822456540326 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 16, 'min_samples_leaf': 6}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:52:15,326] Trial 44 finished with value: 0.795197408523151 and parameters: {'n_estimators': 150, 'max_depth': 11, 'min_samples_split': 20, 'min_samples_leaf': 8}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:52:23,785] Trial 45 finished with value: 0.7954238291103132 and parameters: {'n_estimators': 150, 'max_depth': 9, 'min_samples_split': 17, 'min_samples_leaf': 10}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:52:31,629] Trial 46 finished with value: 0.7953208251283274 and parameters: {'n_estimators': 100, 'max_depth': 15, 'min_samples_split': 18, 'min_samples_leaf': 7}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:53:06,958] Trial 47 finished with value: 0.7637683470418921 and parameters: {'n_estimators': 500, 'max_depth': 12, 'min_samples_split': 19, 'min_samples_leaf': 3}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:53:14,350] Trial 48 finished with value: 0.7829125774480735 and parameters: {'n_estimators': 100, 'max_depth': 13, 'min_samples_split': 16, 'min_samples_leaf': 5}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:53:48,084] Trial 49 finished with value: 0.7954107146714244 and parameters: {'n_estimators': 450, 'max_depth': 14, 'min_samples_split': 20, 'min_samples_leaf': 10}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:53:57,285] Trial 50 finished with value: 0.7964235187989437 and parameters: {'n_estimators': 150, 'max_depth': 10, 'min_samples_split': 17, 'min_samples_leaf': 9}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:54:04,784] Trial 51 finished with value: 0.7975716287744461 and parameters: {'n_estimators': 100, 'max_depth': 14, 'min_samples_split': 20, 'min_samples_leaf': 9}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:54:12,479] Trial 52 finished with value: 0.7949813163377444 and parameters: {'n_estimators': 100, 'max_depth': 15, 'min_samples_split': 19, 'min_samples_leaf': 9}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:54:23,314] Trial 53 finished with value: 0.7949080277286011 and parameters: {'n_estimators': 150, 'max_depth': 13, 'min_samples_split': 18, 'min_samples_leaf': 8}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:54:29,862] Trial 54 finished with value: 0.7967097051591193 and parameters: {'n_estimators': 100, 'max_depth': 11, 'min_samples_split': 20, 'min_samples_leaf': 10}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:54:36,910] Trial 55 finished with value: 0.7834551530582291 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 19, 'min_samples_leaf': 4}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:54:55,556] Trial 56 finished with value: 0.795672205686047 and parameters: {'n_estimators': 250, 'max_depth': 14, 'min_samples_split': 15, 'min_samples_leaf': 9}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:55:07,516] Trial 57 finished with value: 0.7952730529829505 and parameters: {'n_estimators': 150, 'max_depth': 15, 'min_samples_split': 17, 'min_samples_leaf': 7}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:55:13,120] Trial 58 finished with value: 0.7960734302672137 and parameters: {'n_estimators': 100, 'max_depth': 9, 'min_samples_split': 4, 'min_samples_leaf': 8}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:55:19,687] Trial 59 finished with value: 0.7955027317935951 and parameters: {'n_estimators': 100, 'max_depth': 11, 'min_samples_split': 20, 'min_samples_leaf': 6}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:55:30,605] Trial 60 finished with value: 0.7950597896537083 and parameters: {'n_estimators': 150, 'max_depth': 13, 'min_samples_split': 18, 'min_samples_leaf': 5}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:55:38,152] Trial 61 finished with value: 0.7975716287744461 and parameters: {'n_estimators': 100, 'max_depth': 14, 'min_samples_split': 20, 'min_samples_leaf': 9}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:55:45,579] Trial 62 finished with value: 0.7961877998492194 and parameters: {'n_estimators': 100, 'max_depth': 14, 'min_samples_split': 19, 'min_samples_leaf': 9}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:55:52,514] Trial 63 finished with value: 0.7978881651359911 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 20, 'min_samples_leaf': 9}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:56:02,829] Trial 64 finished with value: 0.7947980154572375 and parameters: {'n_estimators': 150, 'max_depth': 12, 'min_samples_split': 18, 'min_samples_leaf': 8}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:56:06,251] Trial 65 finished with value: 0.794535504164652 and parameters: {'n_estimators': 100, 'max_depth': 5, 'min_samples_split': 14, 'min_samples_leaf': 10}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:56:13,531] Trial 66 finished with value: 0.7951608220615591 and parameters: {'n_estimators': 100, 'max_depth': 13, 'min_samples_split': 7, 'min_samples_leaf': 9}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:56:25,655] Trial 67 finished with value: 0.794770472772214 and parameters: {'n_estimators': 200, 'max_depth': 10, 'min_samples_split': 19, 'min_samples_leaf': 10}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:56:35,522] Trial 68 finished with value: 0.795197408523151 and parameters: {'n_estimators': 150, 'max_depth': 11, 'min_samples_split': 20, 'min_samples_leaf': 8}. Best is trial 36 with value: 0.7982881936229472.\n",
            "[I 2025-01-01 14:56:42,487] Trial 69 finished with value: 0.8002478346294659 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 18, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:56:49,400] Trial 70 finished with value: 0.7944475423837232 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 17, 'min_samples_leaf': 10}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:56:56,643] Trial 71 finished with value: 0.796136762754154 and parameters: {'n_estimators': 100, 'max_depth': 13, 'min_samples_split': 19, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:57:06,925] Trial 72 finished with value: 0.7977536854066322 and parameters: {'n_estimators': 150, 'max_depth': 12, 'min_samples_split': 18, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:57:17,269] Trial 73 finished with value: 0.7947980154572375 and parameters: {'n_estimators': 150, 'max_depth': 12, 'min_samples_split': 18, 'min_samples_leaf': 8}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:57:23,768] Trial 74 finished with value: 0.7967514499293099 and parameters: {'n_estimators': 100, 'max_depth': 11, 'min_samples_split': 17, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:57:34,106] Trial 75 finished with value: 0.7977536854066322 and parameters: {'n_estimators': 150, 'max_depth': 12, 'min_samples_split': 16, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:57:46,221] Trial 76 finished with value: 0.7964235187989437 and parameters: {'n_estimators': 200, 'max_depth': 10, 'min_samples_split': 16, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:57:55,923] Trial 77 finished with value: 0.7954362018014193 and parameters: {'n_estimators': 150, 'max_depth': 11, 'min_samples_split': 19, 'min_samples_leaf': 10}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:58:06,280] Trial 78 finished with value: 0.7947980154572375 and parameters: {'n_estimators': 150, 'max_depth': 12, 'min_samples_split': 18, 'min_samples_leaf': 8}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:58:35,106] Trial 79 finished with value: 0.7950456047345169 and parameters: {'n_estimators': 400, 'max_depth': 13, 'min_samples_split': 18, 'min_samples_leaf': 8}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:58:48,750] Trial 80 finished with value: 0.7955961344213153 and parameters: {'n_estimators': 200, 'max_depth': 12, 'min_samples_split': 17, 'min_samples_leaf': 10}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:58:56,324] Trial 81 finished with value: 0.725832595416124 and parameters: {'n_estimators': 100, 'max_depth': 13, 'min_samples_split': 16, 'min_samples_leaf': 1}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:59:02,836] Trial 82 finished with value: 0.7949977954852141 and parameters: {'n_estimators': 100, 'max_depth': 11, 'min_samples_split': 19, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:59:09,906] Trial 83 finished with value: 0.75919989907661 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 14, 'min_samples_leaf': 2}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:59:20,253] Trial 84 finished with value: 0.7977536854066322 and parameters: {'n_estimators': 150, 'max_depth': 12, 'min_samples_split': 18, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:59:29,511] Trial 85 finished with value: 0.7958238321934002 and parameters: {'n_estimators': 150, 'max_depth': 10, 'min_samples_split': 20, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:59:39,872] Trial 86 finished with value: 0.7963127672647067 and parameters: {'n_estimators': 150, 'max_depth': 12, 'min_samples_split': 19, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 14:59:57,760] Trial 87 finished with value: 0.7951608220615591 and parameters: {'n_estimators': 250, 'max_depth': 13, 'min_samples_split': 18, 'min_samples_leaf': 10}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 15:00:07,500] Trial 88 finished with value: 0.795197408523151 and parameters: {'n_estimators': 150, 'max_depth': 11, 'min_samples_split': 20, 'min_samples_leaf': 8}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 15:00:14,422] Trial 89 finished with value: 0.8002478346294659 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 18, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 15:00:25,418] Trial 90 finished with value: 0.7948225839264136 and parameters: {'n_estimators': 150, 'max_depth': 13, 'min_samples_split': 17, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 15:00:32,453] Trial 91 finished with value: 0.7976931925597354 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 19, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 15:00:38,933] Trial 92 finished with value: 0.7967514499293099 and parameters: {'n_estimators': 100, 'max_depth': 11, 'min_samples_split': 18, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 15:00:45,852] Trial 93 finished with value: 0.7976931925597354 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 19, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 15:00:53,378] Trial 94 finished with value: 0.7957798277420455 and parameters: {'n_estimators': 100, 'max_depth': 14, 'min_samples_split': 2, 'min_samples_leaf': 8}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 15:01:00,599] Trial 95 finished with value: 0.7958494346777811 and parameters: {'n_estimators': 100, 'max_depth': 13, 'min_samples_split': 18, 'min_samples_leaf': 10}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 15:01:10,294] Trial 96 finished with value: 0.7958993882711438 and parameters: {'n_estimators': 150, 'max_depth': 11, 'min_samples_split': 17, 'min_samples_leaf': 9}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 15:01:17,305] Trial 97 finished with value: 0.7949839946108651 and parameters: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 20, 'min_samples_leaf': 7}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 15:01:31,706] Trial 98 finished with value: 0.7948464186491546 and parameters: {'n_estimators': 200, 'max_depth': 13, 'min_samples_split': 9, 'min_samples_leaf': 8}. Best is trial 69 with value: 0.8002478346294659.\n",
            "[I 2025-01-01 15:01:40,148] Trial 99 finished with value: 0.7954238291103132 and parameters: {'n_estimators': 150, 'max_depth': 9, 'min_samples_split': 19, 'min_samples_leaf': 10}. Best is trial 69 with value: 0.8002478346294659.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Best parameters for Random Forest: {'n_estimators': 100, 'max_depth': 12, 'min_samples_split': 18, 'min_samples_leaf': 9}\n"
          ]
        },
        {
          "data": {
            "image/png": "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iYSIHevRowfly5c37XB948YN8ufPT926dXnnnXfInz+/qe/YsWMpUqQIq1ev5pNPPsHLy4vXXnuNnj17/udfL7t3787Vq1eZP38+d+/epW7duowdO5YePXqY+owaNYqpU6eyYMECLl++jIeHB23btn3gqkQ1a9Zk4cKFTJ8+nQ8++MC0StBHH31EqVKl/lO8qWnSpAm//fbbA4c1AXz44Yem+R2Q/Mv5yJEj+eabb9i7dy+QXJ158803WbFiBZs3b2bbtm1Wn/v27duEhIRQunRpunbtCiTPqRg2bBg9evRg3rx5dO/ePU2vo3Xr1mTLlo05c+YQFBSEu7s7derU4YMPPkj33afbtGnDihUrWLFiBa+++irdu3fn2rVrLFmyhLCwMPLnz0+LFi0wGAzMmTOHmzdvpnn352bNmuHg4MDMmTP5+uuvKV26NKNGjTLbN6VUqVJ89tlnpmVuDQYDlStXZsmSJaa5K5nhv8RVtmxZli1bxscff0z//v0xGo2ULl2asLAwU6WsXbt23L17l+XLl/PZZ5/h6upKzZo16devH1myZAGSK5bjxo2ja9euLFy4MFPfDxF5ehmM6bU7j4iIiIiIPDU0yFJERERERGymREJERERERGymREJERERERGymREJERERERGymREJERERERGymREJERERERGymREJERERERGz2xG5IZzAYMjsEEREREfkX9rydmZtfcIZdO3Z/aIZd+1F6YhMJANcqQZkdgohIuomLCCP2rv3+oysiIk+XJzqREBERERF5KAbNALBGiYSIiIiIiCUNk7dKqZaIiIiIiNhMFQkREREREUsa2mSV3iEREREREbGZKhIiIiIiIpY0R8IqVSRERERERMRmqkiIiIiIiFjSHAmr9A6JiIiIiIjNVJEQEREREbGkORJWKZEQEREREbGkoU1W6R0SERERERGbqSIhIiIiImJJQ5usUkVCRERERERspoqEiIiIiIglzZGwSu+QiIiIiIjYTBUJERERERFLmiNhlSoSIiIiIiJiM1UkREREREQsaY6EVUokREREREQsaWiTVUq1RERERETEZqpIiIiIiIhY0tAmq/QOiYiIiIiIzVSREBERERGxpIqEVXqHRERERETEZqpIiIiIiIhYctCqTdaoIiEiIiIiIjZTRUJERERExJLmSFilREJERERExJI2pLNKqZaIiIiIiNhMFQkREREREUsa2mSV3iERERERkcdAt27dGDhwoOnxoUOHePnll/H19aVNmzYcPHjQrP+6deto0KABvr6+BAUFcfXqVVOb0Whk0qRJ1KhRg4CAACZMmEBSUpJN8SiREBERERGxZDBk3O0hrF+/ns2bN5se3759m27duuHv78+aNWvw8/Oje/fu3L59G4ADBw4wePBggoODWbFiBTdv3iQkJMR0/sKFC1m3bh2hoaFMnz6dtWvXsnDhQptiUiIhIiIiImLHrl+/zoQJE6hUqZLp2IYNG3BxcaF///6UKFGCwYMHky1bNjZu3AjA0qVLady4MS1btqRs2bJMmDCBzZs3ExUVBcCSJUvo1asX/v7+1KhRg759+7Js2TKb4lIiISIiIiJiyeCQcTcbffTRR7Ro0YKSJUuajkVGRlKtWjUM/1Q4DAYDVatWJSIiwtTu7+9v6p8/f358fHyIjIzk4sWLnD9/nurVq5vaq1WrxtmzZ7l06VKa41IiISIiIiJip3bs2MHevXvp2bOn2fHLly/j5eVldszDw4MLFy4AcOnSpQe2X758GcCsPW/evACm89NCqzaJiIiIiFiyg30k7ty5w/Dhwxk2bBiurq5mbbGxsTg7O5sdc3Z2Jj4+HoC4uLgHtsfFxZke398GmM5PCyUSIiIiIiKW7GD519DQUCpWrEidOnVStLm4uKT40h8fH29KOB7U7ubmZpY0uLi4mO4DuLm5pTk+JRIiIiIiInZo/fr1REdH4+fnB/z/y/53331Hs2bNiI6ONusfHR1tGq7k7e2darunpyfe3t5A8vCoggULmu4DeHp6pjk+JRIiIiIiIpbsYGjTp59+SkJCgunxpEmTAOjbty979uzhk08+wWg0YjAYMBqN7Nu3j3feeQcAX19fwsPDad26NQDnz5/n/Pnz+Pr64u3tjY+PD+Hh4aZEIjw8HB8fnxTzKv6NEgkRERERETtUoEABs8fZsmUDoEiRInh4eDB58mTGjh1Lu3btWL58ObGxsTRu3BiA9u3b07lzZ6pUqUKlSpUYO3YsdevWpVChQqb2SZMmkS9fPgAmT55Mly5dbIpPiYSIiIiIiCU7mCPxb9zd3ZkzZw7Dhw/niy++oEyZMsydO5esWbMC4Ofnx6hRo5g+fTo3btygVq1ajB492nR+165duXLlCsHBwTg6OtK2bVveeOMNm2IwGI1GY3q+KHthMBhwrRKU2WGIiKSbuIgwYu8+kR/ZIvKUcrXjn7TdmkzLsGvHbngvw679KNnxH5+IiIiISCaxgzkS9s6+azYiIiIiImKXVJEQEREREbFk53Mk7IESCRERERERS0okrNI7JCIiIiIiNlNFQkRERETEkiZbW6WKhIiIiIiI2EwVCRERERERS5ojYZXeIRERERERsZkqEiIiIiIiljRHwipVJERERERExGaqSIiIiIiIWNIcCauUSIiIiIiIWNLQJquUaomIiIiIiM1UkRARERERsWBQRcIqVSRERERERMRmqkiIiIiIiFhQRcI6VSRERERERMRmqkiIiIiIiFhSQcIqVSRERERERMRmqkiIiIiIiFjQHAnrlEiIiIiIiFhQImGdhjaJiIiIiIjNVJEQEREREbGgioR1qkiIiIiIiIjNVJEQEREREbGgioR1qkiIiIiIiIjNVJEQEREREbGkgoRVqkiIiIiIiIjNVJEQEREREbGgORLWqSIhIiIiIiI2U0VCRERERMSCKhLWKZEQEREREbGgRMI6DW0SERERERGbqSIhIiIiImJBFQnrVJEQERERERGbqSIhIiIiImJJBQmrVJEQERERERGbqSIhIiIiImJBcySsU0VCRERERERspoqEiIiIiIgFVSSsUyIhIiIiImJBiYR1GtokIiIiIiI2U0VCRERERMSSChJWqSIhIiIiIiI2U0VCRERERMSC5khYp4qEiIiIiIidOn36NF27dsXPz4+6desyb948U9uYMWMoU6aM2W3p0qWm9nXr1tGgQQN8fX0JCgri6tWrpjaj0cikSZOoUaMGAQEBTJgwgaSkJJtis4tEYs+ePfz999+ptt28eZP169c/4ohERERE5GlmMBgy7JZWSUlJdOvWjdy5c/Pll18ycuRIZs2axdq1awE4fvw4ffr0YevWraZbmzZtADhw4ACDBw8mODiYFStWcPPmTUJCQkzXXrhwIevWrSM0NJTp06ezdu1aFi5caNN7ZBeJxGuvvcbx48dTbTt06JDZixYREREReRpER0dTrlw5RowYQdGiRXnuueeoWbMm4eHhQHIiUb58eTw9PU03Nzc3AJYuXUrjxo1p2bIlZcuWZcKECWzevJmoqCgAlixZQq9evfD396dGjRr07duXZcuW2RRfps2RGDBgAOfPnweSSysjRozA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IiIWlEdYp6FNIiIiIiJiM1UkREREREQsaGiTdapIiIiIiIiIzVSREBERERGxoIKEdapIiIiIiIiIzVSREBERERGx4KCShFWqSIiIiIiIiM1UkRARERERsaCChHVKJERERERELGj5V+s0tElERERERGymioSIiIiIiAUHFSSsUkVCRERERERspoqEiIiIiIgFzZGwThUJERERERGxmSoSIiIiIiIWVJCwThUJERERERGxmSoSIiIiIiIWDKgkYY0SCRERERERC1r+1ToNbRIREREREZupIiEiIiIiYkHLv1qnioSIiIiIiNhMFQkREREREQsqSFinioSIiIiIiNhMFQkREREREQsOKklYpYqEiIiIiIjYTBUJERERERELKkhYp0RCRERERMSCln+1TkObRERERETEZqpIiIiIiIhYUEHCOlUkRERERETEZqpIiIiIiIhY0PKv1qkiISIiIiIiNlNFQkRERETEguoR1qkiISIiIiIiNlNFQkRERETEgvaRsE6JhIiIiIiIBQflEVZpaJOIiIiIiNhMiYSIiIiIiAWDwZBhN1tcvHiRXr16ERAQQJ06dRg/fjx37twBYMyYMZQpU8bstnTpUtO569ato0GDBvj6+hIUFMTVq1dNbUajkUmTJlGjRg0CAgKYMGECSUlJNsWmoU0iIiIiInbIaDTSq1cvcuTIwbJly7hx4waDBg3CwcGBAQMGcPz4cfr06UOrVq1M57i7uwNw4MABBg8ezMiRIylbtixjx44lJCSEOXPmALBw4ULWrVtHaGgoCQkJ9OvXDw8PD7p27Zrm+FSREBERERGxYDBk3C2tTpw4QUREBOPHj6dUqVL4+/vTq1cv1q1bB8Dx48cpX748np6eppubmxsAS5cupXHjxrRs2ZKyZcsyYcIENm/eTFRUFABLliyhV69e+Pv7U6NGDfr27cuyZctseo+USIiIiIiI2CFPT0/mzZtH3rx5zY7HxMQQExPDxYsXKVq0aKrnRkZG4u/vb3qcP39+fHx8iIyM5OLFi5w/f57q1aub2qtVq8bZs2e5dOlSmuNTIiEiIiIiYsEe5kjkyJGDOnXqmB4nJSWxdOlSatSowfHjxzEYDMyePZtnn32W5s2b8+WXX5r6Xrp0CS8vL7PreXh4cOHCBS5fvgxg1n4vWblw4UKa49McCRERERGRx8DEiRM5dOgQq1at4vfff8dgMFC8eHE6derEnj17GDp0KO7u7rzwwgvExcXh7Oxsdr6zszPx8fHExcWZHt/fBhAfH5/meJRIiIiIiIhYsLd9JCZOnMjixYv5+OOPKV26NKVKlaJevXrkypULgLJly3Lq1Ck+//xzXnjhBVxcXFIkBfHx8bi5uZklDS4uLqb7gGmORVpoaJOIiIiIiAV7GNp0z+jRo1m4cCETJ06kUaNGpvjuJRH3FC9enIsXLwLg7e1NdHS0WXt0dDSenp54e3sDmIY43X/f09MzzXEpkRARERERsVOhoaEsX76cKVOm0LRpU9PxadOm8cYbb5j1PXLkCMWLFwfA19eX8PBwU9v58+c5f/48vr6+eHt74+PjY9YeHh6Oj49PinkV/0ZDm0RERERELNjDyKbjx48zc+ZMunXrRrVq1cwqCPXq1WPu3LnMnz+fF154ga1bt/LVV1+xZMkSANq3b0/nzp2pUqUKlSpVYuzYsdStW5dChQqZ2idNmkS+fPkAmDx5Ml26dLEpPiUSIiIiIiJ26McffyQxMZFZs2Yxa9Yss7Y//viDadOmMX36dKZNm0aBAgWYPHkyfn5+APj5+TFq1CimT5/OjRs3qFWrFqNHjzad37VrV65cuUJwcDCOjo60bds2RYXDGoPRaDQ+7IuLj49PMRvcXhgMBlyrBGV2GCIi6SYuIozYuw/9kS0iYndc7fgn7bdWHMywa897tWKGXftReqg5Ep9//jn169enSpUqREVFMXz4cGbOnJnesYmIiIiIiJ2yOZFYu3YtkydPplWrVmTJkgWAEiVKMHv2bBYsWJDuAYqIiIiIPGoGQ8bdnhQ2JxILFixg8ODBvPvuuzg4JJ/+2muvMWzYMFasWJHuAYqIiIiIiP2xOZE4efIk/v7+KY4HBgZy/vz5dAlKRERERCQz2dM+EvbK5kQib968nDx5MsXx/fv327TurIiIiIiIPL5sTiReffVVRo0axY8//gjAiRMn+Pzzzxk7diytW7dO9wBFRERERB41zZGwzuZFt95++21u3brFBx98wJ07d+jevTtOTk60a9eOd955JyNiFBERERF5pByepG/8GeShVu/94IMP6NGjB8eOHcNoNFK8eHHc3d3TOzYREREREbFTNicS586dM9338PAA4ObNm9y8eRMAHx+fdApNRERERCRzqCBhnc2JRP369f91tvnhw4f/U0AiIiIiImL/bE4klixZYvY4MTGRkydPsmjRIgYOHJhugYmIiIiIZJYnaZnWjGJzIhEQEJDiWM2aNSlUqBAzZsygfv366RKYiIiIiIjYr4eabJ2aokWLcuTIkfS6XLqIiwjL7BBERNKVWxb9QiYiTw6j0ZjZITyQzXskPIX+02Tre2JiYpgzZw4FCxZMl6DSy19X4jI7BBGRdFPYw5UrMQmZHYaIiAiQTpOtjUYjWbNmZeLEiekWmIiIiIhIZtEcCev+82RrgCxZslC6dGmyZcuWLkGJiIiIiGQmB+URVj1UItG7d29KlCiREfGIiIiIiMhjwOZEYufOnbi4uGRELCIiIiIidkEVCetsnpDeqlUrJk2axNGjR4mPj8+ImERERERExM7ZXJHYvHkzf/31F999912q7drZWkREREQed5psbV2aEoly5cqxdetWPDw86NGjR0bHJCIiIiIidi5NicT9m4W0atUqw4IREREREbEHmiNhnTbtExERERERm6V5jsS3336Lu7u71X4tW7b8L/GIiIiIiGQ6TZGwLs2JxJgxY6z2MRgMSiRERERE5LHnoEzCqjQnEtu2bcPDwyMjYxERERERkcdEmhIJLX8lIiIiIk8TTSS2Lk3v0f2rNomIiIiIiKSpItGqVStcXFwyOhYREREREbugATnWpSmRGD9+fEbHISIiIiIij5E0T7YWEREREXlaaNUm6zSPREREREREbKaKhIiIiIiIBRUkrFMiISIiIiJiwUGJhFUa2iQiIiIiIjZTRUJERERExIImW1unioSIiIiIiNhMFQkREREREQsqSFinioSIiIiIiNhMFQkREREREQtatck6VSRERERERMRmqkiIiIiIiFgwoJKENUokREREREQsaGiTdRraJCIiIiIiNlNFQkRERETEgioS1qkiISIiIiIiNlMiISIiIiJiwWAwZNjNFhcvXqRXr14EBARQp04dxo8fz507dwCIiorijTfeoEqVKjRp0oStW7eanbt9+3aaNWuGr68vr732GlFRUWbtixYtok6dOvj5+TFo0CBiY2Ntik2JhIiIiIiIHTIajfTq1YvY2FiWLVvGxx9/zM8//8zUqVMxGo0EBQWRN29eVq9eTYsWLQgODubcuXMAnDt3jqCgIFq3bs2qVavIkycPPXv2xGg0AvDdd98RGhrKqFGjWLx4MZGRkUycONGm+JRIiIiIiIhYcDBk3C2tTpw4QUREBOPHj6dUqVL4+/vTq1cv1q1bx86dO4mKimLUqFGUKFGC7t27U6VKFVavXg3AypUrqVixIl26dKFUqVKMHz+es2fPsnv3bgCWLFnC66+/Tr169ahcuTIjR45k9erVNlUllEiIiIiIiNghT09P5s2bR968ec2Ox8TEEBkZSfny5cmaNavpeLVq1YiIiAAgMjISf39/U5ubmxsVKlQgIiKCxMREfvvtN7P2KlWqcPfuXY4cOZLm+LRqk4iIiIiIBRunMmSIHDlyUKdOHdPjpKQkli5dSo0aNbh8+TJeXl5m/T08PLhw4QLAv7bfvHmTO3fumLU7OTmRK1cu0/lpoYqEiIiIiIgFB4Mhw24Pa+LEiRw6dIjevXsTGxuLs7OzWbuzszPx8fEA/9oeFxdnevyg89NCiYSIiIiIiJ2bOHEiixcvZuLEiZQuXRoXF5cUX/rj4+NxdXUFeGC7m5sbLi4upseptaeVEgkREREREQv2MNn6ntGjR7Nw4UImTpxIo0aNAPD29iY6OtqsX3R0tGm40oPaPT09yZUrFy4uLmbtCQkJXL9+HU9Pz7S/R7a/FBEREREReRRCQ0NZvnw5U6ZMoWnTpqbjvr6+/P7776ZhSgDh4eH4+vqa2sPDw01tsbGxHDp0CF9fXxwcHKhUqZJZe0REBE5OTpQtWzbNsSmREBERERGxYDBk3C2tjh8/zsyZM3n77bepVq0aly9fNt0CAgLInz8/ISEhHD16lLlz53LgwAHatm0LQJs2bdi3bx9z587l6NGjhISEULBgQQIDAwHo0KED8+fPZ9OmTRw4cIARI0bwyiuv2DS0yWC8tyvFE8ZgMPDXlTjrHUVEHhOFPVy5EpOQ2WGIiKSbPNkcMzuEB5qx7WSGXfvdWsXS1G/u3LlMnjw51bY//viD06dPM3jwYCIjIylSpAiDBg3imWeeMfXZvHkz48aN48KFC/j5+TF69GgKFSpkdv1FixYRHx9Pw4YNGT58uGn+RFookRAReUwokRCRJ409JxJh205l2LWDahXNsGs/ShraJCIiIiIiNtOGdCIiIiIiFuxhQzp7p0RCRERERMTCwyzT+rTR0CYREREREbGZKhIiIiIiIhYcNLbJKlUkRERERETEZqpIiIiIiIhYUEHCOlUkRERERETEZqpIiIiIiIhY0BwJ61SREBERERERm6kiISIiIiJiQQUJ65RIiIiIiIhY0LAd6/QeiYiIiIiIzVSREBERERGxYNDYJqtUkRAREREREZupIiEiIiIiYkH1COtUkRAREREREZupIiEiIiIiYkEb0lmnioSIiIiIiNhMFQkREREREQuqR1inREJERERExIJGNlmnoU0iIiIiImIzVSRERERERCxoQzrrVJEQERERERGbqSIhIiIiImJBv7Zbp/dIRERERERspoqEiIiIiIgFzZGwThUJERERERGxmSoSIiIiIiIWVI+wThUJERERERGxmV0kEiEhIURFRaXaduLECd55551HHJGIiIiIPM0MBkOG3Z4UmTa06dy5c6b7X331FQ0aNMDR0TFFvy1btrB9+/ZHGZqIiIiIPOXs4td2O5dpicTIkSPZsmWL6XFwcHCq/YxGI7Vq1XpUYYmIiIiISBpkWiIxatQotm/fjtFoZNCgQfTo0YPChQub9XFwcCBHjhwEBgZmUpQiIiIi8jR6koYgZZRMSyS8vb1p1aoVkPwHVbduXXLnzp1Z4YiIiIiIiA0yLZHYs2eP6X7BggU5duzYv/avXr16RockIiIiIgJo+de0yLREonPnzhgMBoxGo6l0ZDQazfrc33748OHMCFNERERERFKRaYnEkiVLMuupRURERET+laZIWJdpiURAQEBmPbWIiIiIiPxHmZZI3C80NNRqnwctDysiIiIikt4cNEvCKrtPJNzd3fHy8lIiISIiIiKPjIY2WWcXicSRI0dSHLt9+zZ79+5lxIgRDB06NBOiEhERERGRB7Hb3b+zZs3Ks88+S1BQEBMmTMjscERERETkKWLIwP89Kew2kbjHx8eH48ePZ3YYIiIiIiJyH7sY2pQao9HIhQsXmDdvHgUKFMjscERERETkKaI5EtbZRSJRtmxZ06Z0loxGo4Y2iYiIiIjYGbtIJIKCglJNJNzd3albty5FixZ99EGJiIiIyFPL3pZ/jY+Pp3Xr1gwdOpTAwEAAxowZw6effmrWb+jQoXTq1AmAdevWMXXqVC5fvkzt2rUZPXo0efLkAZJ/rJ88eTKrVq0iKSmJtm3b0rdvXxwc0j7zwS4SiXfffTezQxARERERsUt37tyhT58+HD161Oz48ePH6dOnD61atTIdc3d3B+DAgQMMHjyYkSNHUrZsWcaOHUtISAhz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12AwsHjx4kcYnYiIiIiI/fL19WXu3LnExcWZqhDh4eFUq1bN1B4eHm7qHxsby6FDhwgODsbBwYFKlSoRHh5u2pMiIiICJycnypYtm+YYMi2RqFq1qum+tc217WjzbRERERF5Ctj3DAkICAggf/78hISE0LNnT37++WcOHDjA+PHjAWjTpg3z589n7ty51KtXj7CwMAoWLGhKHDp06MCwYcMoXbo0Xl5ejBgxgldeeeXx2JDu008/zaynFhERERH5d3aeSTg6OjJz5kwGDx5M69atKVKkCGFhYfj4+ABQsGBBZsyYwbhx4wgLC8PPz4+wsDAM/4ytatq0KWfPnmXYsGHEx8fTsGFD+vXrZ1MMBuMT+nO/wWDgrytxmR2GiEi6KezhypWYhMwOQ0Qk3eTJ5pjZITzQnxdvZ9i1S3tntd7pMWAXy7+KiIiIiNgTe1/+1R7Y3c7WIiIiIiJi/1SREBERERGxkF7LtD7JVJEQERERERGbqSIhIiIiImJBBQnrVJEQERERERGbqSIhIiIiImJJJQmrlEiIiIiIiFjQ8q/WaWiTiIiIiIjYTBUJERERERELWv7VOlUkRERERETEZqpIiIiIiIhYUEHCOlUkRERERETEZqpIiIiIiIhYUknCKlUkRERERETEZqpIiIiIiIhY0D4S1imREBERERGxoOVfrdPQJhERERERsZkqEiIiIiIiFlSQsE4VCRERERERsZkqEiIiIiIiFjRHwjpVJERERERExGaqSIiIiIiIpKCShDWqSIiIiIiIiM1UkRARERERsaA5EtYpkRARERERsaA8wjoNbRIREREREZupIiEiIiIiYkFDm6xTRUJERERERGymioSIiIiIiAWDZklYpYqEiIiIiIjYTBUJERERERFLKkhYpYqEiIiIiIjYTBUJERERERELKkhYp0RCRERERMSCln+1TkObRERERETEZqpIiIiIiIhY0PKv1qkiISIiIiIiNlNFQkRERETEkgoSVqkiISIiIiIiNlNFQkRERETEggoS1qkiISIiIiIiNlNFQkRERETEgvaRsE6JhIiIiIiIBS3/ap2GNomIiIiIiM1UkRARERERsaChTdapIiEiIiIiYqd++OEHypQpY3br1asXAIcOHeLll1/G19eXNm3acPDgQbNz161bR4MGDfD19SUoKIirV6+ma2xKJERERERE7NSxY8eoV68eW7duNd3GjBnD7du36datG/7+/qxZswY/Pz+6d+/O7du3AThw4ACDBw8mODiYFStWcPPmTUJCQtI1NiUSIiIiIiJ26vjx45QuXRpPT0/TLUeOHGzYsAEXFxf69+9PiRIlGDx4MNmyZWPjxo0ALF26lMaNG9OyZUvKli3LhAkT2Lx5M1FRUekWmxIJERERERELBkPG3Wxx/PhxihYtmuJ4ZGQk1apVw/DPBQ0GA1WrViUiIsLU7u/vb+qfP39+fHx8iIyMfNi3JAUlEiIiIiIidshoNHLy5Em2bt1Ko0aNaNCgAZMmTSI+Pp7Lly/j5eVl1t/Dw4MLFy4AcOnSpX9tTw9atUlERERExII97CNx7tw5YmNjcXZ2ZurUqZw5c4YxY8YQFxdnOn4/Z2dn4uPjAYiLi/vX9vSgREJERERExII9LP9aoEABdu3aRc6cOTEYDJQrV46kpCT69etHQEBAiqQgPj4eV1dXAFxcXFJtd3NzS7f4lEiIiIiIiNipXLlymT0uUaIEd+7cwdPTk+joaLO26Oho03Amb2/vVNs9PT3TLTbNkRARERERsWDIwFta/frrrwQGBhIbG2s6dvjwYXLlykW1atXYv38/RqMRSJ5PsW/fPnx9fQHw9fUlPDzcdN758+c5f/68qT09KJEQEREREbFDfn5+uLi4MGTIEE6cOMHmzZuZMGECb731Fi+++CI3b95k7NixHDt2jLFjxxIbG0vjxo0BaN++PV9//TUrV67kyJEj9O/fn7p161KoUKF0i89gvJfGPGEMBgN/XYnL7DBERNJNYQ9XrsQkZHYYIiLpJk82x8wO4YFu3UnKsGtnd0n7b/lHjx5l3LhxREREkC1bNtq1a0dQUBAGg4EDBw4wfPhwjh8/TpkyZRg5ciTly5c3nbtmzRqmT5/OjRs3qFWrFqNHjyZ37tzp9jqUSIiIPCaUSIjIk0aJxONNk61FRERERCzYw/Kv9u7JSIdEREREROSRUkVCRERERMSCPewjYe9UkRAREREREZupIiEiIiIiYkEFCeuUSIiIiIiIWFImYZWGNomIiIiIiM1UkRARERERsaDlX61TRUJERERERGymioSIiIiIiAUt/2qdKhIiIiIiImIzg9FoNGZ2ECIiIiIi8nhRRUJERERERGymREJERERERGymREJERERERGymREJERERERGymREJERERERGymREJERERERGymREJERERERGymREJERERERGymRELEjmm/SBGR1OnzUSTzKZGQJ1rnzp0pU6aM6Va2bFn8/Pxo3bo1S5YsISEhwabrJSQkMHDgQPz8/KhatSo7d+5Mt1gHDhxI/fr1TY9//PFHBgwYkG7XFxH70LlzZ8qXL89vv/2Wanv9+vUZOHDgI47q/9asWUOZMmU4c+aMTeetX7+eevXqUbFiRYYNG5Zu8ezatYsyZcqwa9cuAC5cuEC3bt04e/Zsuj2HiDwcp8wOQCSjlS9fnuHDhwOQmJjIjRs32LJlC+PHj2fv3r1MnToVB4e05dS//vorX375JT179uSZZ56hfPnyGRb3okWLMuzaIpK5EhMTCQkJYc2aNTg7O2d2OOli1KhRFC1alA8//BBvb+8Me57t27ezefPmDLu+iKSdEgl54rm7u1OlShWzY/Xr16d48eKMHTuWdevW0bx58zRd6/r16wC0bt2aQoUKpXOkIvK0yJ49O0ePHiUsLIzevXtndjjp4vr169SqVYvAwMDMDkVEHhENbZKnVqdOnfD29mb58uWmYytXrqRp06ZUrFiRunXrMmPGDBITE4HkoUf3hhs0aNCAzp07A3D16lVGjhxpKukHBAQQFBRkNiwgtaEK/zZ8oHPnzuzevZvdu3eblfRF5MlQrlw5WrZsybx58zh48OAD+yUmJrJs2TJeeuklKleuTN26dZk0aRJ37twx9Rk4cCBvvPEGq1evplGjRlSsWJEWLVqwZcsWq3EkJSUxc+ZM6tati6+vLz179uTGjRsp+v355590796dqlWrUrVqVYKCgoiKigL+P/QIICwszOxzbeXKlbRu3ZoqVapQuXJlWrRowbfffmu67owZM0zn3q9MmTLMmDEjxfE1a9YQEhICwPPPP5+pQ8BERImEPMUcHByoWbMmBw4cICEhgTlz5jB06FBq1qzJ7Nmz6dixI5988glDhw4FoGfPnvTo0QOA0NBQhg8fjtFopHv37mzbto2+ffsyf/58goOD2bFjh2k41cMYPnw45cuXp3z58qxYsYIKFSqky2sWEfsxaNAgcufOTUhICPHx8an2GTZsGOPHj6dBgwbMmjWLjh07snTpUnr27Gk22fjgwYPMnz+fXr16ERYWhqOjI++++26qScH9Jk6cSFhYGG3btiU0NJRcuXIxefJk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Ux89enTDZ0gmkxw+fNgIEQButxu32/3LvcvLy3z48IFwOEw0GjXG19bWyGazzM3NkUwm2b9/f87/qKmp+Z1yiIjI/5SChIiISQ6HIycorKeoqMi4/tH4HIlEcLlcv9xbUFCAxWLJ6VcAckLCz/7pu5/9mNfr9Rq7JH/ndDpNry8iIqJmaxGRTeZyucjPz+f9+/eUl5cbn2fPnjE8PIzVaqWyspKpqSlWVlaM301NTW0454EDB5ienubbt2/G2MTEBMePHyebzWKxWIzxkpISiouLSaVSOeu/evWKSCQCQGVlJW/fvmV5efm31hcREVGQEBHZZHa7nebmZqLRKA8fPiSVSjE+Ps7AwAB79uwBoKWlhUwmQ3d3N7Ozszx9+pTBwcEN5zx79iwfP37E7/czOzvL5OQkN2/exO12U1hYiM1m49OnT7x584bV1VUuX77M6Ogo8Xicd+/eMTExQW9vL0VFRRQUFNDY2EhJSQldXV28fv2aFy9e0N/fv1UlEhGRbUj71iIiW8Dr9bJr1y6i0ShLS0s4nU48Hg+XLl0CoKysjFgsRjAY5PTp0zidTtrb2wkEAuvOV1ZWxsjICAMDAzQ1NeFwODh58iSdnZ0AnDhxgkQiwalTp4jH47S1tVFYWMjo6CihUIjS0lLOnDmDx+MBvr8bIxaL0dfXR0tLCw6HA4/Hg9fr3ZoCiYjItmP5Q28tEhERERERk3S0SURERERETFOQEBERERER0xQkRERERETENAUJERERERExTUFCRERERERMU5AQERERERHTFCRERERERMQ0BQkRERERETFNQUJERERERExTkBAREREREdMUJERERERExLQ/AZtOqJFrH0KtAAAAAElFTkSuQmCC",
            "text/plain": [
              "<Figure size 1000x600 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:01:47,678] A new study created in memory with name: no-name-43ae08e0-7d5f-4194-8909-9d898340fed2\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001242 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:01:48,078] Trial 0 finished with value: 0.7637057436593992 and parameters: {'n_estimators': 900, 'max_depth': 1, 'learning_rate': 0.06915129259224471, 'num_leaves': 106, 'min_child_samples': 50, 'subsample': 0.8476606770904721, 'colsample_bytree': 0.8855779870258378}. Best is trial 0 with value: 0.7637057436593992.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000839 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:01:49,013] Trial 1 finished with value: 0.7913421561218532 and parameters: {'n_estimators': 200, 'max_depth': 0, 'learning_rate': 0.014169303062513468, 'num_leaves': 71, 'min_child_samples': 23, 'subsample': 0.9515741174239757, 'colsample_bytree': 0.9794014092970718}. Best is trial 1 with value: 0.7913421561218532.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001272 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:01:52,722] Trial 2 finished with value: 0.7076393202861954 and parameters: {'n_estimators': 700, 'max_depth': 9, 'learning_rate': 0.013359521846046891, 'num_leaves': 111, 'min_child_samples': 12, 'subsample': 0.9502013343190583, 'colsample_bytree': 0.6717989701227706}. Best is trial 1 with value: 0.7913421561218532.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000847 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:01:53,300] Trial 3 finished with value: 0.7927208886356797 and parameters: {'n_estimators': 100, 'max_depth': 28, 'learning_rate': 0.015808279286753945, 'num_leaves': 90, 'min_child_samples': 28, 'subsample': 0.7812949927706508, 'colsample_bytree': 0.876342263639809}. Best is trial 3 with value: 0.7927208886356797.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001157 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:01:56,007] Trial 4 finished with value: 0.7497196220680377 and parameters: {'n_estimators': 700, 'max_depth': 0, 'learning_rate': 0.1797239806946256, 'num_leaves': 77, 'min_child_samples': 27, 'subsample': 0.936590383332392, 'colsample_bytree': 0.7403076097021188}. Best is trial 3 with value: 0.7927208886356797.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001135 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:01:56,600] Trial 5 finished with value: 0.7757179742717177 and parameters: {'n_estimators': 550, 'max_depth': 4, 'learning_rate': 0.016944962221786826, 'num_leaves': 50, 'min_child_samples': 24, 'subsample': 0.9343687735657855, 'colsample_bytree': 0.7869595069770097}. Best is trial 3 with value: 0.7927208886356797.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001143 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:01:59,746] Trial 6 finished with value: 0.7111216700151046 and parameters: {'n_estimators': 550, 'max_depth': 28, 'learning_rate': 0.015443382627070507, 'num_leaves': 102, 'min_child_samples': 22, 'subsample': 0.6570955446674027, 'colsample_bytree': 0.6625312626517805}. Best is trial 3 with value: 0.7927208886356797.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001302 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:01,632] Trial 7 finished with value: 0.7508884572748115 and parameters: {'n_estimators': 600, 'max_depth': 7, 'learning_rate': 0.057108577140139366, 'num_leaves': 115, 'min_child_samples': 30, 'subsample': 0.7268529076992072, 'colsample_bytree': 0.7231231306305852}. Best is trial 3 with value: 0.7927208886356797.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000941 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:03,462] Trial 8 finished with value: 0.725857696490351 and parameters: {'n_estimators': 500, 'max_depth': 7, 'learning_rate': 0.01768906668765361, 'num_leaves': 107, 'min_child_samples': 26, 'subsample': 0.7847805959287094, 'colsample_bytree': 0.6137740194510973}. Best is trial 3 with value: 0.7927208886356797.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001238 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:06,816] Trial 9 finished with value: 0.7549436553354419 and parameters: {'n_estimators': 1000, 'max_depth': 15, 'learning_rate': 0.060138176114686866, 'num_leaves': 64, 'min_child_samples': 15, 'subsample': 0.6068004266594995, 'colsample_bytree': 0.7225655399549461}. Best is trial 3 with value: 0.7927208886356797.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001477 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:07,412] Trial 10 finished with value: 0.7891240493768382 and parameters: {'n_estimators': 100, 'max_depth': 29, 'learning_rate': 0.032361869510432476, 'num_leaves': 91, 'min_child_samples': 42, 'subsample': 0.8242620575732902, 'colsample_bytree': 0.9016678997362396}. Best is trial 3 with value: 0.7927208886356797.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001065 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:07,925] Trial 11 finished with value: 0.7929934004076805 and parameters: {'n_estimators': 100, 'max_depth': 21, 'learning_rate': 0.029760135895266555, 'num_leaves': 75, 'min_child_samples': 38, 'subsample': 0.8778900216624864, 'colsample_bytree': 0.9774252383639461}. Best is trial 11 with value: 0.7929934004076805.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001390 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:08,793] Trial 12 finished with value: 0.7659004679478423 and parameters: {'n_estimators': 300, 'max_depth': 22, 'learning_rate': 0.030627634969399447, 'num_leaves': 40, 'min_child_samples': 38, 'subsample': 0.7547248966763422, 'colsample_bytree': 0.9981258657078288}. Best is trial 11 with value: 0.7929934004076805.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001237 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:10,848] Trial 13 finished with value: 0.762957168280397 and parameters: {'n_estimators': 300, 'max_depth': 22, 'learning_rate': 0.03094272262546774, 'num_leaves': 127, 'min_child_samples': 37, 'subsample': 0.8722209446109935, 'colsample_bytree': 0.9004375755490975}. Best is trial 11 with value: 0.7929934004076805.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001373 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:11,371] Trial 14 finished with value: 0.7076795290258359 and parameters: {'n_estimators': 100, 'max_depth': 23, 'learning_rate': 0.10830494664473744, 'num_leaves': 86, 'min_child_samples': 36, 'subsample': 0.8833650470854945, 'colsample_bytree': 0.8489031680811534}. Best is trial 11 with value: 0.7929934004076805.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001389 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:12,617] Trial 15 finished with value: 0.7728357829051026 and parameters: {'n_estimators': 350, 'max_depth': 16, 'learning_rate': 0.02573990807265924, 'num_leaves': 56, 'min_child_samples': 48, 'subsample': 0.699006833654111, 'colsample_bytree': 0.9494728974002812}. Best is trial 11 with value: 0.7929934004076805.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001407 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:14,455] Trial 16 finished with value: 0.7369778525982082 and parameters: {'n_estimators': 400, 'max_depth': 25, 'learning_rate': 0.29045162153556925, 'num_leaves': 91, 'min_child_samples': 33, 'subsample': 0.7863256947538122, 'colsample_bytree': 0.8204387148465698}. Best is trial 11 with value: 0.7929934004076805.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001311 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:15,382] Trial 17 finished with value: 0.7934294124264463 and parameters: {'n_estimators': 200, 'max_depth': 18, 'learning_rate': 0.023034844018692994, 'num_leaves': 68, 'min_child_samples': 43, 'subsample': 0.8963401256002842, 'colsample_bytree': 0.9494212692882573}. Best is trial 17 with value: 0.7934294124264463.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001257 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:16,027] Trial 18 finished with value: 0.7725358138314682 and parameters: {'n_estimators': 200, 'max_depth': 18, 'learning_rate': 0.04161811185538854, 'num_leaves': 38, 'min_child_samples': 42, 'subsample': 0.9835890220570095, 'colsample_bytree': 0.9471574560085766}. Best is trial 17 with value: 0.7934294124264463.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001353 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:16,979] Trial 19 finished with value: 0.791670777156254 and parameters: {'n_estimators': 200, 'max_depth': 12, 'learning_rate': 0.010456079737408188, 'num_leaves': 66, 'min_child_samples': 45, 'subsample': 0.8941251990982733, 'colsample_bytree': 0.9389711653325225}. Best is trial 17 with value: 0.7934294124264463.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001227 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:18,184] Trial 20 finished with value: 0.7527765517392401 and parameters: {'n_estimators': 400, 'max_depth': 19, 'learning_rate': 0.08469988061650548, 'num_leaves': 53, 'min_child_samples': 42, 'subsample': 0.9960521744101284, 'colsample_bytree': 0.967974801821607}. Best is trial 17 with value: 0.7934294124264463.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001441 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:18,723] Trial 21 finished with value: 0.7905632657911107 and parameters: {'n_estimators': 100, 'max_depth': 27, 'learning_rate': 0.02194561988889798, 'num_leaves': 78, 'min_child_samples': 32, 'subsample': 0.8235778866343941, 'colsample_bytree': 0.9157583420409109}. Best is trial 17 with value: 0.7934294124264463.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001248 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:19,928] Trial 22 finished with value: 0.7291533684288943 and parameters: {'n_estimators': 250, 'max_depth': 19, 'learning_rate': 0.038932390474788664, 'num_leaves': 82, 'min_child_samples': 17, 'subsample': 0.902035757963253, 'colsample_bytree': 0.8651895605495238}. Best is trial 17 with value: 0.7934294124264463.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001430 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:20,855] Trial 23 finished with value: 0.7914347912795846 and parameters: {'n_estimators': 150, 'max_depth': 30, 'learning_rate': 0.022376087699499735, 'num_leaves': 98, 'min_child_samples': 39, 'subsample': 0.8257479123790622, 'colsample_bytree': 0.9986510383504763}. Best is trial 17 with value: 0.7934294124264463.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001307 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:21,307] Trial 24 finished with value: 0.7974071738821128 and parameters: {'n_estimators': 100, 'max_depth': 24, 'learning_rate': 0.010161109705679374, 'num_leaves': 62, 'min_child_samples': 34, 'subsample': 0.86007339929335, 'colsample_bytree': 0.935387392571255}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001253 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:22,221] Trial 25 finished with value: 0.7266507416693029 and parameters: {'n_estimators': 250, 'max_depth': 12, 'learning_rate': 0.046771554796917685, 'num_leaves': 60, 'min_child_samples': 34, 'subsample': 0.8533542000559708, 'colsample_bytree': 0.8319340410155707}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001065 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:23,634] Trial 26 finished with value: 0.774635858977275 and parameters: {'n_estimators': 450, 'max_depth': 25, 'learning_rate': 0.010357547050336223, 'num_leaves': 45, 'min_child_samples': 46, 'subsample': 0.9084448408156283, 'colsample_bytree': 0.925451366120464}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001323 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:24,556] Trial 27 finished with value: 0.7913033249225909 and parameters: {'n_estimators': 200, 'max_depth': 20, 'learning_rate': 0.02216797377031479, 'num_leaves': 71, 'min_child_samples': 40, 'subsample': 0.8555186518829893, 'colsample_bytree': 0.9681821506858173}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001215 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:25,910] Trial 28 finished with value: 0.77643990245093 and parameters: {'n_estimators': 300, 'max_depth': 25, 'learning_rate': 0.012811848221654216, 'num_leaves': 69, 'min_child_samples': 35, 'subsample': 0.8129660174157025, 'colsample_bytree': 0.93320468143838}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001426 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:26,265] Trial 29 finished with value: 0.7431785261229797 and parameters: {'n_estimators': 150, 'max_depth': 17, 'learning_rate': 0.08757846674416594, 'num_leaves': 31, 'min_child_samples': 50, 'subsample': 0.9187689083473017, 'colsample_bytree': 0.8001549836035979}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001196 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:29,010] Trial 30 finished with value: 0.7448131294524563 and parameters: {'n_estimators': 800, 'max_depth': 13, 'learning_rate': 0.01922127359529251, 'num_leaves': 60, 'min_child_samples': 45, 'subsample': 0.8677546425388332, 'colsample_bytree': 0.8833673979672074}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001348 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:29,548] Trial 31 finished with value: 0.7974071738821128 and parameters: {'n_estimators': 100, 'max_depth': 21, 'learning_rate': 0.011915437882747298, 'num_leaves': 77, 'min_child_samples': 30, 'subsample': 0.7629617688418547, 'colsample_bytree': 0.876545052852918}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001322 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:30,268] Trial 32 finished with value: 0.7947314733165217 and parameters: {'n_estimators': 150, 'max_depth': 22, 'learning_rate': 0.011248770043560667, 'num_leaves': 72, 'min_child_samples': 30, 'subsample': 0.7207252041311856, 'colsample_bytree': 0.9616828636813094}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001414 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:31,029] Trial 33 finished with value: 0.7923520645941062 and parameters: {'n_estimators': 150, 'max_depth': 24, 'learning_rate': 0.011805740481850013, 'num_leaves': 73, 'min_child_samples': 30, 'subsample': 0.6901322314768166, 'colsample_bytree': 0.9502635914721286}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001013 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:32,499] Trial 34 finished with value: 0.7908596443687942 and parameters: {'n_estimators': 250, 'max_depth': 20, 'learning_rate': 0.013151670184845575, 'num_leaves': 81, 'min_child_samples': 20, 'subsample': 0.7562554233256344, 'colsample_bytree': 0.9172996242011606}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001534 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:33,135] Trial 35 finished with value: 0.7971986379352861 and parameters: {'n_estimators': 150, 'max_depth': 26, 'learning_rate': 0.01061057769473457, 'num_leaves': 59, 'min_child_samples': 31, 'subsample': 0.7497072434877965, 'colsample_bytree': 0.9039439503990652}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001358 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:33,677] Trial 36 finished with value: 0.7956909991496622 and parameters: {'n_estimators': 150, 'max_depth': 27, 'learning_rate': 0.011059630233002842, 'num_leaves': 48, 'min_child_samples': 28, 'subsample': 0.7502347564372384, 'colsample_bytree': 0.8538062554444574}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001363 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:34,752] Trial 37 finished with value: 0.7744413525132275 and parameters: {'n_estimators': 350, 'max_depth': 27, 'learning_rate': 0.013546807764923046, 'num_leaves': 43, 'min_child_samples': 25, 'subsample': 0.7547157761527282, 'colsample_bytree': 0.8621994507380315}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001306 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:36,986] Trial 38 finished with value: 0.753620716902302 and parameters: {'n_estimators': 700, 'max_depth': 27, 'learning_rate': 0.01004166028548245, 'num_leaves': 49, 'min_child_samples': 28, 'subsample': 0.6470123107454224, 'colsample_bytree': 0.762969065149002}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001285 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:37,603] Trial 39 finished with value: 0.7711307559473868 and parameters: {'n_estimators': 150, 'max_depth': 30, 'learning_rate': 0.015844342937706493, 'num_leaves': 57, 'min_child_samples': 32, 'subsample': 0.7281149667742773, 'colsample_bytree': 0.831207077027218}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001299 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:38,473] Trial 40 finished with value: 0.7725701058169867 and parameters: {'n_estimators': 250, 'max_depth': 26, 'learning_rate': 0.018429137686105015, 'num_leaves': 50, 'min_child_samples': 22, 'subsample': 0.7724240184097717, 'colsample_bytree': 0.8911128544848286}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001159 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:39,135] Trial 41 finished with value: 0.7775110219579897 and parameters: {'n_estimators': 150, 'max_depth': 23, 'learning_rate': 0.011957735348688065, 'num_leaves': 63, 'min_child_samples': 29, 'subsample': 0.7279130778511056, 'colsample_bytree': 0.8535908304195099}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001370 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:39,553] Trial 42 finished with value: 0.7966900955853848 and parameters: {'n_estimators': 100, 'max_depth': 24, 'learning_rate': 0.014936380945928621, 'num_leaves': 55, 'min_child_samples': 27, 'subsample': 0.7029856088496118, 'colsample_bytree': 0.8742942950467483}. Best is trial 24 with value: 0.7974071738821128.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001348 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:39,963] Trial 43 finished with value: 0.7976747457527419 and parameters: {'n_estimators': 100, 'max_depth': 28, 'learning_rate': 0.015248007037934169, 'num_leaves': 55, 'min_child_samples': 26, 'subsample': 0.6744930229595016, 'colsample_bytree': 0.879610091314949}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001290 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:40,377] Trial 44 finished with value: 0.7974071738821128 and parameters: {'n_estimators': 100, 'max_depth': 29, 'learning_rate': 0.014734085641008561, 'num_leaves': 54, 'min_child_samples': 26, 'subsample': 0.6628010605645555, 'colsample_bytree': 0.8780912788672331}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001095 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:40,829] Trial 45 finished with value: 0.7972491725654572 and parameters: {'n_estimators': 100, 'max_depth': 29, 'learning_rate': 0.014747888892174372, 'num_leaves': 62, 'min_child_samples': 24, 'subsample': 0.6532818884586022, 'colsample_bytree': 0.9054635496552464}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001250 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:41,268] Trial 46 finished with value: 0.7807126444912651 and parameters: {'n_estimators': 100, 'max_depth': 29, 'learning_rate': 0.01716863163615632, 'num_leaves': 62, 'min_child_samples': 20, 'subsample': 0.6010221933103979, 'colsample_bytree': 0.7972936222631068}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001284 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:43,276] Trial 47 finished with value: 0.7601032404211066 and parameters: {'n_estimators': 600, 'max_depth': 29, 'learning_rate': 0.014569156627480229, 'num_leaves': 53, 'min_child_samples': 24, 'subsample': 0.634890461593864, 'colsample_bytree': 0.8819135697347862}. Best is trial 43 with value: 0.7976747457527419.\n",
            "[I 2025-01-01 15:02:43,403] Trial 48 finished with value: 0.7939728990768331 and parameters: {'n_estimators': 100, 'max_depth': 3, 'learning_rate': 0.018553935211733482, 'num_leaves': 38, 'min_child_samples': 20, 'subsample': 0.6709384068891431, 'colsample_bytree': 0.9094404355270327}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001271 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n",
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000895 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:44,278] Trial 49 finished with value: 0.7672096693738072 and parameters: {'n_estimators': 200, 'max_depth': 28, 'learning_rate': 0.026353648850385894, 'num_leaves': 67, 'min_child_samples': 25, 'subsample': 0.6278506168406662, 'colsample_bytree': 0.8435033843636274}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000992 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:48,604] Trial 50 finished with value: 0.7484713408813447 and parameters: {'n_estimators': 950, 'max_depth': 30, 'learning_rate': 0.17871659021510278, 'num_leaves': 86, 'min_child_samples': 22, 'subsample': 0.6676948614468183, 'colsample_bytree': 0.8116352825445111}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001359 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:49,070] Trial 51 finished with value: 0.7974071738821128 and parameters: {'n_estimators': 100, 'max_depth': 26, 'learning_rate': 0.013789199642339696, 'num_leaves': 60, 'min_child_samples': 32, 'subsample': 0.6258780676289016, 'colsample_bytree': 0.8986090473916002}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001356 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:49,542] Trial 52 finished with value: 0.7974071738821128 and parameters: {'n_estimators': 100, 'max_depth': 26, 'learning_rate': 0.014847125160487987, 'num_leaves': 65, 'min_child_samples': 11, 'subsample': 0.6820530113187246, 'colsample_bytree': 0.8917461320758101}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001373 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:50,513] Trial 53 finished with value: 0.7799412462908012 and parameters: {'n_estimators': 200, 'max_depth': 24, 'learning_rate': 0.012991161371512553, 'num_leaves': 75, 'min_child_samples': 11, 'subsample': 0.6206440139338045, 'colsample_bytree': 0.8908271040263188}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001349 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:50,917] Trial 54 finished with value: 0.7773486916506033 and parameters: {'n_estimators': 100, 'max_depth': 26, 'learning_rate': 0.020248505761656852, 'num_leaves': 52, 'min_child_samples': 14, 'subsample': 0.6829246417638217, 'colsample_bytree': 0.6061571962357281}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001291 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:51,787] Trial 55 finished with value: 0.7693185555701126 and parameters: {'n_estimators': 200, 'max_depth': 28, 'learning_rate': 0.01665041275207482, 'num_leaves': 64, 'min_child_samples': 10, 'subsample': 0.6159274059171691, 'colsample_bytree': 0.8710067351012266}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001232 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:52,715] Trial 56 finished with value: 0.7708741755158881 and parameters: {'n_estimators': 300, 'max_depth': 23, 'learning_rate': 0.015896559963415827, 'num_leaves': 44, 'min_child_samples': 36, 'subsample': 0.6421226173032918, 'colsample_bytree': 0.6590683676633242}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001527 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:53,154] Trial 57 finished with value: 0.796325740917975 and parameters: {'n_estimators': 100, 'max_depth': 21, 'learning_rate': 0.026986857794985365, 'num_leaves': 57, 'min_child_samples': 34, 'subsample': 0.7088040060424976, 'colsample_bytree': 0.9281875595247823}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001450 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:54,262] Trial 58 finished with value: 0.7715131082540485 and parameters: {'n_estimators': 250, 'max_depth': 25, 'learning_rate': 0.012243888543255815, 'num_leaves': 67, 'min_child_samples': 17, 'subsample': 0.6649075202641516, 'colsample_bytree': 0.8352997119273835}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001307 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:55,149] Trial 59 finished with value: 0.7846368638363087 and parameters: {'n_estimators': 150, 'max_depth': 26, 'learning_rate': 0.034705187025785476, 'num_leaves': 95, 'min_child_samples': 32, 'subsample': 0.6780869723378281, 'colsample_bytree': 0.9847264923905142}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001196 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:56,183] Trial 60 finished with value: 0.7720138529203253 and parameters: {'n_estimators': 200, 'max_depth': 21, 'learning_rate': 0.013971698662238316, 'num_leaves': 79, 'min_child_samples': 26, 'subsample': 0.7995733810921105, 'colsample_bytree': 0.8959472115656999}. Best is trial 43 with value: 0.7976747457527419.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001449 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:56,636] Trial 61 finished with value: 0.7979002500574325 and parameters: {'n_estimators': 100, 'max_depth': 28, 'learning_rate': 0.015405753651033654, 'num_leaves': 61, 'min_child_samples': 27, 'subsample': 0.6460500909751216, 'colsample_bytree': 0.9106699817965676}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001328 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:57,062] Trial 62 finished with value: 0.7974071738821128 and parameters: {'n_estimators': 100, 'max_depth': 29, 'learning_rate': 0.02050137368231829, 'num_leaves': 56, 'min_child_samples': 29, 'subsample': 0.6569125572797592, 'colsample_bytree': 0.921303014967988}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001161 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:57,442] Trial 63 finished with value: 0.7972119861226268 and parameters: {'n_estimators': 100, 'max_depth': 28, 'learning_rate': 0.01698978453447841, 'num_leaves': 47, 'min_child_samples': 34, 'subsample': 0.6352238425178104, 'colsample_bytree': 0.9372476191138582}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001385 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:58,105] Trial 64 finished with value: 0.7762240560100823 and parameters: {'n_estimators': 150, 'max_depth': 27, 'learning_rate': 0.024400708725421168, 'num_leaves': 65, 'min_child_samples': 31, 'subsample': 0.6877825873927715, 'colsample_bytree': 0.8662992794125216}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001099 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:58,993] Trial 65 finished with value: 0.7727710109224408 and parameters: {'n_estimators': 200, 'max_depth': 8, 'learning_rate': 0.011864225103230522, 'num_leaves': 75, 'min_child_samples': 27, 'subsample': 0.6194048642880319, 'colsample_bytree': 0.8827898854687452}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001435 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:02:59,484] Trial 66 finished with value: 0.7974071738821128 and parameters: {'n_estimators': 100, 'max_depth': 24, 'learning_rate': 0.01392102657329006, 'num_leaves': 69, 'min_child_samples': 37, 'subsample': 0.8364596476297528, 'colsample_bytree': 0.9162229280647073}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001522 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:02,417] Trial 67 finished with value: 0.7644962526257791 and parameters: {'n_estimators': 800, 'max_depth': 30, 'learning_rate': 0.01006610112760366, 'num_leaves': 60, 'min_child_samples': 33, 'subsample': 0.7138230108658321, 'colsample_bytree': 0.9580459883862326}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001173 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:03,259] Trial 68 finished with value: 0.7906379390029724 and parameters: {'n_estimators': 150, 'max_depth': -1, 'learning_rate': 0.012684153403007822, 'num_leaves': 85, 'min_child_samples': 14, 'subsample': 0.9537160744266253, 'colsample_bytree': 0.8963382099348178}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001210 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:04,297] Trial 69 finished with value: 0.7917360263820373 and parameters: {'n_estimators': 250, 'max_depth': 28, 'learning_rate': 0.020103787866858267, 'num_leaves': 52, 'min_child_samples': 18, 'subsample': 0.6463516917297921, 'colsample_bytree': 0.9365126499258086}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001361 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:07,208] Trial 70 finished with value: 0.7091275567168512 and parameters: {'n_estimators': 500, 'max_depth': 25, 'learning_rate': 0.13419205268386628, 'num_leaves': 119, 'min_child_samples': 40, 'subsample': 0.695937549571972, 'colsample_bytree': 0.7679370339323301}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001480 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:07,632] Trial 71 finished with value: 0.7967714289378621 and parameters: {'n_estimators': 100, 'max_depth': 29, 'learning_rate': 0.020573146234849425, 'num_leaves': 55, 'min_child_samples': 29, 'subsample': 0.656134088196472, 'colsample_bytree': 0.9236344878634299}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001278 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:08,087] Trial 72 finished with value: 0.7974071738821128 and parameters: {'n_estimators': 100, 'max_depth': 26, 'learning_rate': 0.011295378535350563, 'num_leaves': 59, 'min_child_samples': 26, 'subsample': 0.665312936249039, 'colsample_bytree': 0.9129322536561191}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001381 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:08,701] Trial 73 finished with value: 0.7721601455464427 and parameters: {'n_estimators': 150, 'max_depth': 28, 'learning_rate': 0.015912972200033893, 'num_leaves': 56, 'min_child_samples': 29, 'subsample': 0.633569317082781, 'colsample_bytree': 0.8598116238432257}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001320 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:09,085] Trial 74 finished with value: 0.7972119861226268 and parameters: {'n_estimators': 100, 'max_depth': 22, 'learning_rate': 0.01791711685362429, 'num_leaves': 51, 'min_child_samples': 31, 'subsample': 0.6054029820652032, 'colsample_bytree': 0.9804940210723375}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001192 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:09,743] Trial 75 finished with value: 0.790329039280548 and parameters: {'n_estimators': 150, 'max_depth': 27, 'learning_rate': 0.014004862632434818, 'num_leaves': 62, 'min_child_samples': 27, 'subsample': 0.737707400524615, 'colsample_bytree': 0.9017502684130099}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001239 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:10,614] Trial 76 finished with value: 0.7286787259229212 and parameters: {'n_estimators': 200, 'max_depth': 30, 'learning_rate': 0.06834396277885141, 'num_leaves': 72, 'min_child_samples': 35, 'subsample': 0.6768464770775358, 'colsample_bytree': 0.9462990448363326}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001376 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:10,937] Trial 77 finished with value: 0.784724918612976 and parameters: {'n_estimators': 100, 'max_depth': 23, 'learning_rate': 0.05040893025073009, 'num_leaves': 42, 'min_child_samples': 23, 'subsample': 0.6574815701387083, 'colsample_bytree': 0.874258256517992}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001214 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:11,479] Trial 78 finished with value: 0.7963733215482945 and parameters: {'n_estimators': 150, 'max_depth': 25, 'learning_rate': 0.01101264219531012, 'num_leaves': 47, 'min_child_samples': 30, 'subsample': 0.7777094056405072, 'colsample_bytree': 0.8415324916532745}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001343 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:12,195] Trial 79 finished with value: 0.7925439434408366 and parameters: {'n_estimators': 150, 'max_depth': 15, 'learning_rate': 0.015297584778778246, 'num_leaves': 70, 'min_child_samples': 28, 'subsample': 0.6937323421512573, 'colsample_bytree': 0.9227977887808698}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001411 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:12,995] Trial 80 finished with value: 0.7909930406983738 and parameters: {'n_estimators': 200, 'max_depth': 29, 'learning_rate': 0.012685988264190904, 'num_leaves': 58, 'min_child_samples': 33, 'subsample': 0.649331839460468, 'colsample_bytree': 0.8865726523599119}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001546 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:13,472] Trial 81 finished with value: 0.7974071738821128 and parameters: {'n_estimators': 100, 'max_depth': 26, 'learning_rate': 0.013971591755946906, 'num_leaves': 66, 'min_child_samples': 37, 'subsample': 0.8427336163643201, 'colsample_bytree': 0.9172044997805073}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001299 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:13,972] Trial 82 finished with value: 0.7975448470013765 and parameters: {'n_estimators': 100, 'max_depth': 24, 'learning_rate': 0.017621419745662815, 'num_leaves': 70, 'min_child_samples': 38, 'subsample': 0.8353962632938128, 'colsample_bytree': 0.9110079906407921}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001386 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:14,717] Trial 83 finished with value: 0.773194437029651 and parameters: {'n_estimators': 150, 'max_depth': 27, 'learning_rate': 0.021750998226455168, 'num_leaves': 76, 'min_child_samples': 41, 'subsample': 0.808967758532229, 'colsample_bytree': 0.907497634958183}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001385 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:15,277] Trial 84 finished with value: 0.7916932157183683 and parameters: {'n_estimators': 100, 'max_depth': 29, 'learning_rate': 0.018926344412105712, 'num_leaves': 83, 'min_child_samples': 29, 'subsample': 0.887892509764677, 'colsample_bytree': 0.9332092733570045}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001307 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:15,730] Trial 85 finished with value: 0.7974071738821128 and parameters: {'n_estimators': 100, 'max_depth': 24, 'learning_rate': 0.01696784970896195, 'num_leaves': 64, 'min_child_samples': 38, 'subsample': 0.6137738464386839, 'colsample_bytree': 0.8938810622111761}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001325 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:16,324] Trial 86 finished with value: 0.7966900955853848 and parameters: {'n_estimators': 150, 'max_depth': 28, 'learning_rate': 0.011612084535507893, 'num_leaves': 54, 'min_child_samples': 31, 'subsample': 0.8551981681054515, 'colsample_bytree': 0.944809928076878}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001331 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:16,758] Trial 87 finished with value: 0.7933100833460902 and parameters: {'n_estimators': 100, 'max_depth': 23, 'learning_rate': 0.024282224180364912, 'num_leaves': 61, 'min_child_samples': 25, 'subsample': 0.8287508267227512, 'colsample_bytree': 0.9611429015907755}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001199 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:17,912] Trial 88 finished with value: 0.7715084809143538 and parameters: {'n_estimators': 250, 'max_depth': 26, 'learning_rate': 0.015158429107731854, 'num_leaves': 73, 'min_child_samples': 35, 'subsample': 0.872826152508788, 'colsample_bytree': 0.8760496367021677}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001300 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:18,703] Trial 89 finished with value: 0.7279412845667228 and parameters: {'n_estimators': 200, 'max_depth': 20, 'learning_rate': 0.29433566735880345, 'num_leaves': 70, 'min_child_samples': 23, 'subsample': 0.794090688183566, 'colsample_bytree': 0.8545548390012498}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001253 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:19,546] Trial 90 finished with value: 0.7717690592461307 and parameters: {'n_estimators': 150, 'max_depth': 25, 'learning_rate': 0.01308799942797787, 'num_leaves': 78, 'min_child_samples': 32, 'subsample': 0.767750770702317, 'colsample_bytree': 0.8244710685637543}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001607 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:20,111] Trial 91 finished with value: 0.7974071738821128 and parameters: {'n_estimators': 100, 'max_depth': 24, 'learning_rate': 0.013921117459311566, 'num_leaves': 69, 'min_child_samples': 39, 'subsample': 0.8464701983255246, 'colsample_bytree': 0.9173376673514603}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001425 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:20,640] Trial 92 finished with value: 0.7974872080337922 and parameters: {'n_estimators': 100, 'max_depth': 24, 'learning_rate': 0.016424969517199642, 'num_leaves': 68, 'min_child_samples': 37, 'subsample': 0.8655169876461203, 'colsample_bytree': 0.9052415432189016}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001324 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:21,114] Trial 93 finished with value: 0.7978202750931688 and parameters: {'n_estimators': 100, 'max_depth': 22, 'learning_rate': 0.016336496482628318, 'num_leaves': 65, 'min_child_samples': 36, 'subsample': 0.8624375412839268, 'colsample_bytree': 0.905398001584198}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001315 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:21,813] Trial 94 finished with value: 0.7908570652065476 and parameters: {'n_estimators': 150, 'max_depth': 22, 'learning_rate': 0.016430387720004314, 'num_leaves': 67, 'min_child_samples': 39, 'subsample': 0.8710868899604036, 'colsample_bytree': 0.8840859983819638}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001338 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:22,286] Trial 95 finished with value: 0.7966900955853848 and parameters: {'n_estimators': 100, 'max_depth': 23, 'learning_rate': 0.01818714995333896, 'num_leaves': 64, 'min_child_samples': 35, 'subsample': 0.8568114317155524, 'colsample_bytree': 0.9020671866164894}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001389 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:22,915] Trial 96 finished with value: 0.7966004968024945 and parameters: {'n_estimators': 150, 'max_depth': 21, 'learning_rate': 0.012520552628774429, 'num_leaves': 59, 'min_child_samples': 36, 'subsample': 0.8610409606333913, 'colsample_bytree': 0.8667293636983403}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001227 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:23,404] Trial 97 finished with value: 0.7974071738821128 and parameters: {'n_estimators': 100, 'max_depth': 19, 'learning_rate': 0.010772744779437227, 'num_leaves': 66, 'min_child_samples': 37, 'subsample': 0.9123088536356181, 'colsample_bytree': 0.9285764593520709}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001476 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:24,211] Trial 98 finished with value: 0.7722747750780097 and parameters: {'n_estimators': 200, 'max_depth': 10, 'learning_rate': 0.015068320459862956, 'num_leaves': 62, 'min_child_samples': 36, 'subsample': 0.8378119597836015, 'colsample_bytree': 0.9075996018315594}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001261 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:24,720] Trial 99 finished with value: 0.7772468233298441 and parameters: {'n_estimators': 100, 'max_depth': 17, 'learning_rate': 0.017219155533961975, 'num_leaves': 74, 'min_child_samples': 34, 'subsample': 0.8810987221789545, 'colsample_bytree': 0.6919759616644796}. Best is trial 61 with value: 0.7979002500574325.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Best parameters for LightGBM: {'n_estimators': 100, 'max_depth': 28, 'learning_rate': 0.015405753651033654, 'num_leaves': 61, 'min_child_samples': 27, 'subsample': 0.6460500909751216, 'colsample_bytree': 0.9106699817965676}\n",
            "[LightGBM] [Info] Number of positive: 18691, number of negative: 18691\n",
            "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001125 seconds.\n",
            "You can set `force_col_wise=true` to remove the overhead.\n",
            "[LightGBM] [Info] Total Bins 3409\n",
            "[LightGBM] [Info] Number of data points in the train set: 37382, number of used features: 18\n",
            "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
          ]
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1000x600 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:03:25,466] A new study created in memory with name: no-name-4f0d824a-ffc3-4d54-be67-04904d770a6d\n",
            "[I 2025-01-01 15:03:26,798] Trial 0 finished with value: 0.7778793685151383 and parameters: {'n_estimators': 350, 'max_depth': 9, 'learning_rate': 0.04161833185687159, 'subsample': 0.8297073282104509, 'colsample_bytree': 0.9582432204273804, 'gamma': 2.926137202870293, 'min_child_weight': 5, 'scale_pos_weight': 8.567562797899665, 'reg_alpha': 0.21522482723497616, 'reg_lambda': 0.38240201778924576}. Best is trial 0 with value: 0.7778793685151383.\n",
            "[I 2025-01-01 15:03:28,743] Trial 1 finished with value: 0.7974616611409876 and parameters: {'n_estimators': 150, 'max_depth': 13, 'learning_rate': 0.029766907685810695, 'subsample': 0.9491194171586604, 'colsample_bytree': 0.8450467535953826, 'gamma': 2.683292024918393, 'min_child_weight': 6, 'scale_pos_weight': 9.875181817757326, 'reg_alpha': 0.7490606417392, 'reg_lambda': 0.697698368993472}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:34,759] Trial 2 finished with value: 0.7863427513328864 and parameters: {'n_estimators': 400, 'max_depth': 13, 'learning_rate': 0.006692184973959855, 'subsample': 0.7677524306197856, 'colsample_bytree': 0.9790428891067574, 'gamma': 0.8860932544380723, 'min_child_weight': 6, 'scale_pos_weight': 9.854086786204553, 'reg_alpha': 0.18901036895440337, 'reg_lambda': 0.5517988791666301}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:39,414] Trial 3 finished with value: 0.7954525682236535 and parameters: {'n_estimators': 300, 'max_depth': 14, 'learning_rate': 0.012217683839881152, 'subsample': 0.8631198010609751, 'colsample_bytree': 0.9776469678560643, 'gamma': 3.924950321125621, 'min_child_weight': 4, 'scale_pos_weight': 5.263339375161436, 'reg_alpha': 0.10023735736732364, 'reg_lambda': 0.3452603193711675}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:40,279] Trial 4 finished with value: 0.08011141440334835 and parameters: {'n_estimators': 250, 'max_depth': 8, 'learning_rate': 0.0025787061355372286, 'subsample': 0.7326215414552082, 'colsample_bytree': 0.7738424968976757, 'gamma': 2.0638971365819874, 'min_child_weight': 9, 'scale_pos_weight': 7.27452811834824, 'reg_alpha': 0.10918551458516346, 'reg_lambda': 0.3875096934705624}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:42,593] Trial 5 finished with value: 0.5056810793800449 and parameters: {'n_estimators': 400, 'max_depth': 9, 'learning_rate': 0.002309025656276242, 'subsample': 0.9508180177666526, 'colsample_bytree': 0.7995409179578208, 'gamma': 3.2131338253273722, 'min_child_weight': 3, 'scale_pos_weight': 3.7894544338937237, 'reg_alpha': 0.8770071322765606, 'reg_lambda': 0.6952271684422571}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:43,549] Trial 6 finished with value: 0.7890703779808146 and parameters: {'n_estimators': 100, 'max_depth': 12, 'learning_rate': 0.04384855570797947, 'subsample': 0.8657954233521012, 'colsample_bytree': 0.7050090231846664, 'gamma': 3.0672873241706675, 'min_child_weight': 5, 'scale_pos_weight': 3.2744945799109964, 'reg_alpha': 0.7208672475927369, 'reg_lambda': 0.10049264458815854}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:44,853] Trial 7 finished with value: 0.794535504164652 and parameters: {'n_estimators': 450, 'max_depth': 8, 'learning_rate': 0.011671663326525035, 'subsample': 0.6657057470159334, 'colsample_bytree': 0.9822433072146971, 'gamma': 2.0815432481740137, 'min_child_weight': 9, 'scale_pos_weight': 7.99710276487057, 'reg_alpha': 0.12236033310184469, 'reg_lambda': 0.2352488074559932}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:46,401] Trial 8 finished with value: 0.08011141440334835 and parameters: {'n_estimators': 300, 'max_depth': 9, 'learning_rate': 0.0011634421422178644, 'subsample': 0.9687154043662256, 'colsample_bytree': 0.7521352112188319, 'gamma': 3.8968439978477214, 'min_child_weight': 6, 'scale_pos_weight': 6.391977112605705, 'reg_alpha': 0.24071407247912902, 'reg_lambda': 0.7462080375068997}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:47,228] Trial 9 finished with value: 0.7956402120362269 and parameters: {'n_estimators': 150, 'max_depth': 9, 'learning_rate': 0.017485159566358512, 'subsample': 0.635365786078505, 'colsample_bytree': 0.9744987713974836, 'gamma': 1.8924153021991992, 'min_child_weight': 2, 'scale_pos_weight': 3.2785360125749756, 'reg_alpha': 0.6897617596013799, 'reg_lambda': 0.3176634460722746}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:47,544] Trial 10 finished with value: 0.7818654861841497 and parameters: {'n_estimators': 200, 'max_depth': 5, 'learning_rate': 0.0944736468465804, 'subsample': 0.9982542106260768, 'colsample_bytree': 0.6169198316245168, 'gamma': 4.9621125175002945, 'min_child_weight': 8, 'scale_pos_weight': 9.84791666084733, 'reg_alpha': 0.47266661298659046, 'reg_lambda': 0.9525623798083244}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:47,856] Trial 11 finished with value: 0.7958238321934002 and parameters: {'n_estimators': 150, 'max_depth': 5, 'learning_rate': 0.024205721689470723, 'subsample': 0.6027193173493829, 'colsample_bytree': 0.8805430723934994, 'gamma': 0.9040617128270072, 'min_child_weight': 1, 'scale_pos_weight': 2.197617465607558, 'reg_alpha': 0.693956753420455, 'reg_lambda': 0.5960847653658373}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:48,015] Trial 12 finished with value: 0.7932558987128274 and parameters: {'n_estimators': 100, 'max_depth': 3, 'learning_rate': 0.029354416676702695, 'subsample': 0.7111883544218701, 'colsample_bytree': 0.8796594504504843, 'gamma': 0.021876620792057322, 'min_child_weight': 1, 'scale_pos_weight': 2.0027896617904215, 'reg_alpha': 0.9591916611549247, 'reg_lambda': 0.6487094786558645}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:48,447] Trial 13 finished with value: 0.7454931240743601 and parameters: {'n_estimators': 200, 'max_depth': 6, 'learning_rate': 0.08111228019322003, 'subsample': 0.6085296888606553, 'colsample_bytree': 0.8739449895735167, 'gamma': 1.174508393469679, 'min_child_weight': 1, 'scale_pos_weight': 4.87829353880712, 'reg_alpha': 0.5553698867371393, 'reg_lambda': 0.8802887720815479}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:50,053] Trial 14 finished with value: 0.7971349863100665 and parameters: {'n_estimators': 200, 'max_depth': 11, 'learning_rate': 0.022146808597375788, 'subsample': 0.9089929267167571, 'colsample_bytree': 0.8769894219167145, 'gamma': 1.0960464379355161, 'min_child_weight': 7, 'scale_pos_weight': 2.0550724051762503, 'reg_alpha': 0.7334985525300433, 'reg_lambda': 0.5246180308715078}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:52,329] Trial 15 finished with value: 0.5511398521669537 and parameters: {'n_estimators': 200, 'max_depth': 11, 'learning_rate': 0.006943090156032795, 'subsample': 0.9218190605528146, 'colsample_bytree': 0.8376080904644185, 'gamma': 0.023280602219012403, 'min_child_weight': 7, 'scale_pos_weight': 6.234712470306578, 'reg_alpha': 0.8199367166845755, 'reg_lambda': 0.8038207528021956}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:54,071] Trial 16 finished with value: 0.7972994878416618 and parameters: {'n_estimators': 250, 'max_depth': 15, 'learning_rate': 0.050294666711420896, 'subsample': 0.9184881383434302, 'colsample_bytree': 0.925253143744279, 'gamma': 2.4107941974431744, 'min_child_weight': 10, 'scale_pos_weight': 4.47767718299729, 'reg_alpha': 0.4690883446145183, 'reg_lambda': 0.4880113262069874}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:55,495] Trial 17 finished with value: 0.7879354676787834 and parameters: {'n_estimators': 500, 'max_depth': 15, 'learning_rate': 0.05597572952203876, 'subsample': 0.8932347973568653, 'colsample_bytree': 0.9230883123646552, 'gamma': 3.653295039182105, 'min_child_weight': 10, 'scale_pos_weight': 4.372448245439516, 'reg_alpha': 0.505312103416094, 'reg_lambda': 0.4779256128222376}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:57,128] Trial 18 finished with value: 0.794191558274645 and parameters: {'n_estimators': 250, 'max_depth': 15, 'learning_rate': 0.061421023515048676, 'subsample': 0.8094811561953122, 'colsample_bytree': 0.8332454155011599, 'gamma': 2.57256651576211, 'min_child_weight': 10, 'scale_pos_weight': 8.516015544054802, 'reg_alpha': 0.36858086745120466, 'reg_lambda': 0.9939465738681521}. Best is trial 1 with value: 0.7974616611409876.\n",
            "[I 2025-01-01 15:03:58,578] Trial 19 finished with value: 0.7975428790983607 and parameters: {'n_estimators': 250, 'max_depth': 13, 'learning_rate': 0.035029446232802, 'subsample': 0.9526061709223748, 'colsample_bytree': 0.7287374353154955, 'gamma': 4.737138115299325, 'min_child_weight': 8, 'scale_pos_weight': 5.517578843669828, 'reg_alpha': 0.3593882581002924, 'reg_lambda': 0.06435550738278029}. Best is trial 19 with value: 0.7975428790983607.\n",
            "[I 2025-01-01 15:04:00,334] Trial 20 finished with value: 0.523187865993521 and parameters: {'n_estimators': 150, 'max_depth': 12, 'learning_rate': 0.0066088460611628, 'subsample': 0.9899733718260587, 'colsample_bytree': 0.6945833928919484, 'gamma': 4.816388360684217, 'min_child_weight': 7, 'scale_pos_weight': 5.536897439011387, 'reg_alpha': 0.34226841673991754, 'reg_lambda': 0.022471028533877613}. Best is trial 19 with value: 0.7975428790983607.\n",
            "[I 2025-01-01 15:04:02,136] Trial 21 finished with value: 0.7959837027234679 and parameters: {'n_estimators': 250, 'max_depth': 14, 'learning_rate': 0.031146028689849926, 'subsample': 0.9410856531157072, 'colsample_bytree': 0.7255660137909874, 'gamma': 4.525277292853696, 'min_child_weight': 8, 'scale_pos_weight': 6.975487750281911, 'reg_alpha': 0.5809582049875937, 'reg_lambda': 0.2016478981188059}. Best is trial 19 with value: 0.7975428790983607.\n",
            "[I 2025-01-01 15:04:05,560] Trial 22 finished with value: 0.7965554149650137 and parameters: {'n_estimators': 350, 'max_depth': 13, 'learning_rate': 0.015405062802396093, 'subsample': 0.8759331960952456, 'colsample_bytree': 0.6634954246156425, 'gamma': 1.7177251188847156, 'min_child_weight': 9, 'scale_pos_weight': 4.5567640164749275, 'reg_alpha': 0.3721620402395066, 'reg_lambda': 0.8168360711091631}. Best is trial 19 with value: 0.7975428790983607.\n",
            "[I 2025-01-01 15:04:06,964] Trial 23 finished with value: 0.7974872080337922 and parameters: {'n_estimators': 250, 'max_depth': 11, 'learning_rate': 0.03827641452654573, 'subsample': 0.9577617044619402, 'colsample_bytree': 0.9092261112075292, 'gamma': 2.5351162215185825, 'min_child_weight': 10, 'scale_pos_weight': 5.689174251885364, 'reg_alpha': 0.40776371905849956, 'reg_lambda': 0.4683773952064551}. Best is trial 19 with value: 0.7975428790983607.\n",
            "[I 2025-01-01 15:04:08,313] Trial 24 finished with value: 0.796169021574884 and parameters: {'n_estimators': 300, 'max_depth': 11, 'learning_rate': 0.03567259543916297, 'subsample': 0.9547665523518984, 'colsample_bytree': 0.8236855905645699, 'gamma': 4.391377617905401, 'min_child_weight': 8, 'scale_pos_weight': 5.771951656805912, 'reg_alpha': 0.30142244216366143, 'reg_lambda': 0.11346638465453496}. Best is trial 19 with value: 0.7975428790983607.\n",
            "[I 2025-01-01 15:04:09,252] Trial 25 finished with value: 0.8004107295631796 and parameters: {'n_estimators': 150, 'max_depth': 12, 'learning_rate': 0.07035828434619988, 'subsample': 0.8398441451736178, 'colsample_bytree': 0.7761519748028861, 'gamma': 3.4496003774415027, 'min_child_weight': 9, 'scale_pos_weight': 6.799856136484732, 'reg_alpha': 0.6180538822294699, 'reg_lambda': 0.6605270453462708}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:10,204] Trial 26 finished with value: 0.7969683102262065 and parameters: {'n_estimators': 350, 'max_depth': 10, 'learning_rate': 0.07180457429866356, 'subsample': 0.8362222745425825, 'colsample_bytree': 0.7618642210038121, 'gamma': 3.453292795387709, 'min_child_weight': 9, 'scale_pos_weight': 6.913372306479974, 'reg_alpha': 0.02392072866561268, 'reg_lambda': 0.22574757106575427}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:11,116] Trial 27 finished with value: 0.577802282203204 and parameters: {'n_estimators': 100, 'max_depth': 12, 'learning_rate': 0.019144246645560116, 'subsample': 0.7564854905975276, 'colsample_bytree': 0.654889240084973, 'gamma': 4.200870356591706, 'min_child_weight': 10, 'scale_pos_weight': 6.527660768420733, 'reg_alpha': 0.6238843864252454, 'reg_lambda': 0.019270128668928854}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:11,925] Trial 28 finished with value: 0.786115632780719 and parameters: {'n_estimators': 300, 'max_depth': 10, 'learning_rate': 0.09625591204184905, 'subsample': 0.7908954103261499, 'colsample_bytree': 0.7964243699306957, 'gamma': 3.4516875409654597, 'min_child_weight': 8, 'scale_pos_weight': 7.82944377487825, 'reg_alpha': 0.4269618206861561, 'reg_lambda': 0.4376299635817089}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:13,565] Trial 29 finished with value: 0.7978142940375222 and parameters: {'n_estimators': 200, 'max_depth': 14, 'learning_rate': 0.04531716705317596, 'subsample': 0.8350253381101753, 'colsample_bytree': 0.7330992330763711, 'gamma': 2.791244408542031, 'min_child_weight': 9, 'scale_pos_weight': 5.919438929342901, 'reg_alpha': 0.2625922381268172, 'reg_lambda': 0.6145721212880679}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:14,944] Trial 30 finished with value: 0.7964451631231021 and parameters: {'n_estimators': 200, 'max_depth': 14, 'learning_rate': 0.06429116192892999, 'subsample': 0.8347764155515882, 'colsample_bytree': 0.7457270738128587, 'gamma': 2.917687592479586, 'min_child_weight': 7, 'scale_pos_weight': 7.690367614009564, 'reg_alpha': 0.22421278641289782, 'reg_lambda': 0.6300688253613306}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:16,707] Trial 31 finished with value: 0.797372141853484 and parameters: {'n_estimators': 250, 'max_depth': 13, 'learning_rate': 0.0424647161099108, 'subsample': 0.8106897127665275, 'colsample_bytree': 0.7182601740075856, 'gamma': 2.428139682210988, 'min_child_weight': 9, 'scale_pos_weight': 5.925830625199297, 'reg_alpha': 0.2702117250774067, 'reg_lambda': 0.5998154945911112}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:17,895] Trial 32 finished with value: 0.7964971059472249 and parameters: {'n_estimators': 150, 'max_depth': 12, 'learning_rate': 0.03943980510494769, 'subsample': 0.8917394158300145, 'colsample_bytree': 0.6757930581802937, 'gamma': 2.777180398380478, 'min_child_weight': 10, 'scale_pos_weight': 5.153827776566153, 'reg_alpha': 0.39094714735396274, 'reg_lambda': 0.7204483315428932}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:20,022] Trial 33 finished with value: 0.7965556003427974 and parameters: {'n_estimators': 200, 'max_depth': 13, 'learning_rate': 0.027167668847990867, 'subsample': 0.8504167612960568, 'colsample_bytree': 0.7781594606166625, 'gamma': 1.438434224765802, 'min_child_weight': 9, 'scale_pos_weight': 6.63283390276418, 'reg_alpha': 0.3209779316012025, 'reg_lambda': 0.5537064929101105}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:21,220] Trial 34 finished with value: 0.7909222409571876 and parameters: {'n_estimators': 250, 'max_depth': 14, 'learning_rate': 0.05272307153313833, 'subsample': 0.9759850265287112, 'colsample_bytree': 0.7346252738851015, 'gamma': 3.8625735787038193, 'min_child_weight': 8, 'scale_pos_weight': 5.515554929227494, 'reg_alpha': 0.5359282945972925, 'reg_lambda': 0.4294818454486899}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:22,024] Trial 35 finished with value: 0.7992996892919011 and parameters: {'n_estimators': 300, 'max_depth': 10, 'learning_rate': 0.07245951584084895, 'subsample': 0.9251318590883961, 'colsample_bytree': 0.6319910020777686, 'gamma': 3.2816878471523423, 'min_child_weight': 10, 'scale_pos_weight': 7.335627918750523, 'reg_alpha': 0.17499392580999093, 'reg_lambda': 0.3057963114163593}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:23,083] Trial 36 finished with value: 0.7880133404541068 and parameters: {'n_estimators': 400, 'max_depth': 10, 'learning_rate': 0.06952187655158701, 'subsample': 0.7845131112511686, 'colsample_bytree': 0.6149145631565198, 'gamma': 3.1937710663168275, 'min_child_weight': 6, 'scale_pos_weight': 7.361087647084559, 'reg_alpha': 0.16999316413625537, 'reg_lambda': 0.125667148177175}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:24,064] Trial 37 finished with value: 0.7855739876622208 and parameters: {'n_estimators': 300, 'max_depth': 14, 'learning_rate': 0.08515664125495048, 'subsample': 0.9366925227325379, 'colsample_bytree': 0.6490865319930027, 'gamma': 4.287411551415554, 'min_child_weight': 9, 'scale_pos_weight': 8.395959588283745, 'reg_alpha': 0.0019923174541570665, 'reg_lambda': 0.3137862727181211}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:24,991] Trial 38 finished with value: 0.7902767626877809 and parameters: {'n_estimators': 350, 'max_depth': 8, 'learning_rate': 0.05081223633293192, 'subsample': 0.8836725404005698, 'colsample_bytree': 0.7040169870986441, 'gamma': 3.403358495539573, 'min_child_weight': 8, 'scale_pos_weight': 7.134869147956887, 'reg_alpha': 0.1782925317649814, 'reg_lambda': 0.37125976702321445}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:26,224] Trial 39 finished with value: 0.5937906763278524 and parameters: {'n_estimators': 100, 'max_depth': 12, 'learning_rate': 0.014119269708990242, 'subsample': 0.853778084579312, 'colsample_bytree': 0.6342085165741872, 'gamma': 4.645170387475707, 'min_child_weight': 5, 'scale_pos_weight': 9.106353607855901, 'reg_alpha': 0.09896674764286173, 'reg_lambda': 0.27946073240414426}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:27,874] Trial 40 finished with value: 0.08011141440334835 and parameters: {'n_estimators': 150, 'max_depth': 13, 'learning_rate': 0.003767940428147643, 'subsample': 0.7550787717649063, 'colsample_bytree': 0.6850865733480785, 'gamma': 4.057620505419598, 'min_child_weight': 9, 'scale_pos_weight': 6.268100229150981, 'reg_alpha': 0.6149848074166216, 'reg_lambda': 0.6755766314809002}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:29,358] Trial 41 finished with value: 0.7974491116933633 and parameters: {'n_estimators': 250, 'max_depth': 11, 'learning_rate': 0.03710728273039918, 'subsample': 0.9697705152268563, 'colsample_bytree': 0.7857721779952067, 'gamma': 2.1569593833275715, 'min_child_weight': 10, 'scale_pos_weight': 5.945467905834861, 'reg_alpha': 0.44720571440104745, 'reg_lambda': 0.1710406138406777}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:30,416] Trial 42 finished with value: 0.7965937732656515 and parameters: {'n_estimators': 300, 'max_depth': 10, 'learning_rate': 0.04599505644775, 'subsample': 0.9089213094469991, 'colsample_bytree': 0.8108540293572829, 'gamma': 2.879496362477395, 'min_child_weight': 10, 'scale_pos_weight': 5.259530676582642, 'reg_alpha': 0.2744679420595828, 'reg_lambda': 0.5889962911653815}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:32,480] Trial 43 finished with value: 0.7821155236870727 and parameters: {'n_estimators': 200, 'max_depth': 13, 'learning_rate': 0.03445893248792557, 'subsample': 0.9315781081993235, 'colsample_bytree': 0.8539935470496114, 'gamma': 3.154093565713062, 'min_child_weight': 4, 'scale_pos_weight': 6.669349373900681, 'reg_alpha': 0.41308470386734825, 'reg_lambda': 0.4094541339791341}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:34,932] Trial 44 finished with value: 0.7952989572996473 and parameters: {'n_estimators': 300, 'max_depth': 11, 'learning_rate': 0.00913056516243855, 'subsample': 0.9593525909144492, 'colsample_bytree': 0.601187162453362, 'gamma': 2.6678195840734293, 'min_child_weight': 9, 'scale_pos_weight': 3.921175525555299, 'reg_alpha': 0.1411393343739161, 'reg_lambda': 0.7820629439220045}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:35,491] Trial 45 finished with value: 0.7935802179134248 and parameters: {'n_estimators': 250, 'max_depth': 7, 'learning_rate': 0.0776120447699681, 'subsample': 0.9858175326324194, 'colsample_bytree': 0.7612646630391877, 'gamma': 2.298247232663039, 'min_child_weight': 10, 'scale_pos_weight': 7.459483084708282, 'reg_alpha': 0.07522515646506145, 'reg_lambda': 0.5536187106793089}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:37,180] Trial 46 finished with value: 0.7957021218979806 and parameters: {'n_estimators': 200, 'max_depth': 12, 'learning_rate': 0.021645936875089748, 'subsample': 0.8692635417194189, 'colsample_bytree': 0.9132750324510288, 'gamma': 3.8006270397313173, 'min_child_weight': 9, 'scale_pos_weight': 4.7926690383565775, 'reg_alpha': 0.22342441252874712, 'reg_lambda': 0.0691527813701665}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:37,855] Trial 47 finished with value: 0.7880625537347176 and parameters: {'n_estimators': 150, 'max_depth': 9, 'learning_rate': 0.025325661393731876, 'subsample': 0.7226915284479147, 'colsample_bytree': 0.7166547546656953, 'gamma': 1.7355605032120045, 'min_child_weight': 8, 'scale_pos_weight': 8.131078522934892, 'reg_alpha': 0.29527211327913494, 'reg_lambda': 0.2734695698807872}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:39,591] Trial 48 finished with value: 0.08011141440334835 and parameters: {'n_estimators': 250, 'max_depth': 10, 'learning_rate': 0.0011610954646731789, 'subsample': 0.9024118479695497, 'colsample_bytree': 0.8085538170602854, 'gamma': 3.6601716752246634, 'min_child_weight': 10, 'scale_pos_weight': 5.657283436797045, 'reg_alpha': 0.6611933038583451, 'reg_lambda': 0.46607673896575197}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:41,004] Trial 49 finished with value: 0.7913889651669049 and parameters: {'n_estimators': 200, 'max_depth': 11, 'learning_rate': 0.09788969496206458, 'subsample': 0.8161992718960115, 'colsample_bytree': 0.9415768297037374, 'gamma': 0.37731506709588913, 'min_child_weight': 6, 'scale_pos_weight': 6.204842408813777, 'reg_alpha': 0.5184117448621718, 'reg_lambda': 0.5271041400717372}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:42,585] Trial 50 finished with value: 0.776308008886948 and parameters: {'n_estimators': 300, 'max_depth': 14, 'learning_rate': 0.06018235298993334, 'subsample': 0.6901178418076702, 'colsample_bytree': 0.744182821006962, 'gamma': 2.9794010454934607, 'min_child_weight': 4, 'scale_pos_weight': 4.971626956910053, 'reg_alpha': 0.811370687299963, 'reg_lambda': 0.3650467660631957}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:44,023] Trial 51 finished with value: 0.796626961970038 and parameters: {'n_estimators': 150, 'max_depth': 12, 'learning_rate': 0.044470795986709895, 'subsample': 0.9994091967154887, 'colsample_bytree': 0.8426005386148059, 'gamma': 2.5405417628416394, 'min_child_weight': 7, 'scale_pos_weight': 9.024743351753223, 'reg_alpha': 0.7323481326654958, 'reg_lambda': 0.6936225495639976}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:45,378] Trial 52 finished with value: 0.7802997239543648 and parameters: {'n_estimators': 100, 'max_depth': 13, 'learning_rate': 0.029811682212738343, 'subsample': 0.9476353275678943, 'colsample_bytree': 0.9074575761283161, 'gamma': 2.2099243286903985, 'min_child_weight': 9, 'scale_pos_weight': 9.998591089781964, 'reg_alpha': 0.8271179021939027, 'reg_lambda': 0.8636765508499813}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:45,600] Trial 53 finished with value: 0.7770461069195731 and parameters: {'n_estimators': 150, 'max_depth': 3, 'learning_rate': 0.059530870465830645, 'subsample': 0.9153844733981462, 'colsample_bytree': 0.8595114732223273, 'gamma': 2.720889212589058, 'min_child_weight': 2, 'scale_pos_weight': 9.536635696244039, 'reg_alpha': 0.7884906523426976, 'reg_lambda': 0.7354621524092815}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:47,661] Trial 54 finished with value: 0.7960253998877009 and parameters: {'n_estimators': 150, 'max_depth': 15, 'learning_rate': 0.03255310468859249, 'subsample': 0.9318632309463684, 'colsample_bytree': 0.895200489455041, 'gamma': 1.875112468627616, 'min_child_weight': 10, 'scale_pos_weight': 6.84994742972709, 'reg_alpha': 0.4772140775504382, 'reg_lambda': 0.6530278324275927}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:48,798] Trial 55 finished with value: 0.7855689340408223 and parameters: {'n_estimators': 200, 'max_depth': 14, 'learning_rate': 0.07846217680949899, 'subsample': 0.9621682119585949, 'colsample_bytree': 0.9499612612322336, 'gamma': 3.069622336155932, 'min_child_weight': 3, 'scale_pos_weight': 4.133275366384437, 'reg_alpha': 0.2602656068758799, 'reg_lambda': 0.6128961518584183}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:50,646] Trial 56 finished with value: 0.7939968825130116 and parameters: {'n_estimators': 250, 'max_depth': 12, 'learning_rate': 0.019099112925600393, 'subsample': 0.8580858093388373, 'colsample_bytree': 0.7871762166437761, 'gamma': 3.62435271869756, 'min_child_weight': 8, 'scale_pos_weight': 3.050586892776953, 'reg_alpha': 0.5883224088196585, 'reg_lambda': 0.7712609370564253}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:51,810] Trial 57 finished with value: 0.7887672084505857 and parameters: {'n_estimators': 200, 'max_depth': 11, 'learning_rate': 0.04962938355631106, 'subsample': 0.981029516528684, 'colsample_bytree': 0.9649018814715378, 'gamma': 3.3047383389075415, 'min_child_weight': 5, 'scale_pos_weight': 8.985230795695962, 'reg_alpha': 0.346209968706675, 'reg_lambda': 0.5706730036633402}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:53,001] Trial 58 finished with value: 0.7974765136428745 and parameters: {'n_estimators': 100, 'max_depth': 15, 'learning_rate': 0.03878026601962408, 'subsample': 0.9482534764710547, 'colsample_bytree': 0.7663328166255609, 'gamma': 4.973400837307485, 'min_child_weight': 6, 'scale_pos_weight': 5.34593897351548, 'reg_alpha': 0.943135121108355, 'reg_lambda': 0.4973068187909946}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:54,198] Trial 59 finished with value: 0.7892672049723759 and parameters: {'n_estimators': 100, 'max_depth': 15, 'learning_rate': 0.04047297310476862, 'subsample': 0.924261408349192, 'colsample_bytree': 0.9923536300603447, 'gamma': 4.844964964694092, 'min_child_weight': 7, 'scale_pos_weight': 5.453299558299017, 'reg_alpha': 0.9877204690676127, 'reg_lambda': 0.49723766099044553}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:55,015] Trial 60 finished with value: 0.7886864858712972 and parameters: {'n_estimators': 100, 'max_depth': 15, 'learning_rate': 0.06530186604357792, 'subsample': 0.9505273499514705, 'colsample_bytree': 0.7661347721111378, 'gamma': 4.979558668226156, 'min_child_weight': 10, 'scale_pos_weight': 6.164466495913572, 'reg_alpha': 0.9603202610858654, 'reg_lambda': 0.15857208392303768}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:56,844] Trial 61 finished with value: 0.7972230592707217 and parameters: {'n_estimators': 150, 'max_depth': 14, 'learning_rate': 0.02511865817037928, 'subsample': 0.9454000631093354, 'colsample_bytree': 0.7737881921407306, 'gamma': 4.532999287359469, 'min_child_weight': 6, 'scale_pos_weight': 4.751471740411888, 'reg_alpha': 0.664263448062852, 'reg_lambda': 0.6683780155403187}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:58,082] Trial 62 finished with value: 0.7919756337232915 and parameters: {'n_estimators': 100, 'max_depth': 13, 'learning_rate': 0.033728006149008775, 'subsample': 0.9002838828427467, 'colsample_bytree': 0.7296846015475823, 'gamma': 4.055227017393003, 'min_child_weight': 6, 'scale_pos_weight': 5.243430137083119, 'reg_alpha': 0.8863648624657826, 'reg_lambda': 0.5280066637703923}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:04:59,347] Trial 63 finished with value: 0.795785104018975 and parameters: {'n_estimators': 150, 'max_depth': 14, 'learning_rate': 0.04189026697631144, 'subsample': 0.9652630231391094, 'colsample_bytree': 0.7530726101299188, 'gamma': 4.718556823626371, 'min_child_weight': 7, 'scale_pos_weight': 5.7958272858726545, 'reg_alpha': 0.8757259748109317, 'reg_lambda': 0.44877608454307744}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:00,622] Trial 64 finished with value: 0.7950429535635317 and parameters: {'n_estimators': 200, 'max_depth': 12, 'learning_rate': 0.05528213547350817, 'subsample': 0.8845967591363952, 'colsample_bytree': 0.810382832848999, 'gamma': 2.402673124131298, 'min_child_weight': 9, 'scale_pos_weight': 6.451029271493563, 'reg_alpha': 0.8870114546833289, 'reg_lambda': 0.6309081784323602}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:10,856] Trial 65 finished with value: 0.10089697298749936 and parameters: {'n_estimators': 500, 'max_depth': 15, 'learning_rate': 0.0015266858877377911, 'subsample': 0.8326587859633199, 'colsample_bytree': 0.8239748534703207, 'gamma': 2.8134326240123864, 'min_child_weight': 5, 'scale_pos_weight': 6.028647744370183, 'reg_alpha': 0.3331196968710156, 'reg_lambda': 0.7083361933910186}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:13,413] Trial 66 finished with value: 0.7980425519710415 and parameters: {'n_estimators': 250, 'max_depth': 13, 'learning_rate': 0.022118594019479895, 'subsample': 0.9211069243395993, 'colsample_bytree': 0.7100447270351056, 'gamma': 2.588451257687141, 'min_child_weight': 9, 'scale_pos_weight': 4.994359513912017, 'reg_alpha': 0.7679423902795793, 'reg_lambda': 0.3394902902810921}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:15,696] Trial 67 finished with value: 0.796930528751983 and parameters: {'n_estimators': 250, 'max_depth': 13, 'learning_rate': 0.022590167577910474, 'subsample': 0.8438000261221316, 'colsample_bytree': 0.7040173789729893, 'gamma': 2.5967352739021226, 'min_child_weight': 9, 'scale_pos_weight': 5.058531710481049, 'reg_alpha': 0.9145249832491593, 'reg_lambda': 0.31441698171161586}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:18,197] Trial 68 finished with value: 0.797006161904322 and parameters: {'n_estimators': 300, 'max_depth': 13, 'learning_rate': 0.029030387151786234, 'subsample': 0.9260129785380866, 'colsample_bytree': 0.6692997488354728, 'gamma': 1.9372691878653359, 'min_child_weight': 8, 'scale_pos_weight': 4.5184016079613105, 'reg_alpha': 0.3832164220172841, 'reg_lambda': 0.34132993192462374}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:20,111] Trial 69 finished with value: 0.7916617795115073 and parameters: {'n_estimators': 350, 'max_depth': 10, 'learning_rate': 0.010563277349918005, 'subsample': 0.7726370337578548, 'colsample_bytree': 0.6901560280343914, 'gamma': 3.008607180428066, 'min_child_weight': 10, 'scale_pos_weight': 5.447753454445405, 'reg_alpha': 0.755536225401955, 'reg_lambda': 0.40005907087429177}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:21,091] Trial 70 finished with value: 0.7895630583834653 and parameters: {'n_estimators': 250, 'max_depth': 14, 'learning_rate': 0.07114949394994674, 'subsample': 0.8791009641251195, 'colsample_bytree': 0.717981230879103, 'gamma': 4.324295987525085, 'min_child_weight': 8, 'scale_pos_weight': 7.663765012217485, 'reg_alpha': 0.42927288893883164, 'reg_lambda': 0.0623230930118821}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:23,509] Trial 71 finished with value: 0.7950650754567408 and parameters: {'n_estimators': 300, 'max_depth': 12, 'learning_rate': 0.01481778531187937, 'subsample': 0.8195847767931662, 'colsample_bytree': 0.738552737906563, 'gamma': 3.2715358882273406, 'min_child_weight': 9, 'scale_pos_weight': 5.654205951754602, 'reg_alpha': 0.769018213988235, 'reg_lambda': 0.4880810434210822}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:24,280] Trial 72 finished with value: 0.7960120967992916 and parameters: {'n_estimators': 200, 'max_depth': 9, 'learning_rate': 0.04618670918484563, 'subsample': 0.9734768645673479, 'colsample_bytree': 0.792611995590327, 'gamma': 2.3039280293129853, 'min_child_weight': 9, 'scale_pos_weight': 3.5513250740912765, 'reg_alpha': 0.6938517971280168, 'reg_lambda': 0.2879024064782951}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:26,061] Trial 73 finished with value: 0.7981757820030945 and parameters: {'n_estimators': 250, 'max_depth': 13, 'learning_rate': 0.03679158173683336, 'subsample': 0.9420709240472801, 'colsample_bytree': 0.7542142584842113, 'gamma': 2.70695364540824, 'min_child_weight': 10, 'scale_pos_weight': 7.199006716269854, 'reg_alpha': 0.19319248938208053, 'reg_lambda': 0.5764431887753935}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:26,929] Trial 74 finished with value: 0.7969132770319177 and parameters: {'n_estimators': 250, 'max_depth': 11, 'learning_rate': 0.08629483828698406, 'subsample': 0.936468666871825, 'colsample_bytree': 0.7576081339101363, 'gamma': 2.500775563065919, 'min_child_weight': 10, 'scale_pos_weight': 7.208327102743294, 'reg_alpha': 0.1365556994498449, 'reg_lambda': 0.24121883709281203}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:29,095] Trial 75 finished with value: 0.796802590404712 and parameters: {'n_estimators': 250, 'max_depth': 15, 'learning_rate': 0.03836839751887198, 'subsample': 0.9142319986140199, 'colsample_bytree': 0.7759761732580531, 'gamma': 2.7437189584743105, 'min_child_weight': 10, 'scale_pos_weight': 6.984904422452097, 'reg_alpha': 0.20193073096539918, 'reg_lambda': 0.5135539140705975}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:30,827] Trial 76 finished with value: 0.7980052568750466 and parameters: {'n_estimators': 300, 'max_depth': 13, 'learning_rate': 0.05113945098752106, 'subsample': 0.9569455051804462, 'colsample_bytree': 0.6390134726622212, 'gamma': 2.0535608613974965, 'min_child_weight': 9, 'scale_pos_weight': 6.7125185939500485, 'reg_alpha': 0.1711348994867595, 'reg_lambda': 0.5770742168432484}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:32,614] Trial 77 finished with value: 0.7956474976420949 and parameters: {'n_estimators': 300, 'max_depth': 13, 'learning_rate': 0.05399520752365517, 'subsample': 0.958419517360687, 'colsample_bytree': 0.6374501216753903, 'gamma': 1.4824581449215026, 'min_child_weight': 10, 'scale_pos_weight': 6.709279845993221, 'reg_alpha': 0.16323694752191242, 'reg_lambda': 0.577957458910069}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:33,108] Trial 78 finished with value: 0.7792716709069032 and parameters: {'n_estimators': 350, 'max_depth': 4, 'learning_rate': 0.047500904336362185, 'subsample': 0.8942323782015686, 'colsample_bytree': 0.6358808240450138, 'gamma': 2.037652328648073, 'min_child_weight': 9, 'scale_pos_weight': 7.420740252161283, 'reg_alpha': 0.06460181074333182, 'reg_lambda': 0.6194600075464917}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:34,147] Trial 79 finished with value: 0.7975244302197101 and parameters: {'n_estimators': 400, 'max_depth': 12, 'learning_rate': 0.06719232895991709, 'subsample': 0.98878113886722, 'colsample_bytree': 0.6806107786740908, 'gamma': 3.0928764226827594, 'min_child_weight': 9, 'scale_pos_weight': 6.472424877921638, 'reg_alpha': 0.2330581838145053, 'reg_lambda': 0.4268552123096826}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:35,097] Trial 80 finished with value: 0.7992546196365425 and parameters: {'n_estimators': 400, 'max_depth': 13, 'learning_rate': 0.08745090045747689, 'subsample': 0.9905219631866659, 'colsample_bytree': 0.651346987117142, 'gamma': 3.4122695825803735, 'min_child_weight': 9, 'scale_pos_weight': 8.119557338700751, 'reg_alpha': 0.2367691720746556, 'reg_lambda': 0.4184197713780112}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:36,180] Trial 81 finished with value: 0.7976830988225124 and parameters: {'n_estimators': 400, 'max_depth': 13, 'learning_rate': 0.07243563724836609, 'subsample': 0.9889245518778871, 'colsample_bytree': 0.6562225463956215, 'gamma': 3.4235260031084827, 'min_child_weight': 9, 'scale_pos_weight': 7.74995752343626, 'reg_alpha': 0.23668138178326412, 'reg_lambda': 0.41744459991955235}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:37,114] Trial 82 finished with value: 0.7894551520892256 and parameters: {'n_estimators': 450, 'max_depth': 13, 'learning_rate': 0.09145572935136018, 'subsample': 0.9926961680205564, 'colsample_bytree': 0.6211021058689369, 'gamma': 3.712742734487426, 'min_child_weight': 9, 'scale_pos_weight': 8.048098446611313, 'reg_alpha': 0.1923234587663552, 'reg_lambda': 0.36573841490182524}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:38,252] Trial 83 finished with value: 0.7832992890020686 and parameters: {'n_estimators': 400, 'max_depth': 14, 'learning_rate': 0.07716112101971395, 'subsample': 0.981103989602836, 'colsample_bytree': 0.6530503330378868, 'gamma': 3.443740837419737, 'min_child_weight': 8, 'scale_pos_weight': 7.666063302191761, 'reg_alpha': 0.29330172209373545, 'reg_lambda': 0.40080639220925446}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:39,846] Trial 84 finished with value: 0.7847730017655303 and parameters: {'n_estimators': 450, 'max_depth': 13, 'learning_rate': 0.05926550317043165, 'subsample': 0.7999516887273734, 'colsample_bytree': 0.6652679308857352, 'gamma': 2.8916825359001743, 'min_child_weight': 8, 'scale_pos_weight': 7.105540598743957, 'reg_alpha': 0.16244284525229127, 'reg_lambda': 0.33471816787323666}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:40,985] Trial 85 finished with value: 0.7982586435482845 and parameters: {'n_estimators': 400, 'max_depth': 14, 'learning_rate': 0.07317814460102552, 'subsample': 0.999209537877893, 'colsample_bytree': 0.600284689035021, 'gamma': 3.5593344340702617, 'min_child_weight': 9, 'scale_pos_weight': 8.242665585930839, 'reg_alpha': 0.25070017596679295, 'reg_lambda': 0.5493829427754682}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:42,115] Trial 86 finished with value: 0.7930948004835441 and parameters: {'n_estimators': 400, 'max_depth': 14, 'learning_rate': 0.07387298450652673, 'subsample': 0.9731738277865709, 'colsample_bytree': 0.603463890237262, 'gamma': 3.5870980616895363, 'min_child_weight': 9, 'scale_pos_weight': 8.735309737300497, 'reg_alpha': 0.11578513123302465, 'reg_lambda': 0.5562184631251543}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:42,650] Trial 87 finished with value: 0.7991086392354589 and parameters: {'n_estimators': 400, 'max_depth': 8, 'learning_rate': 0.08634611598264721, 'subsample': 0.9984108139589007, 'colsample_bytree': 0.624301562979668, 'gamma': 3.4954648400233475, 'min_child_weight': 10, 'scale_pos_weight': 8.33843266096077, 'reg_alpha': 0.20929910461906442, 'reg_lambda': 0.46067504739546694}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:43,154] Trial 88 finished with value: 0.7841432725554818 and parameters: {'n_estimators': 350, 'max_depth': 8, 'learning_rate': 0.09994962047237227, 'subsample': 0.9704740457108433, 'colsample_bytree': 0.624061293897417, 'gamma': 3.986942467745983, 'min_child_weight': 10, 'scale_pos_weight': 8.496999673116369, 'reg_alpha': 0.06255196300414456, 'reg_lambda': 0.6492374945746712}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:43,979] Trial 89 finished with value: 0.7762059133357218 and parameters: {'n_estimators': 450, 'max_depth': 6, 'learning_rate': 0.08067032800544814, 'subsample': 0.8683127558622502, 'colsample_bytree': 0.614109270207593, 'gamma': 3.2461681450731805, 'min_child_weight': 10, 'scale_pos_weight': 8.365190249227185, 'reg_alpha': 0.2063446676160197, 'reg_lambda': 0.5335591180257617}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:44,501] Trial 90 finished with value: 0.780342591720536 and parameters: {'n_estimators': 350, 'max_depth': 7, 'learning_rate': 0.08758991799698676, 'subsample': 0.9963334937618183, 'colsample_bytree': 0.6288710969754708, 'gamma': 3.520020862085558, 'min_child_weight': 10, 'scale_pos_weight': 8.15036454000398, 'reg_alpha': 0.13505911576791363, 'reg_lambda': 0.46059876042355885}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:45,202] Trial 91 finished with value: 0.7907242874831917 and parameters: {'n_estimators': 400, 'max_depth': 8, 'learning_rate': 0.06525736115273126, 'subsample': 0.9847217476009422, 'colsample_bytree': 0.6082583115049073, 'gamma': 3.3494582216910693, 'min_child_weight': 9, 'scale_pos_weight': 7.910976142132528, 'reg_alpha': 0.2600650999940215, 'reg_lambda': 0.4234446873474461}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:46,546] Trial 92 finished with value: 0.7989258664485275 and parameters: {'n_estimators': 400, 'max_depth': 14, 'learning_rate': 0.05563229276296625, 'subsample': 0.9971068746923653, 'colsample_bytree': 0.6431365572717588, 'gamma': 3.754862366864187, 'min_child_weight': 9, 'scale_pos_weight': 8.27183592933891, 'reg_alpha': 0.25410449762219567, 'reg_lambda': 0.5859861528004089}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:47,966] Trial 93 finished with value: 0.7985391186462222 and parameters: {'n_estimators': 450, 'max_depth': 14, 'learning_rate': 0.05339516060214283, 'subsample': 0.9663691372802329, 'colsample_bytree': 0.6450066814189983, 'gamma': 3.7681228049791615, 'min_child_weight': 9, 'scale_pos_weight': 8.230861166371847, 'reg_alpha': 0.25790766066512766, 'reg_lambda': 0.5983320566141569}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:49,321] Trial 94 finished with value: 0.7993673603706896 and parameters: {'n_estimators': 450, 'max_depth': 14, 'learning_rate': 0.057057688438332185, 'subsample': 0.9632451813132384, 'colsample_bytree': 0.6448942928035325, 'gamma': 3.774867327199525, 'min_child_weight': 9, 'scale_pos_weight': 8.851435413564705, 'reg_alpha': 0.21257036066372884, 'reg_lambda': 0.5538285258541298}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:50,661] Trial 95 finished with value: 0.7991464961099365 and parameters: {'n_estimators': 450, 'max_depth': 14, 'learning_rate': 0.05791582257054744, 'subsample': 0.9795644433206615, 'colsample_bytree': 0.6445545680822805, 'gamma': 3.8099082060652028, 'min_child_weight': 10, 'scale_pos_weight': 8.645562802335238, 'reg_alpha': 0.29952375938183656, 'reg_lambda': 0.5989599114991057}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:51,998] Trial 96 finished with value: 0.7997111198931668 and parameters: {'n_estimators': 450, 'max_depth': 14, 'learning_rate': 0.05806054259370206, 'subsample': 0.9787891279555477, 'colsample_bytree': 0.6455553096840471, 'gamma': 3.765247837437957, 'min_child_weight': 10, 'scale_pos_weight': 9.252675356195775, 'reg_alpha': 0.3176398081966907, 'reg_lambda': 0.5943950079538919}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:53,335] Trial 97 finished with value: 0.8003044326535125 and parameters: {'n_estimators': 450, 'max_depth': 14, 'learning_rate': 0.05640213867038925, 'subsample': 0.9986888590705205, 'colsample_bytree': 0.6527807088849406, 'gamma': 3.8800109349288103, 'min_child_weight': 10, 'scale_pos_weight': 9.359340828215927, 'reg_alpha': 0.29538393706002913, 'reg_lambda': 0.6010579080191291}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:05:59,857] Trial 98 finished with value: 0.5862359782852803 and parameters: {'n_estimators': 450, 'max_depth': 15, 'learning_rate': 0.004249543131884522, 'subsample': 0.9811985433309313, 'colsample_bytree': 0.645680389426566, 'gamma': 3.7946760035924822, 'min_child_weight': 10, 'scale_pos_weight': 9.668987369600291, 'reg_alpha': 0.32051215793160787, 'reg_lambda': 0.6053889404648829}. Best is trial 25 with value: 0.8004107295631796.\n",
            "[I 2025-01-01 15:06:01,242] Trial 99 finished with value: 0.7996852824941452 and parameters: {'n_estimators': 450, 'max_depth': 14, 'learning_rate': 0.06143046514438393, 'subsample': 0.9655990687956986, 'colsample_bytree': 0.6452196181277132, 'gamma': 3.743518903560815, 'min_child_weight': 10, 'scale_pos_weight': 8.782780772354146, 'reg_alpha': 0.29383486993414676, 'reg_lambda': 0.6718597460582053}. Best is trial 25 with value: 0.8004107295631796.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Best parameters for XGBoost: {'n_estimators': 150, 'max_depth': 12, 'learning_rate': 0.07035828434619988, 'subsample': 0.8398441451736178, 'colsample_bytree': 0.7761519748028861, 'gamma': 3.4496003774415027, 'min_child_weight': 9, 'scale_pos_weight': 6.799856136484732, 'reg_alpha': 0.6180538822294699, 'reg_lambda': 0.6605270453462708}\n"
          ]
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1000x600 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[I 2025-01-01 15:06:02,935] A new study created in memory with name: no-name-3fa0911a-a993-4eb4-9b04-e3bd76564d80\n",
            "[I 2025-01-01 15:06:28,877] Trial 0 finished with value: 0.7207679067956363 and parameters: {'iterations': 1600, 'depth': 8, 'learning_rate': 0.036271127350831905, 'l2_leaf_reg': 2.035433634719731, 'border_count': 56, 'scale_pos_weight': 4.805319552473135, 'random_strength': 0.40916629577933517, 'bagging_temperature': 3.150564823176821}. Best is trial 0 with value: 0.7207679067956363.\n",
            "[I 2025-01-01 15:06:50,611] Trial 1 finished with value: 0.793077729519245 and parameters: {'iterations': 900, 'depth': 10, 'learning_rate': 0.010337221310602367, 'l2_leaf_reg': 3.5931168935361506, 'border_count': 45, 'scale_pos_weight': 5.176203548013518, 'random_strength': 6.978085609420669, 'bagging_temperature': 2.6948647628893863}. Best is trial 1 with value: 0.793077729519245.\n",
            "[I 2025-01-01 15:07:14,802] Trial 2 finished with value: 0.7394877779605807 and parameters: {'iterations': 1200, 'depth': 9, 'learning_rate': 0.2867122926590021, 'l2_leaf_reg': 5.142223689183533, 'border_count': 107, 'scale_pos_weight': 6.750151650453767, 'random_strength': 2.817248093022796, 'bagging_temperature': 0.8690058776207077}. Best is trial 1 with value: 0.793077729519245.\n",
            "[I 2025-01-01 15:08:11,136] Trial 3 finished with value: 0.7469270447098908 and parameters: {'iterations': 1300, 'depth': 10, 'learning_rate': 0.24479347813577215, 'l2_leaf_reg': 9.210955323521127, 'border_count': 203, 'scale_pos_weight': 8.63610257811651, 'random_strength': 9.722534225629031, 'bagging_temperature': 1.9475477040380984}. Best is trial 1 with value: 0.793077729519245.\n",
            "[I 2025-01-01 15:08:42,477] Trial 4 finished with value: 0.7457168865789875 and parameters: {'iterations': 1000, 'depth': 10, 'learning_rate': 0.2674633958995973, 'l2_leaf_reg': 8.281948687578893, 'border_count': 90, 'scale_pos_weight': 8.118529104236188, 'random_strength': 3.8420176121736374, 'bagging_temperature': 1.2004807363953873}. Best is trial 1 with value: 0.793077729519245.\n",
            "[I 2025-01-01 15:10:55,380] Trial 5 finished with value: 0.7683091495930395 and parameters: {'iterations': 700, 'depth': 12, 'learning_rate': 0.09125753035027126, 'l2_leaf_reg': 9.955932098863789, 'border_count': 230, 'scale_pos_weight': 2.91833941574164, 'random_strength': 2.3688083254088053, 'bagging_temperature': 6.6354954848264605}. Best is trial 1 with value: 0.793077729519245.\n",
            "[I 2025-01-01 15:10:56,102] Trial 6 finished with value: 0.7830338118437394 and parameters: {'iterations': 100, 'depth': 8, 'learning_rate': 0.01862251501345418, 'l2_leaf_reg': 1.2838371381571063, 'border_count': 255, 'scale_pos_weight': 2.7398614562012518, 'random_strength': 1.6396435208150317, 'bagging_temperature': 4.634051138315158}. Best is trial 1 with value: 0.793077729519245.\n",
            "[I 2025-01-01 15:12:04,795] Trial 7 finished with value: 0.7579718281068525 and parameters: {'iterations': 1300, 'depth': 11, 'learning_rate': 0.045043082989879926, 'l2_leaf_reg': 1.6968100012254523, 'border_count': 80, 'scale_pos_weight': 5.025550889874276, 'random_strength': 1.2597670993283983, 'bagging_temperature': 1.3347913753866036}. Best is trial 1 with value: 0.793077729519245.\n",
            "[I 2025-01-01 15:12:14,049] Trial 8 finished with value: 0.7492916167199584 and parameters: {'iterations': 600, 'depth': 5, 'learning_rate': 0.04971223458210485, 'l2_leaf_reg': 7.847631381976191, 'border_count': 61, 'scale_pos_weight': 4.9412079666004765, 'random_strength': 6.064117157448554, 'bagging_temperature': 5.462812919903999}. Best is trial 1 with value: 0.793077729519245.\n",
            "[I 2025-01-01 15:12:42,929] Trial 9 finished with value: 0.7958036165535125 and parameters: {'iterations': 1700, 'depth': 7, 'learning_rate': 0.0120048346803986, 'l2_leaf_reg': 5.129981331547945, 'border_count': 134, 'scale_pos_weight': 7.980142174404493, 'random_strength': 9.086351944834046, 'bagging_temperature': 4.348824952955022}. Best is trial 9 with value: 0.7958036165535125.\n",
            "[I 2025-01-01 15:13:13,873] Trial 10 finished with value: 0.7977988847299671 and parameters: {'iterations': 2000, 'depth': 5, 'learning_rate': 0.011072973879515892, 'l2_leaf_reg': 6.180688820639375, 'border_count': 159, 'scale_pos_weight': 9.745732249588478, 'random_strength': 9.900490715312943, 'bagging_temperature': 9.739136246318505}. Best is trial 10 with value: 0.7977988847299671.\n",
            "[I 2025-01-01 15:13:44,797] Trial 11 finished with value: 0.7982100544793117 and parameters: {'iterations': 2000, 'depth': 5, 'learning_rate': 0.010151468824593486, 'l2_leaf_reg': 5.9985315537586, 'border_count': 161, 'scale_pos_weight': 9.503432817433206, 'random_strength': 9.846865462504413, 'bagging_temperature': 9.820283884461135}. Best is trial 11 with value: 0.7982100544793117.\n",
            "[I 2025-01-01 15:14:14,578] Trial 12 finished with value: 0.7374687385115205 and parameters: {'iterations': 2000, 'depth': 4, 'learning_rate': 0.02360769386880557, 'l2_leaf_reg': 6.675421940951276, 'border_count': 176, 'scale_pos_weight': 9.957486882442804, 'random_strength': 8.155129151662337, 'bagging_temperature': 9.515538466479345}. Best is trial 11 with value: 0.7982100544793117.\n",
            "[I 2025-01-01 15:14:46,712] Trial 13 finished with value: 0.7487234502025112 and parameters: {'iterations': 2000, 'depth': 6, 'learning_rate': 0.018135632821862962, 'l2_leaf_reg': 6.376084817143036, 'border_count': 162, 'scale_pos_weight': 9.912951907139076, 'random_strength': 7.800725564328391, 'bagging_temperature': 9.890280914757037}. Best is trial 11 with value: 0.7982100544793117.\n",
            "[I 2025-01-01 15:15:12,032] Trial 14 finished with value: 0.6823960820794422 and parameters: {'iterations': 1700, 'depth': 4, 'learning_rate': 0.08495024581612091, 'l2_leaf_reg': 3.590652991186364, 'border_count': 132, 'scale_pos_weight': 6.787938625597768, 'random_strength': 9.954269378103273, 'bagging_temperature': 8.177835765822694}. Best is trial 11 with value: 0.7982100544793117.\n",
            "[I 2025-01-01 15:15:44,394] Trial 15 finished with value: 0.7540903203414386 and parameters: {'iterations': 2000, 'depth': 6, 'learning_rate': 0.010090819510839965, 'l2_leaf_reg': 6.5352625024399496, 'border_count': 194, 'scale_pos_weight': 1.249933529499355, 'random_strength': 5.511514276113878, 'bagging_temperature': 7.909118592484804}. Best is trial 11 with value: 0.7982100544793117.\n",
            "[I 2025-01-01 15:16:08,470] Trial 16 finished with value: 0.7002389472270169 and parameters: {'iterations': 1500, 'depth': 6, 'learning_rate': 0.028380618307722504, 'l2_leaf_reg': 3.5515058051356534, 'border_count': 154, 'scale_pos_weight': 9.012743100004426, 'random_strength': 8.380000862303033, 'bagging_temperature': 8.48527521794575}. Best is trial 11 with value: 0.7982100544793117.\n",
            "[I 2025-01-01 15:16:36,113] Trial 17 finished with value: 0.7478886443892305 and parameters: {'iterations': 1800, 'depth': 5, 'learning_rate': 0.015386101089156641, 'l2_leaf_reg': 4.393857964421013, 'border_count': 124, 'scale_pos_weight': 6.558302561945591, 'random_strength': 6.753434480399118, 'bagging_temperature': 6.626876781352282}. Best is trial 11 with value: 0.7982100544793117.\n",
            "[I 2025-01-01 15:16:40,883] Trial 18 finished with value: 0.7983542207136235 and parameters: {'iterations': 300, 'depth': 5, 'learning_rate': 0.08036661387166225, 'l2_leaf_reg': 7.642753734291704, 'border_count': 188, 'scale_pos_weight': 9.20588931160197, 'random_strength': 4.138011624949862, 'bagging_temperature': 8.852781096174283}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:16:41,376] Trial 19 finished with value: 0.5156916412752451 and parameters: {'iterations': 100, 'depth': 7, 'learning_rate': 0.08733804555423899, 'l2_leaf_reg': 8.481764008073226, 'border_count': 215, 'scale_pos_weight': 7.321032415820412, 'random_strength': 4.180883121880425, 'bagging_temperature': 7.220928127445962}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:16:47,417] Trial 20 finished with value: 0.7255569294573341 and parameters: {'iterations': 400, 'depth': 4, 'learning_rate': 0.1509822849352899, 'l2_leaf_reg': 7.493130190519981, 'border_count': 245, 'scale_pos_weight': 8.759201036093767, 'random_strength': 4.210740903784646, 'bagging_temperature': 9.10985318862925}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:16:53,635] Trial 21 finished with value: 0.7266536079209763 and parameters: {'iterations': 400, 'depth': 5, 'learning_rate': 0.13621301072209543, 'l2_leaf_reg': 5.760650276105354, 'border_count': 178, 'scale_pos_weight': 9.380175433332806, 'random_strength': 8.952888866715607, 'bagging_temperature': 9.853732693678657}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:17:16,817] Trial 22 finished with value: 0.702639742114108 and parameters: {'iterations': 1500, 'depth': 5, 'learning_rate': 0.07180266350489277, 'l2_leaf_reg': 7.172954732000561, 'border_count': 179, 'scale_pos_weight': 7.744108294108646, 'random_strength': 7.2689195367921124, 'bagging_temperature': 8.80020719952103}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:17:47,780] Trial 23 finished with value: 0.715750193940413 and parameters: {'iterations': 1800, 'depth': 7, 'learning_rate': 0.02950263898843293, 'l2_leaf_reg': 5.726519922963319, 'border_count': 163, 'scale_pos_weight': 9.579899119992444, 'random_strength': 5.108948453102245, 'bagging_temperature': 7.496685888644976}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:18:00,678] Trial 24 finished with value: 0.7941133206198828 and parameters: {'iterations': 800, 'depth': 6, 'learning_rate': 0.0139893367224489, 'l2_leaf_reg': 4.675232511570769, 'border_count': 147, 'scale_pos_weight': 6.052361528032737, 'random_strength': 9.077592231840022, 'bagging_temperature': 9.033005442579002}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:18:06,725] Trial 25 finished with value: 0.716752978920204 and parameters: {'iterations': 400, 'depth': 4, 'learning_rate': 0.14293658294820674, 'l2_leaf_reg': 7.103141892825177, 'border_count': 199, 'scale_pos_weight': 8.574376989724215, 'random_strength': 5.872244581954239, 'bagging_temperature': 5.713719728347408}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:18:23,552] Trial 26 finished with value: 0.7100579469792189 and parameters: {'iterations': 1100, 'depth': 5, 'learning_rate': 0.06296346130997094, 'l2_leaf_reg': 8.910846475958625, 'border_count': 112, 'scale_pos_weight': 9.094604211422094, 'random_strength': 3.28112925468918, 'bagging_temperature': 9.907132626188915}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:18:56,920] Trial 27 finished with value: 0.7084098895243623 and parameters: {'iterations': 1900, 'depth': 7, 'learning_rate': 0.03864193170677275, 'l2_leaf_reg': 6.118059461945859, 'border_count': 218, 'scale_pos_weight': 7.441984071286201, 'random_strength': 4.861619082344987, 'bagging_temperature': 8.311742597897538}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:19:06,734] Trial 28 finished with value: 0.7950149779241202 and parameters: {'iterations': 600, 'depth': 6, 'learning_rate': 0.0227329978051562, 'l2_leaf_reg': 7.795036066267602, 'border_count': 190, 'scale_pos_weight': 4.251325447105543, 'random_strength': 7.714477597896695, 'bagging_temperature': 6.985522279661392}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:19:42,020] Trial 29 finished with value: 0.7475604161032627 and parameters: {'iterations': 1500, 'depth': 9, 'learning_rate': 0.014287462723122105, 'l2_leaf_reg': 2.366026715777774, 'border_count': 166, 'scale_pos_weight': 8.292093602601852, 'random_strength': 9.957139509958699, 'bagging_temperature': 3.612571186369531}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:20:05,843] Trial 30 finished with value: 0.6827925805959614 and parameters: {'iterations': 1700, 'depth': 4, 'learning_rate': 0.11286076722215184, 'l2_leaf_reg': 4.53162763185367, 'border_count': 144, 'scale_pos_weight': 9.234624338905794, 'random_strength': 8.565101590083337, 'bagging_temperature': 0.2155807060245234}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:20:34,857] Trial 31 finished with value: 0.7955536674116405 and parameters: {'iterations': 1800, 'depth': 7, 'learning_rate': 0.012295774636638659, 'l2_leaf_reg': 5.259012407804127, 'border_count': 132, 'scale_pos_weight': 7.915213067182361, 'random_strength': 9.343427406004354, 'bagging_temperature': 4.08916874307223}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:20:58,052] Trial 32 finished with value: 0.7954107146714244 and parameters: {'iterations': 1600, 'depth': 5, 'learning_rate': 0.012194280772563534, 'l2_leaf_reg': 6.800133337749811, 'border_count': 119, 'scale_pos_weight': 9.70227692635289, 'random_strength': 9.152020026501853, 'bagging_temperature': 2.8602506332242363}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:21:38,804] Trial 33 finished with value: 0.7967128787931015 and parameters: {'iterations': 1900, 'depth': 9, 'learning_rate': 0.010041026542566063, 'l2_leaf_reg': 5.132400801614037, 'border_count': 137, 'scale_pos_weight': 9.990385833907629, 'random_strength': 6.755240768584711, 'bagging_temperature': 5.77050205137041}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:23:29,519] Trial 34 finished with value: 0.7983508702198565 and parameters: {'iterations': 1900, 'depth': 11, 'learning_rate': 0.011285850714736345, 'l2_leaf_reg': 6.138787445500109, 'border_count': 99, 'scale_pos_weight': 9.310307036509597, 'random_strength': 6.545889129037553, 'bagging_temperature': 9.240866054317594}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:24:37,725] Trial 35 finished with value: 0.7235142988129558 and parameters: {'iterations': 1300, 'depth': 11, 'learning_rate': 0.19872656330464977, 'l2_leaf_reg': 5.855004690967697, 'border_count': 103, 'scale_pos_weight': 8.58190259436399, 'random_strength': 6.460543573252612, 'bagging_temperature': 9.21128644890997}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:27:45,830] Trial 36 finished with value: 0.7851218457732362 and parameters: {'iterations': 1900, 'depth': 12, 'learning_rate': 0.018159508773998977, 'l2_leaf_reg': 8.113794136292455, 'border_count': 40, 'scale_pos_weight': 9.254545085745962, 'random_strength': 3.4688489612435838, 'bagging_temperature': 7.635848952582573}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:28:59,054] Trial 37 finished with value: 0.7950379316979317 and parameters: {'iterations': 1400, 'depth': 11, 'learning_rate': 0.016030926285213357, 'l2_leaf_reg': 7.283947824120482, 'border_count': 92, 'scale_pos_weight': 7.164420502046177, 'random_strength': 4.472697409463732, 'bagging_temperature': 8.660179164647623}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:29:17,010] Trial 38 finished with value: 0.7611577774958058 and parameters: {'iterations': 900, 'depth': 9, 'learning_rate': 0.024039417326745544, 'l2_leaf_reg': 4.069194506768427, 'border_count': 61, 'scale_pos_weight': 5.6209952204072815, 'random_strength': 0.2674071853490121, 'bagging_temperature': 6.3166437536893}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:29:22,971] Trial 39 finished with value: 0.7942913835971628 and parameters: {'iterations': 300, 'depth': 8, 'learning_rate': 0.057106408990076726, 'l2_leaf_reg': 9.779849478539724, 'border_count': 210, 'scale_pos_weight': 3.8830175395036592, 'random_strength': 2.6391812713750444, 'bagging_temperature': 9.555244793370768}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:30:12,624] Trial 40 finished with value: 0.7682948531297339 and parameters: {'iterations': 1200, 'depth': 10, 'learning_rate': 0.03796358390794332, 'l2_leaf_reg': 8.93320233490982, 'border_count': 155, 'scale_pos_weight': 8.367392535370502, 'random_strength': 1.819624878094971, 'bagging_temperature': 8.08928882076804}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:30:59,124] Trial 41 finished with value: 0.7959225617669862 and parameters: {'iterations': 1900, 'depth': 9, 'learning_rate': 0.010447990120716165, 'l2_leaf_reg': 5.125706993381446, 'border_count': 187, 'scale_pos_weight': 9.929590529990932, 'random_strength': 7.325029859644854, 'bagging_temperature': 9.370564956620417}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:32:05,474] Trial 42 finished with value: 0.7981554451400471 and parameters: {'iterations': 2000, 'depth': 10, 'learning_rate': 0.010178543313676697, 'l2_leaf_reg': 6.128572088720526, 'border_count': 97, 'scale_pos_weight': 8.85753609755377, 'random_strength': 6.510111576357347, 'bagging_temperature': 2.006883839566049}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:33:09,106] Trial 43 finished with value: 0.7799770786305849 and parameters: {'iterations': 2000, 'depth': 10, 'learning_rate': 0.013019091821877118, 'l2_leaf_reg': 6.378575277349192, 'border_count': 75, 'scale_pos_weight': 9.09712956877583, 'random_strength': 6.084962534476597, 'bagging_temperature': 1.9124196355793996}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:36:53,561] Trial 44 finished with value: 0.7671138979845564 and parameters: {'iterations': 1800, 'depth': 12, 'learning_rate': 0.020365240462226118, 'l2_leaf_reg': 5.962342692153599, 'border_count': 89, 'scale_pos_weight': 8.890746925648253, 'random_strength': 5.2265893009155455, 'bagging_temperature': 2.3150796149241613}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:38:19,380] Trial 45 finished with value: 0.7971600176863222 and parameters: {'iterations': 2000, 'depth': 11, 'learning_rate': 0.011221191370852139, 'l2_leaf_reg': 6.872012211707045, 'border_count': 50, 'scale_pos_weight': 9.517035034594496, 'random_strength': 9.448490977133835, 'bagging_temperature': 4.830736054747919}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:38:48,437] Trial 46 finished with value: 0.7654689974853242 and parameters: {'iterations': 1600, 'depth': 8, 'learning_rate': 0.017037361605619368, 'l2_leaf_reg': 7.6828195942219475, 'border_count': 72, 'scale_pos_weight': 8.214439202443646, 'random_strength': 8.59850986367864, 'bagging_temperature': 8.764803587840303}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:39:54,880] Trial 47 finished with value: 0.7580184710574095 and parameters: {'iterations': 1900, 'depth': 10, 'learning_rate': 0.014832949714421555, 'l2_leaf_reg': 5.529192555214279, 'border_count': 106, 'scale_pos_weight': 7.739995836928886, 'random_strength': 7.727520878393037, 'bagging_temperature': 9.529259544975128}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:42:07,766] Trial 48 finished with value: 0.7973209433563244 and parameters: {'iterations': 1700, 'depth': 11, 'learning_rate': 0.01245535510563932, 'l2_leaf_reg': 6.280723292729387, 'border_count': 172, 'scale_pos_weight': 9.53710986945046, 'random_strength': 5.612984177745732, 'bagging_temperature': 0.3868433723723044}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:45:58,287] Trial 49 finished with value: 0.7339451419497699 and parameters: {'iterations': 2000, 'depth': 12, 'learning_rate': 0.11001915187086382, 'l2_leaf_reg': 6.6264489452107895, 'border_count': 95, 'scale_pos_weight': 8.80574548316635, 'random_strength': 8.078377528990298, 'bagging_temperature': 9.959609239899311}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:46:14,074] Trial 50 finished with value: 0.7170984143644109 and parameters: {'iterations': 1000, 'depth': 6, 'learning_rate': 0.0460873981720832, 'l2_leaf_reg': 4.815883457901729, 'border_count': 120, 'scale_pos_weight': 8.492138760913011, 'random_strength': 3.7197021659470826, 'bagging_temperature': 3.3957260474350726}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:48:20,727] Trial 51 finished with value: 0.7961460136616684 and parameters: {'iterations': 1700, 'depth': 11, 'learning_rate': 0.011526226263571807, 'l2_leaf_reg': 6.225049298595879, 'border_count': 170, 'scale_pos_weight': 9.566191195257893, 'random_strength': 5.608795539078606, 'bagging_temperature': 0.3314310720641935}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:50:30,276] Trial 52 finished with value: 0.774341255479623 and parameters: {'iterations': 1800, 'depth': 11, 'learning_rate': 0.013032885148107395, 'l2_leaf_reg': 5.547133600773251, 'border_count': 155, 'scale_pos_weight': 9.31789447011964, 'random_strength': 4.652601346622654, 'bagging_temperature': 0.84568366069587}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:55:27,663] Trial 53 finished with value: 0.7500976860939904 and parameters: {'iterations': 1700, 'depth': 12, 'learning_rate': 0.01003860192308237, 'l2_leaf_reg': 6.223754309321918, 'border_count': 182, 'scale_pos_weight': 1.291132864375161, 'random_strength': 6.2365505944852835, 'bagging_temperature': 1.5429774527353854}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:55:58,105] Trial 54 finished with value: 0.7371790665468064 and parameters: {'iterations': 2000, 'depth': 5, 'learning_rate': 0.019930072006602184, 'l2_leaf_reg': 7.034142121858605, 'border_count': 174, 'scale_pos_weight': 9.758663584424655, 'random_strength': 7.070297699474682, 'bagging_temperature': 0.028588249143691957}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 15:57:32,992] Trial 55 finished with value: 0.7732288066313118 and parameters: {'iterations': 1900, 'depth': 10, 'learning_rate': 0.01378754710346123, 'l2_leaf_reg': 8.319606060358284, 'border_count': 226, 'scale_pos_weight': 8.859057923079007, 'random_strength': 5.542957994187997, 'bagging_temperature': 0.7020857785565218}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:00:22,722] Trial 56 finished with value: 0.732767945056463 and parameters: {'iterations': 2000, 'depth': 11, 'learning_rate': 0.07270514488583736, 'l2_leaf_reg': 6.655446048468539, 'border_count': 197, 'scale_pos_weight': 9.460205468983082, 'random_strength': 9.603289159181221, 'bagging_temperature': 1.3151518206837658}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:00:51,441] Trial 57 finished with value: 0.7652790692339807 and parameters: {'iterations': 1800, 'depth': 5, 'learning_rate': 0.0165269649796933, 'l2_leaf_reg': 7.355756742500693, 'border_count': 150, 'scale_pos_weight': 8.048745574814655, 'random_strength': 6.585196149481868, 'bagging_temperature': 9.053284738370435}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:00:51,742] Trial 58 finished with value: 0.08011141440334835 and parameters: {'iterations': 100, 'depth': 4, 'learning_rate': 0.011297446110233013, 'l2_leaf_reg': 4.047764339273526, 'border_count': 207, 'scale_pos_weight': 9.034965242863576, 'random_strength': 4.126780093577498, 'bagging_temperature': 8.465359620074866}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:00:55,072] Trial 59 finished with value: 0.32686607509959487 and parameters: {'iterations': 200, 'depth': 6, 'learning_rate': 0.015333289716363451, 'l2_leaf_reg': 5.401726029815499, 'border_count': 159, 'scale_pos_weight': 8.620221392523952, 'random_strength': 3.208418802412964, 'bagging_temperature': 7.850382222662082}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:02:48,439] Trial 60 finished with value: 0.7596190905141205 and parameters: {'iterations': 1700, 'depth': 11, 'learning_rate': 0.027414191503375884, 'l2_leaf_reg': 2.897354470248777, 'border_count': 138, 'scale_pos_weight': 6.605629413918073, 'random_strength': 5.139218450769807, 'bagging_temperature': 2.355487850203289}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:04:14,752] Trial 61 finished with value: 0.7962159127237851 and parameters: {'iterations': 2000, 'depth': 11, 'learning_rate': 0.01115099707441578, 'l2_leaf_reg': 5.990390629422596, 'border_count': 49, 'scale_pos_weight': 9.535720683107083, 'random_strength': 9.553793255822884, 'bagging_temperature': 4.897604711396296}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:04:31,479] Trial 62 finished with value: 0.7838443900825339 and parameters: {'iterations': 600, 'depth': 10, 'learning_rate': 0.011414386888334072, 'l2_leaf_reg': 6.904635500259447, 'border_count': 55, 'scale_pos_weight': 9.710860426735492, 'random_strength': 8.810418451105114, 'bagging_temperature': 9.482027000062415}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:08:11,805] Trial 63 finished with value: 0.7815872564278379 and parameters: {'iterations': 1900, 'depth': 12, 'learning_rate': 0.01301565290606699, 'l2_leaf_reg': 6.511971060546011, 'border_count': 70, 'scale_pos_weight': 9.960775472078733, 'random_strength': 9.992587060829017, 'bagging_temperature': 4.0210180711636365}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:09:02,330] Trial 64 finished with value: 0.7961567475753879 and parameters: {'iterations': 1600, 'depth': 10, 'learning_rate': 0.011130661649921787, 'l2_leaf_reg': 7.975117604538376, 'border_count': 84, 'scale_pos_weight': 9.296034251431818, 'random_strength': 9.381249631759731, 'bagging_temperature': 3.021316388421594}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:09:34,183] Trial 65 finished with value: 0.7668415550349342 and parameters: {'iterations': 2000, 'depth': 5, 'learning_rate': 0.014024555011067521, 'l2_leaf_reg': 6.997813260875293, 'border_count': 168, 'scale_pos_weight': 9.512221054039975, 'random_strength': 9.67201171217049, 'bagging_temperature': 5.264371284089983}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:11:42,943] Trial 66 finished with value: 0.7348161913625985 and parameters: {'iterations': 1800, 'depth': 11, 'learning_rate': 0.07840059992456767, 'l2_leaf_reg': 5.67760605315785, 'border_count': 143, 'scale_pos_weight': 9.005166808848811, 'random_strength': 8.295765921001491, 'bagging_temperature': 1.794092791808527}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:12:11,675] Trial 67 finished with value: 0.6847677736230329 and parameters: {'iterations': 1900, 'depth': 4, 'learning_rate': 0.10607729571837651, 'l2_leaf_reg': 7.430277852165668, 'border_count': 128, 'scale_pos_weight': 7.695991654750445, 'random_strength': 5.778419408533898, 'bagging_temperature': 6.131973623038257}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:13:30,257] Trial 68 finished with value: 0.7950756202515008 and parameters: {'iterations': 2000, 'depth': 11, 'learning_rate': 0.011912420079862812, 'l2_leaf_reg': 4.908483818761395, 'border_count': 33, 'scale_pos_weight': 8.734067541747029, 'random_strength': 8.958975763206414, 'bagging_temperature': 7.114056650880341}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:13:58,736] Trial 69 finished with value: 0.7970021799283052 and parameters: {'iterations': 1800, 'depth': 5, 'learning_rate': 0.010052657433410436, 'l2_leaf_reg': 7.669095970950751, 'border_count': 187, 'scale_pos_weight': 7.025892305665918, 'random_strength': 7.515690735691261, 'bagging_temperature': 9.714470505847991}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:14:29,608] Trial 70 finished with value: 0.7281703412542329 and parameters: {'iterations': 1900, 'depth': 6, 'learning_rate': 0.01765283231275807, 'l2_leaf_reg': 6.35070700392552, 'border_count': 101, 'scale_pos_weight': 9.693632456299232, 'random_strength': 6.30474512587826, 'bagging_temperature': 2.537176098200071}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:14:57,996] Trial 71 finished with value: 0.7951383660771068 and parameters: {'iterations': 1800, 'depth': 5, 'learning_rate': 0.010067976311936979, 'l2_leaf_reg': 7.600659484413056, 'border_count': 173, 'scale_pos_weight': 9.23886005527885, 'random_strength': 7.443313995282216, 'bagging_temperature': 8.854659012070137}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:15:09,151] Trial 72 finished with value: 0.7849267312665351 and parameters: {'iterations': 700, 'depth': 5, 'learning_rate': 0.012903703020437933, 'l2_leaf_reg': 8.647185606334366, 'border_count': 185, 'scale_pos_weight': 6.9419760015244005, 'random_strength': 6.830390401915084, 'bagging_temperature': 9.76730176919848}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:15:37,992] Trial 73 finished with value: 0.7959615823806805 and parameters: {'iterations': 1900, 'depth': 4, 'learning_rate': 0.010605667920259403, 'l2_leaf_reg': 6.867442326284419, 'border_count': 163, 'scale_pos_weight': 5.928943100730892, 'random_strength': 7.949550842241299, 'bagging_temperature': 9.122020722920427}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:16:10,997] Trial 74 finished with value: 0.7965142151299818 and parameters: {'iterations': 2000, 'depth': 6, 'learning_rate': 0.012186258707676097, 'l2_leaf_reg': 5.870251539006314, 'border_count': 193, 'scale_pos_weight': 9.39069639617088, 'random_strength': 9.342232074939842, 'bagging_temperature': 9.633213190982113}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:16:36,248] Trial 75 finished with value: 0.7515131188169893 and parameters: {'iterations': 1600, 'depth': 5, 'learning_rate': 0.015543156014026734, 'l2_leaf_reg': 6.089285106542422, 'border_count': 200, 'scale_pos_weight': 8.317982643808005, 'random_strength': 0.730863823079126, 'bagging_temperature': 9.246082693262874}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:21:53,778] Trial 76 finished with value: 0.7932705900213579 and parameters: {'iterations': 1800, 'depth': 12, 'learning_rate': 0.013479120669346978, 'l2_leaf_reg': 7.193251267392855, 'border_count': 180, 'scale_pos_weight': 4.51908555119678, 'random_strength': 7.0085934186123025, 'bagging_temperature': 8.483889982259633}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:22:16,538] Trial 77 finished with value: 0.7003327271834253 and parameters: {'iterations': 1500, 'depth': 5, 'learning_rate': 0.06088284351399509, 'l2_leaf_reg': 7.929329085999676, 'border_count': 189, 'scale_pos_weight': 7.465662999205991, 'random_strength': 8.652402126139494, 'bagging_temperature': 9.870032742829784}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:22:25,095] Trial 78 finished with value: 0.7756834241623454 and parameters: {'iterations': 500, 'depth': 7, 'learning_rate': 0.011228762469812964, 'l2_leaf_reg': 1.1709839669771736, 'border_count': 159, 'scale_pos_weight': 9.978306379343767, 'random_strength': 4.965419613961911, 'bagging_temperature': 8.865053741044347}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:22:58,866] Trial 79 finished with value: 0.7280758806674532 and parameters: {'iterations': 1700, 'depth': 9, 'learning_rate': 0.2995027792292456, 'l2_leaf_reg': 6.465818117805626, 'border_count': 111, 'scale_pos_weight': 9.109666768933513, 'random_strength': 7.51417054705524, 'bagging_temperature': 4.4629552010810025}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:23:56,726] Trial 80 finished with value: 0.7328399651868703 and parameters: {'iterations': 1400, 'depth': 10, 'learning_rate': 0.03398325165970606, 'l2_leaf_reg': 6.763190068412835, 'border_count': 151, 'scale_pos_weight': 8.542271070659927, 'random_strength': 5.928551531437129, 'bagging_temperature': 9.98472482905275}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:24:39,970] Trial 81 finished with value: 0.7977521728121018 and parameters: {'iterations': 1900, 'depth': 9, 'learning_rate': 0.010148798248396332, 'l2_leaf_reg': 5.089200393860517, 'border_count': 143, 'scale_pos_weight': 9.730396780946695, 'random_strength': 6.607282798388733, 'bagging_temperature': 6.736586112916322}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:25:40,775] Trial 82 finished with value: 0.7842494006072595 and parameters: {'iterations': 2000, 'depth': 10, 'learning_rate': 0.010659363398880614, 'l2_leaf_reg': 5.385733680943058, 'border_count': 65, 'scale_pos_weight': 9.744428103331334, 'random_strength': 6.384673331679341, 'bagging_temperature': 6.819611386299353}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:26:27,137] Trial 83 finished with value: 0.753517449859521 and parameters: {'iterations': 1900, 'depth': 9, 'learning_rate': 0.014723293036183586, 'l2_leaf_reg': 5.7144871532355666, 'border_count': 177, 'scale_pos_weight': 6.212726421980635, 'random_strength': 5.267618765961018, 'bagging_temperature': 7.4193896075852654}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:28:47,995] Trial 84 finished with value: 0.7969738980283912 and parameters: {'iterations': 1900, 'depth': 11, 'learning_rate': 0.012362091611055427, 'l2_leaf_reg': 4.944549467955579, 'border_count': 167, 'scale_pos_weight': 8.89497964962212, 'random_strength': 7.25284785089958, 'bagging_temperature': 8.209581747007343}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:29:21,246] Trial 85 finished with value: 0.7236824249060878 and parameters: {'iterations': 1800, 'depth': 8, 'learning_rate': 0.20633289432528862, 'l2_leaf_reg': 6.19228801038491, 'border_count': 142, 'scale_pos_weight': 9.426109626485982, 'random_strength': 6.599120887303433, 'bagging_temperature': 9.3599803461411}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:30:54,613] Trial 86 finished with value: 0.7297007865285579 and parameters: {'iterations': 2000, 'depth': 10, 'learning_rate': 0.09588209480098335, 'l2_leaf_reg': 4.234073904697196, 'border_count': 204, 'scale_pos_weight': 9.783909837839477, 'random_strength': 9.802799419370654, 'bagging_temperature': 7.887514993937822}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:32:52,498] Trial 87 finished with value: 0.7953181216931537 and parameters: {'iterations': 1900, 'depth': 11, 'learning_rate': 0.010105797598954686, 'l2_leaf_reg': 5.25566861664904, 'border_count': 117, 'scale_pos_weight': 5.271403355334901, 'random_strength': 6.1728839105231605, 'bagging_temperature': 1.10143107829344}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:33:24,030] Trial 88 finished with value: 0.7970053798558483 and parameters: {'iterations': 2000, 'depth': 5, 'learning_rate': 0.011961401767335334, 'l2_leaf_reg': 7.57870792646086, 'border_count': 182, 'scale_pos_weight': 9.13873131869956, 'random_strength': 5.386448917890938, 'bagging_temperature': 9.698120258223996}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:33:44,918] Trial 89 finished with value: 0.796022046914687 and parameters: {'iterations': 1100, 'depth': 8, 'learning_rate': 0.019711743583351253, 'l2_leaf_reg': 8.1938885981897, 'border_count': 129, 'scale_pos_weight': 9.190701266394516, 'random_strength': 4.421198322617919, 'bagging_temperature': 3.5795514983092236}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:34:14,985] Trial 90 finished with value: 0.7974406232669687 and parameters: {'iterations': 2000, 'depth': 4, 'learning_rate': 0.012207423681844212, 'l2_leaf_reg': 7.154883492742674, 'border_count': 97, 'scale_pos_weight': 8.718049149344196, 'random_strength': 4.743413310481985, 'bagging_temperature': 6.50839019882585}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:34:44,929] Trial 91 finished with value: 0.7978957136460609 and parameters: {'iterations': 2000, 'depth': 4, 'learning_rate': 0.012148337818106725, 'l2_leaf_reg': 6.649224473282351, 'border_count': 95, 'scale_pos_weight': 8.775097982994302, 'random_strength': 3.8330641589104957, 'bagging_temperature': 6.365175404876021}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:35:14,863] Trial 92 finished with value: 0.7629549295168743 and parameters: {'iterations': 2000, 'depth': 4, 'learning_rate': 0.014129253420536924, 'l2_leaf_reg': 6.583320781406223, 'border_count': 82, 'scale_pos_weight': 8.721499795919046, 'random_strength': 3.8293866659698526, 'bagging_temperature': 6.31731924073333}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:35:44,878] Trial 93 finished with value: 0.7935757922437724 and parameters: {'iterations': 2000, 'depth': 4, 'learning_rate': 0.013144618953541323, 'l2_leaf_reg': 7.115659738338692, 'border_count': 99, 'scale_pos_weight': 8.369072810985385, 'random_strength': 4.622139274411843, 'bagging_temperature': 5.622530344745118}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:36:13,442] Trial 94 finished with value: 0.7956861042183623 and parameters: {'iterations': 1900, 'depth': 4, 'learning_rate': 0.011156173534417196, 'l2_leaf_reg': 6.367470525172883, 'border_count': 79, 'scale_pos_weight': 9.600599926187655, 'random_strength': 3.351492520915176, 'bagging_temperature': 5.9335837859318605}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:36:43,558] Trial 95 finished with value: 0.7739617054046631 and parameters: {'iterations': 2000, 'depth': 4, 'learning_rate': 0.01566637666599083, 'l2_leaf_reg': 6.02989458392604, 'border_count': 88, 'scale_pos_weight': 9.353297155569225, 'random_strength': 4.026235231205047, 'bagging_temperature': 6.639519254378118}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:36:57,025] Trial 96 finished with value: 0.6973352878372815 and parameters: {'iterations': 900, 'depth': 4, 'learning_rate': 0.12281329419983228, 'l2_leaf_reg': 6.777778062311446, 'border_count': 95, 'scale_pos_weight': 8.10399840625545, 'random_strength': 4.843584566768053, 'bagging_temperature': 5.2425198542402045}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:37:25,646] Trial 97 finished with value: 0.7861302470609816 and parameters: {'iterations': 1900, 'depth': 4, 'learning_rate': 0.0124093000989995, 'l2_leaf_reg': 5.65723285013104, 'border_count': 114, 'scale_pos_weight': 8.893502887940556, 'random_strength': 3.6179224057699133, 'bagging_temperature': 6.3085098173941105}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:38:05,435] Trial 98 finished with value: 0.7237907852105636 and parameters: {'iterations': 1800, 'depth': 9, 'learning_rate': 0.016839751052217293, 'l2_leaf_reg': 5.89999268201922, 'border_count': 123, 'scale_pos_weight': 2.1571999711769823, 'random_strength': 4.382345960006568, 'bagging_temperature': 0.4636848049752298}. Best is trial 18 with value: 0.7983542207136235.\n",
            "[I 2025-01-01 16:39:47,339] Trial 99 finished with value: 0.7582810517669734 and parameters: {'iterations': 1700, 'depth': 11, 'learning_rate': 0.051048428980198686, 'l2_leaf_reg': 6.9642641105652805, 'border_count': 108, 'scale_pos_weight': 9.845470305265568, 'random_strength': 2.8393218593816147, 'bagging_temperature': 7.469195984227679}. Best is trial 18 with value: 0.7983542207136235.\n"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Best parameters for CatBoost: {'iterations': 300, 'depth': 5, 'learning_rate': 0.08036661387166225, 'l2_leaf_reg': 7.642753734291704, 'border_count': 188, 'scale_pos_weight': 9.20588931160197, 'random_strength': 4.138011624949862, 'bagging_temperature': 8.852781096174283}\n"
          ]
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1000x600 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "           Model     Dataset  Accuracy  Precision  Sensitivity  Specificity  \\\n",
            "0  Random Forest  Out-Sample  0.814167   0.618304     0.417483     0.926814   \n",
            "1       LightGBM  Out-Sample  0.814500   0.628606     0.394122     0.933875   \n",
            "2        XGBoost  Out-Sample  0.814167   0.617778     0.418990     0.926386   \n",
            "3       CatBoost  Out-Sample  0.809500   0.594456     0.436323     0.915472   \n",
            "\n",
            "   F1 Score       AUC  \n",
            "0  0.498426  0.702777  \n",
            "1  0.484484  0.684120  \n",
            "2  0.499326  0.708073  \n",
            "3  0.503259  0.735917  \n"
          ]
        },
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Model</th>\n",
              "      <th>Dataset</th>\n",
              "      <th>Accuracy</th>\n",
              "      <th>Precision</th>\n",
              "      <th>Sensitivity</th>\n",
              "      <th>Specificity</th>\n",
              "      <th>F1 Score</th>\n",
              "      <th>AUC</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Random Forest</td>\n",
              "      <td>Out-Sample</td>\n",
              "      <td>0.814167</td>\n",
              "      <td>0.618304</td>\n",
              "      <td>0.417483</td>\n",
              "      <td>0.926814</td>\n",
              "      <td>0.498426</td>\n",
              "      <td>0.702777</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>LightGBM</td>\n",
              "      <td>Out-Sample</td>\n",
              "      <td>0.814500</td>\n",
              "      <td>0.628606</td>\n",
              "      <td>0.394122</td>\n",
              "      <td>0.933875</td>\n",
              "      <td>0.484484</td>\n",
              "      <td>0.684120</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>XGBoost</td>\n",
              "      <td>Out-Sample</td>\n",
              "      <td>0.814167</td>\n",
              "      <td>0.617778</td>\n",
              "      <td>0.418990</td>\n",
              "      <td>0.926386</td>\n",
              "      <td>0.499326</td>\n",
              "      <td>0.708073</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>CatBoost</td>\n",
              "      <td>Out-Sample</td>\n",
              "      <td>0.809500</td>\n",
              "      <td>0.594456</td>\n",
              "      <td>0.436323</td>\n",
              "      <td>0.915472</td>\n",
              "      <td>0.503259</td>\n",
              "      <td>0.735917</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Model     Dataset  Accuracy  Precision  Sensitivity  Specificity  \\\n",
              "0  Random Forest  Out-Sample  0.814167   0.618304     0.417483     0.926814   \n",
              "1       LightGBM  Out-Sample  0.814500   0.628606     0.394122     0.933875   \n",
              "2        XGBoost  Out-Sample  0.814167   0.617778     0.418990     0.926386   \n",
              "3       CatBoost  Out-Sample  0.809500   0.594456     0.436323     0.915472   \n",
              "\n",
              "   F1 Score       AUC  \n",
              "0  0.498426  0.702777  \n",
              "1  0.484484  0.684120  \n",
              "2  0.499326  0.708073  \n",
              "3  0.503259  0.735917  "
            ]
          },
          "execution_count": 58,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# Confusion Matrix\n",
        "def plot_confusion_matrix(cm, model_name):\n",
        "    plt.figure(figsize=(10, 6))\n",
        "    cmap = sns.color_palette(\"Blues\", as_cmap=True)\n",
        "\n",
        "    sns.heatmap(cm, annot=False, cmap=cmap, linewidths=0.5, linecolor='black', cbar=True)\n",
        "    plt.title(f'Confusion Matrix for {model_name}')\n",
        "    plt.xlabel('Predicted')\n",
        "    plt.ylabel('True')\n",
        "\n",
        "    plt.xticks([0.5, 1.5], ['Default', 'Non-default'], fontsize=12)\n",
        "    plt.yticks([0.5, 1.5], ['Default', 'Non-default'], fontsize=12)\n",
        "\n",
        "    cm_percentage = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\n",
        "    cm_percentage = np.round(cm_percentage * 100, 1)\n",
        "\n",
        "    for i in range(cm.shape[0]):\n",
        "        for j in range(cm.shape[1]):\n",
        "            count = cm[i, j]\n",
        "            percentage = cm_percentage[i, j]\n",
        "            text_color = 'white' if cmap((cm[i, j] - cm.min()) / (cm.max() - cm.min()))[0] < 0.5 else 'black'\n",
        "\n",
        "            plt.text(j + 0.5, i + 0.5, f'{count}\\n{percentage}%',\n",
        "                     horizontalalignment='center', verticalalignment='center',\n",
        "                     color=text_color, fontsize=14, fontweight='bold')\n",
        "\n",
        "    plt.show()\n",
        "\n",
        "# ROC Curve\n",
        "def plot_roc_curve(y_test, y_proba_test, model_name):\n",
        "    fpr, tpr, _ = roc_curve(y_test, y_proba_test)\n",
        "    roc_auc = roc_auc_score(y_test, y_proba_test)\n",
        "\n",
        "    plt.figure(figsize=(10, 6))\n",
        "    plt.plot(fpr, tpr, color='blue', lw=2, label=f'ROC Curve (area = {roc_auc:.2f})')\n",
        "    plt.plot([0, 1], [0, 1], color='lightblue', lw=2, linestyle='--')\n",
        "    plt.xlabel('False Positive Rate')\n",
        "    plt.ylabel('True Positive Rate')\n",
        "    plt.title(f'Receiver Operating Characteristic for {model_name}')\n",
        "    plt.legend(loc=\"lower right\")\n",
        "    plt.grid(False)\n",
        "    plt.show()\n",
        "\n",
        "# Precision-Recall Curve\n",
        "def plot_precision_recall_curve(y_test, y_proba_test, model_name):\n",
        "    precision, recall, _ = precision_recall_curve(y_test, y_proba_test)\n",
        "    avg_precision = average_precision_score(y_test, y_proba_test)\n",
        "\n",
        "    plt.figure(figsize=(10, 6))\n",
        "    plt.plot(recall, precision, color='green', lw=2, label=f'Precision-Recall Curve (AP = {avg_precision:.2f})')\n",
        "    plt.xlabel('Recall')\n",
        "    plt.ylabel('Precision')\n",
        "    plt.title(f'Precision-Recall Curve for {model_name}')\n",
        "    plt.legend(loc=\"lower left\")\n",
        "    plt.grid(False)\n",
        "    plt.show()\n",
        "\n",
        "# Đánh giá mô hình\n",
        "results_df = pd.DataFrame(columns=['Model', 'Dataset', 'Accuracy', 'Precision', 'Sensitivity', 'Specificity', 'F1 Score', 'AUC'])\n",
        "\n",
        "def evaluate_model(model_name, model, X_test, y_test):\n",
        "    y_pred = model.predict(X_test)\n",
        "    y_proba_test = model.predict_proba(X_test)[:, 1] if hasattr(model, \"predict_proba\") else None\n",
        "\n",
        "    accuracy_test = accuracy_score(y_test, y_pred)\n",
        "    precision_test = precision_score(y_test, y_pred)\n",
        "    recall_test = recall_score(y_test, y_pred)\n",
        "    f1_test = f1_score(y_test, y_pred)\n",
        "    cm_test = confusion_matrix(y_test, y_pred)\n",
        "    TN_test = cm_test[0, 0]\n",
        "    FP_test = cm_test[0, 1]\n",
        "    specificity_test = TN_test / (TN_test + FP_test)\n",
        "    auc_test = roc_auc_score(y_test, y_proba_test) if y_proba_test is not None else None\n",
        "\n",
        "    global results_df\n",
        "    results_df.loc[len(results_df)] = {\n",
        "        'Model': model_name,\n",
        "        'Dataset': 'Out-Sample',\n",
        "        'Accuracy': accuracy_test,\n",
        "        'Precision': precision_test,\n",
        "        'Sensitivity': recall_test,\n",
        "        'Specificity': specificity_test,\n",
        "        'F1 Score': f1_test,\n",
        "        'AUC': auc_test\n",
        "    }\n",
        "\n",
        "    plot_confusion_matrix(cm_test, model_name)\n",
        "    if y_proba_test is not None:\n",
        "        plot_roc_curve(y_test, y_proba_test, model_name)\n",
        "        plot_precision_recall_curve(y_test, y_proba_test, model_name)\n",
        "\n",
        "# Hàm tối ưu hóa siêu tham số và trả về mô hình tốt nhất\n",
        "def optimize_model(model_name, objective_fn, n_trials=100):\n",
        "    study = optuna.create_study(direction='maximize', pruner=optuna.pruners.MedianPruner())\n",
        "    study.optimize(objective_fn, n_trials=n_trials)\n",
        "    print(f\"Best parameters for {model_name}:\", study.best_params)\n",
        "    return study.best_params\n",
        "\n",
        "# Random Forest\n",
        "def objective_rf(trial):\n",
        "    param = {\n",
        "        'n_estimators': trial.suggest_int('n_estimators', 100, 500, step=50),\n",
        "        'max_depth': trial.suggest_int('max_depth', 5, 20),\n",
        "        'min_samples_split': trial.suggest_int('min_samples_split', 2, 20),\n",
        "        'min_samples_leaf': trial.suggest_int('min_samples_leaf', 1, 10),\n",
        "    }\n",
        "    model = RandomForestClassifier(**param, random_state=42)\n",
        "    model.fit(X_train, y_train)\n",
        "    y_pred = model.predict(X_test)\n",
        "    return f1_score(y_test, y_pred, average='weighted')\n",
        "\n",
        "best_params_rf = optimize_model('Random Forest', objective_rf)\n",
        "best_rf = RandomForestClassifier(**best_params_rf, random_state=42)\n",
        "best_rf.fit(X_train, y_train)\n",
        "evaluate_model(\"Random Forest\", best_rf, X_test, y_test)\n",
        "\n",
        "# LightGBM\n",
        "def objective_lgb(trial):\n",
        "    param = {\n",
        "        'n_estimators': trial.suggest_int('n_estimators', 100, 1000, step=50),\n",
        "        'max_depth': trial.suggest_int('max_depth', -1, 30),\n",
        "        'learning_rate': trial.suggest_float('learning_rate', 0.01, 0.3, log=True),\n",
        "        'num_leaves': trial.suggest_int('num_leaves', 31, 128),\n",
        "        'min_child_samples': trial.suggest_int('min_child_samples', 10, 50),\n",
        "        'subsample': trial.suggest_float('subsample', 0.6, 1.0),\n",
        "        'colsample_bytree': trial.suggest_float('colsample_bytree', 0.6, 1.0),\n",
        "        'class_weight': 'balanced',\n",
        "    }\n",
        "    model = lgb.LGBMClassifier(**param, random_state=42)\n",
        "    model.fit(X_train, y_train)\n",
        "    y_pred = model.predict(X_test)\n",
        "    return f1_score(y_test, y_pred, average='weighted')\n",
        "\n",
        "best_params_lgb = optimize_model('LightGBM', objective_lgb)\n",
        "best_lgb = lgb.LGBMClassifier(**best_params_lgb, random_state=42)\n",
        "best_lgb.fit(X_train, y_train)\n",
        "evaluate_model(\"LightGBM\", best_lgb, X_test, y_test)\n",
        "\n",
        "# XGBoost\n",
        "def objective_xgb(trial):\n",
        "    param = {\n",
        "        'n_estimators': trial.suggest_int('n_estimators', 100, 500, step=50),\n",
        "        'max_depth': trial.suggest_int('max_depth', 3, 15),\n",
        "        'learning_rate': trial.suggest_float('learning_rate', 0.001, 0.1, log=True),\n",
        "        'subsample': trial.suggest_float('subsample', 0.6, 1.0),\n",
        "        'colsample_bytree': trial.suggest_float('colsample_bytree', 0.6, 1.0),\n",
        "        'gamma': trial.suggest_float('gamma', 0, 5),\n",
        "        'min_child_weight': trial.suggest_int('min_child_weight', 1, 10),\n",
        "        'scale_pos_weight': trial.suggest_float('scale_pos_weight', 2.0, 10.0),\n",
        "        'reg_alpha': trial.suggest_float('reg_alpha', 0.0, 1.0),\n",
        "        'reg_lambda': trial.suggest_float('reg_lambda', 0.0, 1.0),\n",
        "    }\n",
        "    model = XGBClassifier(**param, use_label_encoder=False, eval_metric='logloss', random_state=42)\n",
        "    model.fit(X_train, y_train)\n",
        "    y_pred = model.predict(X_test)\n",
        "    return f1_score(y_test, y_pred, average='weighted')\n",
        "\n",
        "best_params_xgb = optimize_model('XGBoost', objective_xgb)\n",
        "best_xgb = XGBClassifier(**best_params_xgb, use_label_encoder=False, eval_metric='logloss', random_state=42)\n",
        "best_xgb.fit(X_train, y_train)\n",
        "evaluate_model(\"XGBoost\", best_xgb, X_test, y_test)\n",
        "\n",
        "# CatBoost\n",
        "from catboost import CatBoostClassifier\n",
        "\n",
        "def objective_catboost(trial):\n",
        "    param = {\n",
        "        'iterations': trial.suggest_int('iterations', 100, 2000, step=100),\n",
        "        'depth': trial.suggest_int('depth', 4, 12),\n",
        "        'learning_rate': trial.suggest_float('learning_rate', 0.01, 0.3, log=True),\n",
        "        'l2_leaf_reg': trial.suggest_float('l2_leaf_reg', 1, 10),\n",
        "        'border_count': trial.suggest_int('border_count', 32, 255),\n",
        "        'scale_pos_weight': trial.suggest_float('scale_pos_weight', 1.0, 10.0),\n",
        "        'random_strength': trial.suggest_float('random_strength', 0.0, 10.0),\n",
        "        'bagging_temperature': trial.suggest_float('bagging_temperature', 0.0, 10.0),\n",
        "    }\n",
        "    model = CatBoostClassifier(**param, verbose=0, random_state=42)\n",
        "    model.fit(X_train, y_train)\n",
        "    y_pred = model.predict(X_test)\n",
        "    return f1_score(y_test, y_pred, average='weighted')\n",
        "\n",
        "best_params_catboost = optimize_model('CatBoost', objective_catboost, n_trials=100)\n",
        "best_catboost = CatBoostClassifier(**best_params_catboost, verbose=0, random_state=42)\n",
        "best_catboost.fit(X_train, y_train)\n",
        "evaluate_model(\"CatBoost\", best_catboost, X_test, y_test)\n",
        "\n",
        "# Hiển thị kết quả tổng hợp\n",
        "print(results_df)\n",
        "results_df.query('Dataset == \"Out-Sample\"')"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true
    },
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.19"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}